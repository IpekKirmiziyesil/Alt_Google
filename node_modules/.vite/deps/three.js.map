{
  "version": 3,
  "sources": ["../../three/three.js"],
  "sourcesContent": ["var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '70' };\r\n\r\n// browserify support\r\n\r\nif ( typeof module === 'object' ) {\r\n\r\n\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n// polyfills\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : 0;\r\n\r\n\t};\r\n\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.NoShading = 0;\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n//  mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\nTHREE.MinEquation = 103;\r\nTHREE.MaxEquation = 104;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = 300;\r\n\r\nTHREE.CubeReflectionMapping = 301;\r\nTHREE.CubeRefractionMapping = 302;\r\n\r\nTHREE.EquirectangularReflectionMapping = 303;\r\nTHREE.EquirectangularRefractionMapping = 304;\r\n\r\nTHREE.SphericalReflectionMapping = 305;\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\r\n// DDS / ST3C Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n\r\n// PVRTC compressed texture formats\r\n\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\r\n\r\n// DEPRECATED\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\r\n\t}\r\n\r\n\treturn this.set( color )\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function ( h, s, l ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tif ( s === 0 ) {\r\n\r\n\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar hue2rgb = function ( p, q, t ) {\r\n\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\t// rgb(255,0,0)\r\n\r\n\t\tif ( /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec( style );\r\n\r\n\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// rgb(100%,0%,0%)\r\n\r\n\t\tif ( /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec( style );\r\n\r\n\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// #ff0000\r\n\r\n\t\tif ( /^\\#([0-9a-f]{6})$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^\\#([0-9a-f]{6})$/i.exec( style );\r\n\r\n\t\t\tthis.setHex( parseInt( color[ 1 ], 16 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// #f00\r\n\r\n\t\tif ( /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec( style );\r\n\r\n\t\t\tthis.setHex( parseInt( color[ 1 ] + color[ 1 ] + color[ 2 ] + color[ 2 ] + color[ 3 ] + color[ 3 ], 16 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// red\r\n\r\n\t\tif ( /^(\\w+)$/i.test( style ) ) {\r\n\r\n\t\t\tthis.setHex( THREE.ColorKeywords[ style ] );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color ) {\r\n\r\n\t\tthis.r = color.r * color.r;\r\n\t\tthis.g = color.g * color.g;\r\n\t\tthis.b = color.b * color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color ) {\r\n\r\n\t\tthis.r = Math.sqrt( color.r );\r\n\t\tthis.g = Math.sqrt( color.g );\r\n\t\tthis.b = Math.sqrt( color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.r = array[ 0 ];\r\n\t\tthis.g = array[ 1 ];\r\n\t\tthis.b = array[ 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\treturn [ this.r, this.g, this.b ];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Color().setRGB( this.r, this.g, this.b );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\t_x: 0,_y: 0, _z: 0, _w: 0,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\tthis.normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Quaternion( this._x, this._y, this._z, this._w );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n}\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclampScalar: ( function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function ( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t    if ( offset === undefined ) offset = 0;\r\n\r\n\t    index = index * attribute.itemSize + offset;\r\n\r\n\t    this.x = attribute.array[ index ];\r\n\t    this.y = attribute.array[ index + 1 ];\r\n\r\n\t    return this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Vector2( this.x, this.y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function ( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: ( function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function ( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t},\r\n\r\n\tsetEulerFromQuaternion: function ( q, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t},\r\n\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t},\r\n\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\r\n\t\treturn this.setFromMatrixScale( m );\r\n\t},\r\n\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\r\n\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\tthis.x = m.elements[ 12 ];\r\n\t\tthis.y = m.elements[ 13 ];\r\n\t\tthis.z = m.elements[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[  2 ] ).length();\r\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[  6 ] ).length();\r\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\r\n\t\tvar offset = index * 4;\r\n\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tthis.x = me[ offset ];\r\n\t\tthis.y = me[ offset + 1 ];\r\n\t\tthis.z = me[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t    if ( offset === undefined ) offset = 0;\r\n\r\n\t    index = index * attribute.itemSize + offset;\r\n\r\n\t    this.x = attribute.array[ index ];\r\n\t    this.y = attribute.array[ index + 1 ];\r\n\t    this.z = attribute.array[ index + 2 ];\r\n\r\n\t    return this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Vector3( this.x, this.y, this.z );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\t\t\tthis.w *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 1;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) { // m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) { // m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else { // m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w > v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < min.w ) {\r\n\r\n\t\t\tthis.w = min.w;\r\n\r\n\t\t} else if ( this.w > max.w ) {\r\n\r\n\t\t\tthis.w = max.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: ( function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function ( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n    floor: function () {\r\n\r\n        this.x = Math.floor( this.x );\r\n        this.y = Math.floor( this.y );\r\n        this.z = Math.floor( this.z );\r\n        this.w = Math.floor( this.w );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    ceil: function () {\r\n\r\n        this.x = Math.ceil( this.x );\r\n        this.y = Math.ceil( this.y );\r\n        this.z = Math.ceil( this.z );\r\n        this.w = Math.ceil( this.w );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    round: function () {\r\n\r\n        this.x = Math.round( this.x );\r\n        this.y = Math.round( this.y );\r\n        this.z = Math.round( this.z );\r\n        this.w = Math.round( this.w );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    roundToZero: function () {\r\n\r\n        this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n        this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n        this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n        this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t    if ( offset === undefined ) offset = 0;\r\n\r\n\t    index = index * attribute.itemSize + offset;\r\n\r\n\t    this.x = attribute.array[ index ];\r\n\t    this.y = attribute.array[ index + 1 ];\r\n\t    this.z = attribute.array[ index + 2 ];\r\n\t    this.w = attribute.array[ index + 3 ];\r\n\r\n\t    return this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Vector4( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\t_x: 0, _y: 0, _z: 0, _order: THREE.Euler.DefaultOrder,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\treturn [ this._x, this._y, this._z, this._order ];\r\n\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Euler( this._x, this._y, this._z, this._order );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Line3().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Box2().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and childrens', world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Box3().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset, il; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.x = array[ j ];\r\n\t\t\t\tv1.y = array[ j + 1 ];\r\n\t\t\t\tv1.z = array[ j + 2 ];\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tarray[ j ]     = v1.x;\r\n\t\t\t\tarray[ j + 1 ] = v1.y;\r\n\t\t\t\tarray[ j + 2 ] = v1.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n\t\tvar me = matrix.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\r\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n\t\t// no inverse\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1.0 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset     ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\r\n\t\tthis.getInverse( m ).transpose();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix3().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractPosition: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n \r\n \t\tvar te = this.elements;\r\n \r\n\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n \r\n \t\treturn this;\r\n \t\t\r\n \t},\r\n \r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t    return this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x = new THREE.Vector3();\r\n\t\tvar y = new THREE.Vector3();\r\n\t\tvar z = new THREE.Vector3();\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.length() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.length() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset, il; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.x = array[ j ];\r\n\t\t\t\tv1.y = array[ j + 1 ];\r\n\t\t\t\tv1.z = array[ j + 2 ];\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tarray[ j ]     = v1.x;\r\n\t\t\t\tarray[ j + 1 ] = v1.y;\r\n\t\t\t\tarray[ j + 2 ] = v1.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateAxis: function ( v ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n\t\tv.transformDirection( this );\r\n\r\n\t},\r\n\r\n\tcrossVector: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset     ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnInvertible ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\r\n\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n\t\tif ( det == 0 ) {\r\n\r\n\t\t\tvar msg = \"Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( v ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateX: function ( angle ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateY: function ( angle ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateZ: function ( angle ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateByAxis: function ( axis, angle ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\t\t\t\tsx = - sx;\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = right - left;\r\n\t\tvar h = top - bottom;\r\n\t\tvar p = far - near;\r\n\r\n\t\tvar x = ( right + left ) / w;\r\n\t\tvar y = ( top + bottom ) / h;\r\n\t\tvar z = ( far + near ) / p;\r\n\r\n\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceTo( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceTo( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0 \r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\tif ( denominator == 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) == 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectBox: function ( box , optionalTarget ) {\r\n\r\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n\t\tvar tmin,tmax,tymin,tymax,tzmin,tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Ray().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter )  {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n \t\t};\r\n\r\n\t}(),\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Sphere().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Frustum().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tisIntersectionLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator == 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) == 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant == this.constant );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Plane().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i == 8 || i == 13 || i == 18 || i == 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i == 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i == 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Clamp value to range <a, b>\r\n\r\n\tclamp: function ( x, a, b ) {\r\n\r\n\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\r\n\t},\r\n\r\n\t// Clamp value to range <a, inf)\r\n\r\n\tclampBottom: function ( x, a ) {\r\n\r\n\t\treturn x < a ? a : x;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\t// Random float from <0, 1> with 16 bits of randomness\r\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n\trandom16: function () {\r\n\r\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn Math.floor( this.randFloat( low, high ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function () {\r\n\r\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\t\treturn function ( degrees ) {\r\n\r\n\t\t\treturn degrees * degreeToRadiansFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tradToDeg: function () {\r\n\r\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\t\treturn function ( radians ) {\r\n\r\n\t\t\treturn radians * radianToDegreesFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint != oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\tlinearDistance, realDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycoordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// colinear or singular triangle\r\n\t\tif ( denom == 0 ) {\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycoordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Triangle().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {}\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tSprite: {},\r\n\t\t\tMesh: {},\r\n\t\t\tPointCloud: { threshold: 1 },\r\n\t\t\tLOD: {},\r\n\t\t\tLine: {}\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tvar descSort = function ( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t};\r\n\r\n\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tprecision: 0.0001,\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\t// camera is assumed _not_ to be a child of a transformed object\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.copy( camera.position );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( camera.position ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( objects instanceof Array === false ) {\r\n\r\n\t\t\t\tconsole.log( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = undefined;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar scope = this;\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tvar onRotationChange = function () {\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\t};\r\n\r\n\tvar onQuaternionChange = function () {\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\t};\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t},\r\n\t} );\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = true;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\r\n\tget eulerOrder () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\treturn this.rotation.order;\r\n\r\n\t},\r\n\r\n\tset eulerOrder ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\tthis.rotation.order = value;\r\n\r\n\t},\r\n\r\n\tget useQuaternion () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset useQuaternion ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( distance, axis ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t},\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add:\", object, \"can't be added as a child of itself.\" );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== undefined ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add:\", object, \"is not an instance of THREE.Object3D.\" );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = undefined;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetChildByName: function ( name, recursive ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name, recursive );\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id, recursive ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id, recursive );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name, recursive ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name, recursive );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value, recursive ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value, recursive );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tif ( this.parent ) {\r\n\r\n\t\t\tcallback( this.parent );\r\n\r\n\t\t\tthis.parent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === undefined ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.3,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'ObjectExporter'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tvar parseGeometry = function ( geometry ) {\r\n\r\n\t\t\tif ( output.geometries === undefined ) {\r\n\r\n\t\t\t\toutput.geometries = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometries[ geometry.uuid ] === undefined ) {\r\n\r\n\t\t\t\tvar json = geometry.toJSON();\r\n\r\n\t\t\t\tdelete json.metadata;\r\n\r\n\t\t\t\tgeometries[ geometry.uuid ] = json;\r\n\r\n\t\t\t\toutput.geometries.push( json );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry.uuid;\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tvar parseMaterial = function ( material ) {\r\n\r\n\t\t\tif ( output.materials === undefined ) {\r\n\r\n\t\t\t\toutput.materials = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materials[ material.uuid ] === undefined ) {\r\n\r\n\t\t\t\tvar json = material.toJSON();\r\n\r\n\t\t\t\tdelete json.metadata;\r\n\r\n\t\t\t\tmaterials[ material.uuid ] = json;\r\n\r\n\t\t\t\toutput.materials.push( json );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn material.uuid;\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tvar parseObject = function ( object ) {\r\n\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tdata.uuid = object.uuid;\r\n\t\t\tdata.type = object.type;\r\n\r\n\t\t\tif ( object.name !== '' ) data.name = object.name;\r\n\t\t\tif ( JSON.stringify( object.userData ) !== '{}' ) data.userData = object.userData;\r\n\t\t\tif ( object.visible !== true ) data.visible = object.visible;\r\n\r\n\t\t\tif ( object instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tdata.fov = object.fov;\r\n\t\t\t\tdata.aspect = object.aspect;\r\n\t\t\t\tdata.near = object.near;\r\n\t\t\t\tdata.far = object.far;\r\n\r\n\t\t\t} else if ( object instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tdata.left = object.left;\r\n\t\t\t\tdata.right = object.right;\r\n\t\t\t\tdata.top = object.top;\r\n\t\t\t\tdata.bottom = object.bottom;\r\n\t\t\t\tdata.near = object.near;\r\n\t\t\t\tdata.far = object.far;\r\n\r\n\t\t\t} else if ( object instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\r\n\t\t\t} else if ( object instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\t\t\t\tdata.intensity = object.intensity;\r\n\r\n\t\t\t} else if ( object instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\t\t\t\tdata.intensity = object.intensity;\r\n\t\t\t\tdata.distance = object.distance;\r\n\r\n\t\t\t} else if ( object instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\t\t\t\tdata.intensity = object.intensity;\r\n\t\t\t\tdata.distance = object.distance;\r\n\t\t\t\tdata.angle = object.angle;\r\n\t\t\t\tdata.exponent = object.exponent;\r\n\r\n\t\t\t} else if ( object instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\t\t\t\tdata.groundColor = object.groundColor.getHex();\r\n\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t\tdata.geometry = parseGeometry( object.geometry );\r\n\t\t\t\tdata.material = parseMaterial( object.material );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\t\tdata.geometry = parseGeometry( object.geometry );\r\n\t\t\t\tdata.material = parseMaterial( object.material );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\t\tdata.material = parseMaterial( object.material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdata.matrix = object.matrix.toArray();\r\n\r\n\t\t\tif ( object.children.length > 0 ) {\r\n\r\n\t\t\t\tdata.children = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\t\t\t\tdata.children.push( parseObject( object.children[ i ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = parseObject( this );\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function ( object, recursive ) {\r\n\r\n\t\tif ( object === undefined ) object = new THREE.Object3D();\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tobject.name = this.name;\r\n\r\n\t\tobject.up.copy( this.up );\r\n\r\n\t\tobject.position.copy( this.position );\r\n\t\tobject.quaternion.copy( this.quaternion );\r\n\t\tobject.scale.copy( this.scale );\r\n\r\n\t\tobject.rotationAutoUpdate = this.rotationAutoUpdate;\r\n\r\n\t\tobject.matrix.copy( this.matrix );\r\n\t\tobject.matrixWorld.copy( this.matrixWorld );\r\n\r\n\t\tobject.matrixAutoUpdate = this.matrixAutoUpdate;\r\n\t\tobject.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;\r\n\r\n\t\tobject.visible = this.visible;\r\n\r\n\t\tobject.castShadow = this.castShadow;\r\n\t\tobject.receiveShadow = this.receiveShadow;\r\n\r\n\t\tobject.frustumCulled = this.frustumCulled;\r\n\r\n\t\tobject.userData = JSON.parse( JSON.stringify( this.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tobject.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = normal instanceof Array ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = color instanceof Array ? color : [];\r\n\r\n\tthis.vertexTangents = [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar face = new THREE.Face3( this.a, this.b, this.c );\r\n\r\n\t\tface.normal.copy( this.normal );\r\n\t\tface.color.copy( this.color );\r\n\r\n\t\tface.materialIndex = this.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = this.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tface.vertexNormals[ i ] = this.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tface.vertexColors[ i ] = this.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.vertexTangents.length; i < il; i ++ ) {\r\n\r\n\t\t\tface.vertexTangents[ i ] = this.vertexTangents[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn face;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Face4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' )\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tthis.array.set( value );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index     ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index     ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index     ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.BufferAttribute( new this.array.constructor( this.array ), this.itemSize );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( data, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( data, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( data, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( data, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( data, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( data, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( data, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( data, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( data, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.attributes = {};\r\n\tthis.attributesKeys = [];\r\n\r\n\tthis.drawcalls = [];\r\n\tthis.offsets = this.drawcalls; // backwards compatibility\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.attributes[ name ] = { array: arguments[ 1 ], itemSize: arguments[ 2 ] };\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\t\tthis.attributesKeys = Object.keys( this.attributes );\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\tthis.drawcalls.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tindex: indexOffset !== undefined ? indexOffset : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\t// TODO\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry, settings ) {\r\n\r\n\t\tsettings = settings || { 'vertexColors': THREE.NoColors };\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\t\tvar vertexColors = settings.vertexColors;\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexNormals = faces[ 0 ].vertexNormals.length == 3;\r\n\r\n\t\tvar positions = new Float32Array( faces.length * 3 * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\t\tvar normals = new Float32Array( faces.length * 3 * 3 );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\r\n\t\tif ( vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\tvar colors = new Float32Array( faces.length * 3 * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( faces.length * 3 * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, i2 = 0, i3 = 0; i < faces.length; i ++, i2 += 6, i3 += 9 ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar a = vertices[ face.a ];\r\n\t\t\tvar b = vertices[ face.b ];\r\n\t\t\tvar c = vertices[ face.c ];\r\n\r\n\t\t\tpositions[ i3     ] = a.x;\r\n\t\t\tpositions[ i3 + 1 ] = a.y;\r\n\t\t\tpositions[ i3 + 2 ] = a.z;\r\n\r\n\t\t\tpositions[ i3 + 3 ] = b.x;\r\n\t\t\tpositions[ i3 + 4 ] = b.y;\r\n\t\t\tpositions[ i3 + 5 ] = b.z;\r\n\r\n\t\t\tpositions[ i3 + 6 ] = c.x;\r\n\t\t\tpositions[ i3 + 7 ] = c.y;\r\n\t\t\tpositions[ i3 + 8 ] = c.z;\r\n\r\n\t\t\tif ( hasFaceVertexNormals === true ) {\r\n\r\n\t\t\t\tvar na = face.vertexNormals[ 0 ];\r\n\t\t\t\tvar nb = face.vertexNormals[ 1 ];\r\n\t\t\t\tvar nc = face.vertexNormals[ 2 ];\r\n\r\n\t\t\t\tnormals[ i3     ] = na.x;\r\n\t\t\t\tnormals[ i3 + 1 ] = na.y;\r\n\t\t\t\tnormals[ i3 + 2 ] = na.z;\r\n\r\n\t\t\t\tnormals[ i3 + 3 ] = nb.x;\r\n\t\t\t\tnormals[ i3 + 4 ] = nb.y;\r\n\t\t\t\tnormals[ i3 + 5 ] = nb.z;\r\n\r\n\t\t\t\tnormals[ i3 + 6 ] = nc.x;\r\n\t\t\t\tnormals[ i3 + 7 ] = nc.y;\r\n\t\t\t\tnormals[ i3 + 8 ] = nc.z;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar n = face.normal;\r\n\r\n\t\t\t\tnormals[ i3     ] = n.x;\r\n\t\t\t\tnormals[ i3 + 1 ] = n.y;\r\n\t\t\t\tnormals[ i3 + 2 ] = n.z;\r\n\r\n\t\t\t\tnormals[ i3 + 3 ] = n.x;\r\n\t\t\t\tnormals[ i3 + 4 ] = n.y;\r\n\t\t\t\tnormals[ i3 + 5 ] = n.z;\r\n\r\n\t\t\t\tnormals[ i3 + 6 ] = n.x;\r\n\t\t\t\tnormals[ i3 + 7 ] = n.y;\r\n\t\t\t\tnormals[ i3 + 8 ] = n.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( vertexColors === THREE.FaceColors ) {\r\n\r\n\t\t\t\tvar fc = face.color;\r\n\r\n\t\t\t\tcolors[ i3     ] = fc.r;\r\n\t\t\t\tcolors[ i3 + 1 ] = fc.g;\r\n\t\t\t\tcolors[ i3 + 2 ] = fc.b;\r\n\r\n\t\t\t\tcolors[ i3 + 3 ] = fc.r;\r\n\t\t\t\tcolors[ i3 + 4 ] = fc.g;\r\n\t\t\t\tcolors[ i3 + 5 ] = fc.b;\r\n\r\n\t\t\t\tcolors[ i3 + 6 ] = fc.r;\r\n\t\t\t\tcolors[ i3 + 7 ] = fc.g;\r\n\t\t\t\tcolors[ i3 + 8 ] = fc.b;\r\n\r\n\t\t\t} else if ( vertexColors === THREE.VertexColors ) {\r\n\r\n\t\t\t\tvar vca = face.vertexColors[ 0 ];\r\n\t\t\t\tvar vcb = face.vertexColors[ 1 ];\r\n\t\t\t\tvar vcc = face.vertexColors[ 2 ];\r\n\r\n\t\t\t\tcolors[ i3     ] = vca.r;\r\n\t\t\t\tcolors[ i3 + 1 ] = vca.g;\r\n\t\t\t\tcolors[ i3 + 2 ] = vca.b;\r\n\r\n\t\t\t\tcolors[ i3 + 3 ] = vcb.r;\r\n\t\t\t\tcolors[ i3 + 4 ] = vcb.g;\r\n\t\t\t\tcolors[ i3 + 5 ] = vcb.b;\r\n\r\n\t\t\t\tcolors[ i3 + 6 ] = vcc.r;\r\n\t\t\t\tcolors[ i3 + 7 ] = vcc.g;\r\n\t\t\t\tcolors[ i3 + 8 ] = vcc.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar uva = faceVertexUvs[ 0 ][ i ][ 0 ];\r\n\t\t\t\tvar uvb = faceVertexUvs[ 0 ][ i ][ 1 ];\r\n\t\t\t\tvar uvc = faceVertexUvs[ 0 ][ i ][ 2 ];\r\n\r\n\t\t\t\tuvs[ i2     ] = uva.x;\r\n\t\t\t\tuvs[ i2 + 1 ] = uva.y;\r\n\r\n\t\t\t\tuvs[ i2 + 2 ] = uvb.x;\r\n\t\t\t\tuvs[ i2 + 3 ] = uvb.y;\r\n\r\n\t\t\t\tuvs[ i2 + 4 ] = uvc.x;\r\n\t\t\t\tuvs[ i2 + 5 ] = uvc.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeBoundingSphere()\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\tbb.makeEmpty();\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\t\t\t\tbb.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tbox.makeEmpty();\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\t\t\t\tbox.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox:  sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormals[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( attributes.index ) {\r\n\r\n\t\t\t\tvar indices = attributes.index.array;\r\n\r\n\t\t\t\tvar offsets = ( this.offsets.length > 0 ? this.offsets : [ { start: 0, count: indices.length, index: 0 } ] );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = offsets.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar start = offsets[ j ].start;\r\n\t\t\t\t\tvar count = offsets[ j ].count;\r\n\t\t\t\t\tvar index = offsets[ j ].index;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = ( index + indices[ i     ] ) * 3;\r\n\t\t\t\t\t\tvB = ( index + indices[ i + 1 ] ) * 3;\r\n\t\t\t\t\t\tvC = ( index + indices[ i + 2 ] ) * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA     ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB     ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC     ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i     ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\t// based on http://www.terathon.com/code/tangent.html\r\n\t\t// (per vertex tangents)\r\n\r\n\t\tif ( this.attributes.index === undefined ||\r\n\t\t\t this.attributes.position === undefined ||\r\n\t\t\t this.attributes.normal === undefined ||\r\n\t\t\t this.attributes.uv === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = this.attributes.index.array;\r\n\t\tvar positions = this.attributes.position.array;\r\n\t\tvar normals = this.attributes.normal.array;\r\n\t\tvar uvs = this.attributes.uv.array;\r\n\r\n\t\tvar nVertices = positions.length / 3;\r\n\r\n\t\tif ( this.attributes.tangent === undefined ) {\r\n\r\n\t\t\tthis.addAttribute( 'tangent', new THREE.BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar tangents = this.attributes.tangent.array;\r\n\r\n\t\tvar tan1 = [], tan2 = [];\r\n\r\n\t\tfor ( var k = 0; k < nVertices; k ++ ) {\r\n\r\n\t\t\ttan1[ k ] = new THREE.Vector3();\r\n\t\t\ttan2[ k ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tvar vA = new THREE.Vector3(),\r\n\t\t\tvB = new THREE.Vector3(),\r\n\t\t\tvC = new THREE.Vector3(),\r\n\r\n\t\t\tuvA = new THREE.Vector2(),\r\n\t\t\tuvB = new THREE.Vector2(),\r\n\t\t\tuvC = new THREE.Vector2(),\r\n\r\n\t\t\tx1, x2, y1, y2, z1, z2,\r\n\t\t\ts1, s2, t1, t2, r;\r\n\r\n\t\tvar sdir = new THREE.Vector3(), tdir = new THREE.Vector3();\r\n\r\n\t\tfunction handleTriangle( a, b, c ) {\r\n\r\n\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\r\n\t\t\tx1 = vB.x - vA.x;\r\n\t\t\tx2 = vC.x - vA.x;\r\n\r\n\t\t\ty1 = vB.y - vA.y;\r\n\t\t\ty2 = vC.y - vA.y;\r\n\r\n\t\t\tz1 = vB.z - vA.z;\r\n\t\t\tz2 = vC.z - vA.z;\r\n\r\n\t\t\ts1 = uvB.x - uvA.x;\r\n\t\t\ts2 = uvC.x - uvA.x;\r\n\r\n\t\t\tt1 = uvB.y - uvA.y;\r\n\t\t\tt2 = uvC.y - uvA.y;\r\n\r\n\t\t\tr = 1.0 / ( s1 * t2 - s2 * t1 );\r\n\r\n\t\t\tsdir.set(\r\n\t\t\t\t( t2 * x1 - t1 * x2 ) * r,\r\n\t\t\t\t( t2 * y1 - t1 * y2 ) * r,\r\n\t\t\t\t( t2 * z1 - t1 * z2 ) * r\r\n\t\t\t);\r\n\r\n\t\t\ttdir.set(\r\n\t\t\t\t( s1 * x2 - s2 * x1 ) * r,\r\n\t\t\t\t( s1 * y2 - s2 * y1 ) * r,\r\n\t\t\t\t( s1 * z2 - s2 * z1 ) * r\r\n\t\t\t);\r\n\r\n\t\t\ttan1[ a ].add( sdir );\r\n\t\t\ttan1[ b ].add( sdir );\r\n\t\t\ttan1[ c ].add( sdir );\r\n\r\n\t\t\ttan2[ a ].add( tdir );\r\n\t\t\ttan2[ b ].add( tdir );\r\n\t\t\ttan2[ c ].add( tdir );\r\n\r\n\t\t}\r\n\r\n\t\tvar i, il;\r\n\t\tvar j, jl;\r\n\t\tvar iA, iB, iC;\r\n\r\n\t\tif ( this.drawcalls.length === 0 ) {\r\n\r\n\t\t\tthis.addDrawCall( 0, indices.length, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tvar drawcalls = this.drawcalls;\r\n\r\n\t\tfor ( j = 0, jl = drawcalls.length; j < jl; ++ j ) {\r\n\r\n\t\t\tvar start = drawcalls[ j ].start;\r\n\t\t\tvar count = drawcalls[ j ].count;\r\n\t\t\tvar index = drawcalls[ j ].index;\r\n\r\n\t\t\tfor ( i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\tiA = index + indices[ i ];\r\n\t\t\t\tiB = index + indices[ i + 1 ];\r\n\t\t\t\tiC = index + indices[ i + 2 ];\r\n\r\n\t\t\t\thandleTriangle( iA, iB, iC );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar tmp = new THREE.Vector3(), tmp2 = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3(), n2 = new THREE.Vector3();\r\n\t\tvar w, t, test;\r\n\r\n\t\tfunction handleVertex( v ) {\r\n\r\n\t\t\tn.fromArray( normals, v * 3 );\r\n\t\t\tn2.copy( n );\r\n\r\n\t\t\tt = tan1[ v ];\r\n\r\n\t\t\t// Gram-Schmidt orthogonalize\r\n\r\n\t\t\ttmp.copy( t );\r\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n\r\n\t\t\t// Calculate handedness\r\n\r\n\t\t\ttmp2.crossVectors( n2, t );\r\n\t\t\ttest = tmp2.dot( tan2[ v ] );\r\n\t\t\tw = ( test < 0.0 ) ? - 1.0 : 1.0;\r\n\r\n\t\t\ttangents[ v * 4     ] = tmp.x;\r\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\r\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\r\n\t\t\ttangents[ v * 4 + 3 ] = w;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( j = 0, jl = drawcalls.length; j < jl; ++ j ) {\r\n\r\n\t\t\tvar start = drawcalls[ j ].start;\r\n\t\t\tvar count = drawcalls[ j ].count;\r\n\t\t\tvar index = drawcalls[ j ].index;\r\n\r\n\t\t\tfor ( i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\tiA = index + indices[ i ];\r\n\t\t\t\tiB = index + indices[ i + 1 ];\r\n\t\t\t\tiC = index + indices[ i + 2 ];\r\n\r\n\t\t\t\thandleVertex( iA );\r\n\t\t\t\thandleVertex( iB );\r\n\t\t\t\thandleVertex( iC );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/*\r\n\t\tcomputeOffsets\r\n\t\tCompute the draw offset for large models by chunking the index buffer into chunks of 65k addressable vertices.\r\n\t\tThis method will effectively rewrite the index buffer and remap all attributes to match the new indices.\r\n\t\tWARNING: This method will also expand the vertex count to prevent sprawled triangles across draw offsets.\r\n\t\tindexBufferSize - Defaults to 65535, but allows for larger or smaller chunks.\r\n\t*/\r\n\tcomputeOffsets: function ( indexBufferSize ) {\r\n\r\n\t\tvar size = indexBufferSize;\r\n\t\tif ( indexBufferSize === undefined )\r\n\t\t\tsize = 65535; //WebGL limits type of index buffer values to 16-bit.\r\n\r\n\t\tvar s = Date.now();\r\n\r\n\t\tvar indices = this.attributes.index.array;\r\n\t\tvar vertices = this.attributes.position.array;\r\n\r\n\t\tvar verticesCount = ( vertices.length / 3 );\r\n\t\tvar facesCount = ( indices.length / 3 );\r\n\r\n\t\t/*\r\n\t\tconsole.log(\"Computing buffers in offsets of \"+size+\" -> indices:\"+indices.length+\" vertices:\"+vertices.length);\r\n\t\tconsole.log(\"Faces to process: \"+(indices.length/3));\r\n\t\tconsole.log(\"Reordering \"+verticesCount+\" vertices.\");\r\n\t\t*/\r\n\r\n\t\tvar sortedIndices = new Uint16Array( indices.length ); //16-bit buffers\r\n\t\tvar indexPtr = 0;\r\n\t\tvar vertexPtr = 0;\r\n\r\n\t\tvar offsets = [ { start:0, count:0, index:0 } ];\r\n\t\tvar offset = offsets[ 0 ];\r\n\r\n\t\tvar duplicatedVertices = 0;\r\n\t\tvar newVerticeMaps = 0;\r\n\t\tvar faceVertices = new Int32Array( 6 );\r\n\t\tvar vertexMap = new Int32Array( vertices.length );\r\n\t\tvar revVertexMap = new Int32Array( vertices.length );\r\n\t\tfor ( var j = 0; j < vertices.length; j ++ ) { vertexMap[ j ] = - 1; revVertexMap[ j ] = - 1; }\r\n\r\n\t\t/*\r\n\t\t\tTraverse every face and reorder vertices in the proper offsets of 65k.\r\n\t\t\tWe can have more than 65k entries in the index buffer per offset, but only reference 65k values.\r\n\t\t*/\r\n\t\tfor ( var findex = 0; findex < facesCount; findex ++ ) {\r\n\t\t\tnewVerticeMaps = 0;\r\n\r\n\t\t\tfor ( var vo = 0; vo < 3; vo ++ ) {\r\n\t\t\t\tvar vid = indices[ findex * 3 + vo ];\r\n\t\t\t\tif ( vertexMap[ vid ] == - 1 ) {\r\n\t\t\t\t\t//Unmapped vertice\r\n\t\t\t\t\tfaceVertices[ vo * 2 ] = vid;\r\n\t\t\t\t\tfaceVertices[ vo * 2 + 1 ] = - 1;\r\n\t\t\t\t\tnewVerticeMaps ++;\r\n\t\t\t\t} else if ( vertexMap[ vid ] < offset.index ) {\r\n\t\t\t\t\t//Reused vertices from previous block (duplicate)\r\n\t\t\t\t\tfaceVertices[ vo * 2 ] = vid;\r\n\t\t\t\t\tfaceVertices[ vo * 2 + 1 ] = - 1;\r\n\t\t\t\t\tduplicatedVertices ++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Reused vertice in the current block\r\n\t\t\t\t\tfaceVertices[ vo * 2 ] = vid;\r\n\t\t\t\t\tfaceVertices[ vo * 2 + 1 ] = vertexMap[ vid ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar faceMax = vertexPtr + newVerticeMaps;\r\n\t\t\tif ( faceMax > ( offset.index + size ) ) {\r\n\t\t\t\tvar new_offset = { start:indexPtr, count:0, index:vertexPtr };\r\n\t\t\t\toffsets.push( new_offset );\r\n\t\t\t\toffset = new_offset;\r\n\r\n\t\t\t\t//Re-evaluate reused vertices in light of new offset.\r\n\t\t\t\tfor ( var v = 0; v < 6; v += 2 ) {\r\n\t\t\t\t\tvar new_vid = faceVertices[ v + 1 ];\r\n\t\t\t\t\tif ( new_vid > - 1 && new_vid < offset.index )\r\n\t\t\t\t\t\tfaceVertices[ v + 1 ] = - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//Reindex the face.\r\n\t\t\tfor ( var v = 0; v < 6; v += 2 ) {\r\n\t\t\t\tvar vid = faceVertices[ v ];\r\n\t\t\t\tvar new_vid = faceVertices[ v + 1 ];\r\n\r\n\t\t\t\tif ( new_vid === - 1 )\r\n\t\t\t\t\tnew_vid = vertexPtr ++;\r\n\r\n\t\t\t\tvertexMap[ vid ] = new_vid;\r\n\t\t\t\trevVertexMap[ new_vid ] = vid;\r\n\t\t\t\tsortedIndices[ indexPtr ++ ] = new_vid - offset.index; //XXX overflows at 16bit\r\n\t\t\t\toffset.count ++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Move all attribute values to map to the new computed indices , also expand the vertice stack to match our new vertexPtr. */\r\n\t\tthis.reorderBuffers( sortedIndices, revVertexMap, vertexPtr );\r\n\t\tthis.offsets = offsets;\r\n\r\n\t\t/*\r\n\t\tvar orderTime = Date.now();\r\n\t\tconsole.log(\"Reorder time: \"+(orderTime-s)+\"ms\");\r\n\t\tconsole.log(\"Duplicated \"+duplicatedVertices+\" vertices.\");\r\n\t\tconsole.log(\"Compute Buffers time: \"+(Date.now()-s)+\"ms\");\r\n\t\tconsole.log(\"Draw offsets: \"+offsets.length);\r\n\t\t*/\r\n\r\n\t\treturn offsets;\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i     ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/*\r\n\t\treoderBuffers:\r\n\t\tReorder attributes based on a new indexBuffer and indexMap.\r\n\t\tindexBuffer - Uint16Array of the new ordered indices.\r\n\t\tindexMap - Int32Array where the position is the new vertex ID and the value the old vertex ID for each vertex.\r\n\t\tvertexCount - Amount of total vertices considered in this reordering (in case you want to grow the vertice stack).\r\n\t*/\r\n\treorderBuffers: function ( indexBuffer, indexMap, vertexCount ) {\r\n\r\n\t\t/* Create a copy of all attributes for reordering. */\r\n\t\tvar sortedAttributes = {};\r\n\t\tfor ( var attr in this.attributes ) {\r\n\t\t\tif ( attr == 'index' )\r\n\t\t\t\tcontinue;\r\n\t\t\tvar sourceArray = this.attributes[ attr ].array;\r\n\t\t\tsortedAttributes[ attr ] = new sourceArray.constructor( this.attributes[ attr ].itemSize * vertexCount );\r\n\t\t}\r\n\r\n\t\t/* Move attribute positions based on the new index map */\r\n\t\tfor ( var new_vid = 0; new_vid < vertexCount; new_vid ++ ) {\r\n\t\t\tvar vid = indexMap[ new_vid ];\r\n\t\t\tfor ( var attr in this.attributes ) {\r\n\t\t\t\tif ( attr == 'index' )\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tvar attrArray = this.attributes[ attr ].array;\r\n\t\t\t\tvar attrSize = this.attributes[ attr ].itemSize;\r\n\t\t\t\tvar sortedAttr = sortedAttributes[ attr ];\r\n\t\t\t\tfor ( var k = 0; k < attrSize; k ++ )\r\n\t\t\t\t\tsortedAttr[ new_vid * attrSize + k ] = attrArray[ vid * attrSize + k ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Carry the new sorted buffers locally */\r\n\t\tthis.attributes[ 'index' ].array = indexBuffer;\r\n\t\tfor ( var attr in this.attributes ) {\r\n\t\t\tif ( attr == 'index' )\r\n\t\t\t\tcontinue;\r\n\t\t\tthis.attributes[ attr ].array = sortedAttributes[ attr ];\r\n\t\t\tthis.attributes[ attr ].numItems = this.attributes[ attr ].itemSize * vertexCount;\r\n\t\t}\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.0,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometryExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tdata: {\r\n\t\t\t\tattributes: {}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar offsets = this.offsets;\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = [], typeArray = attribute.array;\r\n\r\n\t\t\tfor ( var i = 0, l = typeArray.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = typeArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( offsets.length > 0 ) {\r\n\r\n\t\t\toutput.data.offsets = JSON.parse( JSON.stringify( offsets ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\toutput.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tfor ( var attr in this.attributes ) {\r\n\r\n\t\t\tvar sourceAttr = this.attributes[ attr ];\r\n\t\t\tgeometry.addAttribute( attr, sourceAttr.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar offset = this.offsets[ i ];\r\n\r\n\t\t\tgeometry.offsets.push( {\r\n\r\n\t\t\t\tstart: offset.start,\r\n\t\t\t\tindex: offset.index,\r\n\t\t\t\tcount: offset.count\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];  // one-to-one vertex colors, used in Points and Line\r\n\r\n\tthis.faces = [];\r\n\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphColors = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.hasTangents = false;\r\n\r\n\tthis.dynamic = true; // the intermediate typed arrays will be deleted when set to false\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.tangentsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox instanceof THREE.Box3 ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere instanceof THREE.Sphere ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar vertices = attributes.position.array;\r\n\t\tvar indices = attributes.index !== undefined ? attributes.index.array : undefined;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\r\n\t\tfor ( var i = 0, j = 0; i < vertices.length; i += 3, j += 2 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar addFace = function ( a, b, c ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c, vertexNormals, vertexColors ) );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = new THREE.Vector3();\r\n\r\n\t\toffset.addVectors( this.boundingBox.min, this.boundingBox.max );\r\n\t\toffset.multiplyScalar( - 0.5 );\r\n\r\n\t\tthis.applyMatrix( new THREE.Matrix4().makeTranslation( offset.x, offset.y, offset.z ) );\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC, vD;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3(),\r\n\t\t\t\tdb = new THREE.Vector3(), dc = new THREE.Vector3(), bc = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.vertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\tface.vertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\tface.vertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\t// based on http://www.terathon.com/code/tangent.html\r\n\t\t// tangents go to vertices\r\n\r\n\t\tvar f, fl, v, vl, i, il, vertexIndex,\r\n\t\t\tface, uv, vA, vB, vC, uvA, uvB, uvC,\r\n\t\t\tx1, x2, y1, y2, z1, z2,\r\n\t\t\ts1, s2, t1, t2, r, t, test,\r\n\t\t\ttan1 = [], tan2 = [],\r\n\t\t\tsdir = new THREE.Vector3(), tdir = new THREE.Vector3(),\r\n\t\t\ttmp = new THREE.Vector3(), tmp2 = new THREE.Vector3(),\r\n\t\t\tn = new THREE.Vector3(), w;\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\ttan1[ v ] = new THREE.Vector3();\r\n\t\t\ttan2[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTriangle( context, a, b, c, ua, ub, uc ) {\r\n\r\n\t\t\tvA = context.vertices[ a ];\r\n\t\t\tvB = context.vertices[ b ];\r\n\t\t\tvC = context.vertices[ c ];\r\n\r\n\t\t\tuvA = uv[ ua ];\r\n\t\t\tuvB = uv[ ub ];\r\n\t\t\tuvC = uv[ uc ];\r\n\r\n\t\t\tx1 = vB.x - vA.x;\r\n\t\t\tx2 = vC.x - vA.x;\r\n\t\t\ty1 = vB.y - vA.y;\r\n\t\t\ty2 = vC.y - vA.y;\r\n\t\t\tz1 = vB.z - vA.z;\r\n\t\t\tz2 = vC.z - vA.z;\r\n\r\n\t\t\ts1 = uvB.x - uvA.x;\r\n\t\t\ts2 = uvC.x - uvA.x;\r\n\t\t\tt1 = uvB.y - uvA.y;\r\n\t\t\tt2 = uvC.y - uvA.y;\r\n\r\n\t\t\tr = 1.0 / ( s1 * t2 - s2 * t1 );\r\n\t\t\tsdir.set( ( t2 * x1 - t1 * x2 ) * r,\r\n\t\t\t\t\t  ( t2 * y1 - t1 * y2 ) * r,\r\n\t\t\t\t\t  ( t2 * z1 - t1 * z2 ) * r );\r\n\t\t\ttdir.set( ( s1 * x2 - s2 * x1 ) * r,\r\n\t\t\t\t\t  ( s1 * y2 - s2 * y1 ) * r,\r\n\t\t\t\t\t  ( s1 * z2 - s2 * z1 ) * r );\r\n\r\n\t\t\ttan1[ a ].add( sdir );\r\n\t\t\ttan1[ b ].add( sdir );\r\n\t\t\ttan1[ c ].add( sdir );\r\n\r\n\t\t\ttan2[ a ].add( tdir );\r\n\t\t\ttan2[ b ].add( tdir );\r\n\t\t\ttan2[ c ].add( tdir );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\t\t\tuv = this.faceVertexUvs[ 0 ][ f ]; // use UV layer 0 for tangents\r\n\r\n\t\t\thandleTriangle( this, face.a, face.b, face.c, 0, 1, 2 );\r\n\r\n\t\t}\r\n\r\n\t\tvar faceIndex = [ 'a', 'b', 'c', 'd' ];\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tfor ( i = 0; i < Math.min( face.vertexNormals.length, 3 ); i ++ ) {\r\n\r\n\t\t\t\tn.copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\tvertexIndex = face[ faceIndex[ i ] ];\r\n\r\n\t\t\t\tt = tan1[ vertexIndex ];\r\n\r\n\t\t\t\t// Gram-Schmidt orthogonalize\r\n\r\n\t\t\t\ttmp.copy( t );\r\n\t\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n\r\n\t\t\t\t// Calculate handedness\r\n\r\n\t\t\t\ttmp2.crossVectors( face.vertexNormals[ i ], t );\r\n\t\t\t\ttest = tmp2.dot( tan2[ vertexIndex ] );\r\n\t\t\t\tw = ( test < 0.0 ) ? - 1.0 : 1.0;\r\n\r\n\t\t\t\tface.vertexTangents[ i ] = new THREE.Vector4( tmp.x, tmp.y, tmp.z, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.hasTangents = true;\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertice by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, eg. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i,il, face;\r\n\t\tvar indices, k, j, jl, u;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\t\t\t\tif ( indices[ n ] == indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.0,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometryExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type\r\n\t\t};\r\n\r\n\t\tif ( this.name !== \"\" ) output.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) output[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\r\n\r\n\t\t\t/*\r\n\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\tfaces.push( face.materialIndex );\r\n\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\toutput.data = {};\r\n\r\n\t\toutput.data.vertices = vertices;\r\n\t\toutput.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) output.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) output.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\toutput.data.faces = faces;\r\n\r\n\t\t//\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar geometry = new THREE.Geometry();\r\n\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tgeometry.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = this.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tgeometry.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = this.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( geometry.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t}\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function ( camera ) {\r\n\r\n\tif ( camera === undefined ) camera = new THREE.Camera();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, camera );\r\n\r\n\tcamera.matrixWorldInverse.copy( this.matrixWorldInverse );\r\n\tcamera.projectionMatrix.copy( this.projectionMatrix );\r\n\r\n\treturn camera;\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\r\n\t\trenderTarget.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\tvar cx = ( this.right + this.left ) / 2;\r\n\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.clone = function () {\r\n\r\n\tvar camera = new THREE.OrthographicCamera();\r\n\r\n\tTHREE.Camera.prototype.clone.call( this, camera );\r\n\r\n\tcamera.zoom = this.zoom;\r\n\r\n\tcamera.left = this.left;\r\n\tcamera.right = this.right;\r\n\tcamera.top = this.top;\r\n\tcamera.bottom = this.bottom;\r\n\r\n\tcamera.near = this.near;\r\n\tcamera.far = this.far;\r\n\r\n\tcamera.projectionMatrix.copy( this.projectionMatrix );\r\n\r\n\treturn camera;\r\n};\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (fullframe) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n}\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.clone = function () {\r\n\r\n\tvar camera = new THREE.PerspectiveCamera();\r\n\r\n\tTHREE.Camera.prototype.clone.call( this, camera );\r\n\r\n\tcamera.zoom = this.zoom;\r\n\r\n\tcamera.fov = this.fov;\r\n\tcamera.aspect = this.aspect;\r\n\tcamera.near = this.near;\r\n\tcamera.far = this.far;\r\n\r\n\tcamera.projectionMatrix.copy( this.projectionMatrix );\r\n\r\n\treturn camera;\r\n\r\n};\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\t\r\n\tthis.color = new THREE.Color( color );\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Light.prototype.constructor = THREE.Light;\r\n\r\nTHREE.Light.prototype.clone = function ( light ) {\r\n\r\n\tif ( light === undefined ) light = new THREE.Light();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, light );\r\n\r\n\tlight.color.copy( this.color );\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\r\nTHREE.AmbientLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.AmbientLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/AreaLight.js\r\n\r\n/**\r\n * @author MPanknin / http://www.redplant.de/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.AreaLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AreaLight';\r\n\r\n\tthis.normal = new THREE.Vector3( 0, - 1, 0 );\r\n\tthis.right = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.width = 1.0;\r\n\tthis.height = 1.0;\r\n\r\n\tthis.constantAttenuation = 1.5;\r\n\tthis.linearAttenuation = 0.5;\r\n\tthis.quadraticAttenuation = 0.1;\r\n\r\n};\r\n\r\nTHREE.AreaLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AreaLight.prototype.constructor = THREE.AreaLight;\r\n\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\t//\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\r\n\tthis.shadowCameraLeft = - 500;\r\n\tthis.shadowCameraRight = 500;\r\n\tthis.shadowCameraTop = 500;\r\n\tthis.shadowCameraBottom = - 500;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\t//\r\n\r\n\tthis.shadowCascade = false;\r\n\r\n\tthis.shadowCascadeOffset = new THREE.Vector3( 0, 0, - 1000 );\r\n\tthis.shadowCascadeCount = 2;\r\n\r\n\tthis.shadowCascadeBias = [ 0, 0, 0 ];\r\n\tthis.shadowCascadeWidth = [ 512, 512, 512 ];\r\n\tthis.shadowCascadeHeight = [ 512, 512, 512 ];\r\n\r\n\tthis.shadowCascadeNearZ = [ - 1.000, 0.990, 0.998 ];\r\n\tthis.shadowCascadeFarZ  = [  0.990, 0.998, 1.000 ];\r\n\r\n\tthis.shadowCascadeArray = [];\r\n\r\n\t//\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\r\nTHREE.DirectionalLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.DirectionalLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.target = this.target.clone();\r\n\r\n\tlight.intensity = this.intensity;\r\n\r\n\tlight.castShadow = this.castShadow;\r\n\tlight.onlyShadow = this.onlyShadow;\r\n\r\n\t//\r\n\r\n\tlight.shadowCameraNear = this.shadowCameraNear;\r\n\tlight.shadowCameraFar = this.shadowCameraFar;\r\n\r\n\tlight.shadowCameraLeft = this.shadowCameraLeft;\r\n\tlight.shadowCameraRight = this.shadowCameraRight;\r\n\tlight.shadowCameraTop = this.shadowCameraTop;\r\n\tlight.shadowCameraBottom = this.shadowCameraBottom;\r\n\r\n\tlight.shadowCameraVisible = this.shadowCameraVisible;\r\n\r\n\tlight.shadowBias = this.shadowBias;\r\n\tlight.shadowDarkness = this.shadowDarkness;\r\n\r\n\tlight.shadowMapWidth = this.shadowMapWidth;\r\n\tlight.shadowMapHeight = this.shadowMapHeight;\r\n\r\n\t//\r\n\r\n\tlight.shadowCascade = this.shadowCascade;\r\n\r\n\tlight.shadowCascadeOffset.copy( this.shadowCascadeOffset );\r\n\tlight.shadowCascadeCount = this.shadowCascadeCount;\r\n\r\n\tlight.shadowCascadeBias = this.shadowCascadeBias.slice( 0 );\r\n\tlight.shadowCascadeWidth = this.shadowCascadeWidth.slice( 0 );\r\n\tlight.shadowCascadeHeight = this.shadowCascadeHeight.slice( 0 );\r\n\r\n\tlight.shadowCascadeNearZ = this.shadowCascadeNearZ.slice( 0 );\r\n\tlight.shadowCascadeFarZ  = this.shadowCascadeFarZ.slice( 0 );\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.position.set( 0, 100, 0 );\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\r\nTHREE.HemisphereLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.HemisphereLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.groundColor.copy( this.groundColor );\r\n\tlight.intensity = this.intensity;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLight = function ( color, intensity, distance ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\r\nTHREE.PointLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.PointLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.intensity = this.intensity;\r\n\tlight.distance = this.distance;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\t//\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\tthis.shadowCameraFov = 50;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\t//\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\r\nTHREE.SpotLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.SpotLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.target = this.target.clone();\r\n\r\n\tlight.intensity = this.intensity;\r\n\tlight.distance = this.distance;\r\n\tlight.angle = this.angle;\r\n\tlight.exponent = this.exponent;\r\n\r\n\tlight.castShadow = this.castShadow;\r\n\tlight.onlyShadow = this.onlyShadow;\r\n\r\n\t//\r\n\r\n\tlight.shadowCameraNear = this.shadowCameraNear;\r\n\tlight.shadowCameraFar = this.shadowCameraFar;\r\n\tlight.shadowCameraFov = this.shadowCameraFov;\r\n\r\n\tlight.shadowCameraVisible = this.shadowCameraVisible;\r\n\r\n\tlight.shadowBias = this.shadowBias;\r\n\tlight.shadowDarkness = this.shadowDarkness;\r\n\r\n\tlight.shadowMapWidth = this.shadowMapWidth;\r\n\tlight.shadowMapHeight = this.shadowMapHeight;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = function () {\r\n\r\n\tthis.files = {};\r\n\r\n};\r\n\r\nTHREE.Cache.prototype = {\r\n\r\n\tconstructor: THREE.Cache,\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function ( showStatus ) {\r\n\r\n\tthis.showStatus = showStatus;\r\n\tthis.statusDomElement = showStatus ? THREE.Loader.prototype.addStatusElement() : null;\r\n\r\n\tthis.imageLoader = new THREE.ImageLoader();\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\taddStatusElement: function () {\r\n\r\n\t\tvar e = document.createElement( 'div' );\r\n\r\n\t\te.style.position = 'absolute';\r\n\t\te.style.right = '0px';\r\n\t\te.style.top = '0px';\r\n\t\te.style.fontSize = '0.8em';\r\n\t\te.style.textAlign = 'left';\r\n\t\te.style.background = 'rgba(0,0,0,0.25)';\r\n\t\te.style.color = '#fff';\r\n\t\te.style.width = '120px';\r\n\t\te.style.padding = '0.5em 0.5em 0.5em 0.5em';\r\n\t\te.style.zIndex = 1000;\r\n\r\n\t\te.innerHTML = 'Loading ...';\r\n\r\n\t\treturn e;\r\n\r\n\t},\r\n\r\n\tupdateProgress: function ( progress ) {\r\n\r\n\t\tvar message = 'Loaded ';\r\n\r\n\t\tif ( progress.total ) {\r\n\r\n\t\t\tmessage += ( 100 * progress.loaded / progress.total ).toFixed( 0 ) + '%';\r\n\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmessage += ( progress.loaded / 1024 ).toFixed( 2 ) + ' KB';\r\n\r\n\t\t}\r\n\r\n\t\tthis.statusDomElement.innerHTML = message;\r\n\r\n\t},\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tneedsTangents: function ( materials ) {\r\n\r\n\t\tfor ( var i = 0, il = materials.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar m = materials[ i ];\r\n\r\n\t\t\tif ( m instanceof THREE.ShaderMaterial ) return true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: function ( m, texturePath ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tfunction nearest_pow2( n ) {\r\n\r\n\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\tvar fullPath = texturePath + sourceFile;\r\n\r\n\t\t\tvar texture;\r\n\r\n\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttexture = new THREE.Texture();\r\n\r\n\t\t\t\tloader = scope.imageLoader;\r\n\t\t\t\tloader.crossOrigin = scope.crossOrigin;\r\n\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\r\n\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t THREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\r\n\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\r\n\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\t\t\ttexture.image = canvas;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.sourceFile = sourceFile;\r\n\r\n\t\t\tif ( repeat ) {\r\n\r\n\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\r\n\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset ) {\r\n\r\n\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( wrap ) {\r\n\r\n\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( anisotropy ) {\r\n\r\n\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twhere[ name ] = texture;\r\n\r\n\t\t}\r\n\r\n\t\tfunction rgb2hex( rgb ) {\r\n\r\n\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\r\n\t\t}\r\n\r\n\t\t// defaults\r\n\r\n\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\tvar mpars = { color: 0xeeeeee, opacity: 1.0, map: null, lightMap: null, normalMap: null, bumpMap: null, wireframe: false };\r\n\r\n\t\t// parameters from model file\r\n\r\n\t\tif ( m.shading ) {\r\n\r\n\t\t\tvar shading = m.shading.toLowerCase();\r\n\r\n\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\r\n\t\t\tmpars.blending = THREE[ m.blending ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.transparent !== undefined || m.opacity < 1.0 ) {\r\n\r\n\t\t\tmpars.transparent = m.transparent;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.depthTest !== undefined ) {\r\n\r\n\t\t\tmpars.depthTest = m.depthTest;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.depthWrite !== undefined ) {\r\n\r\n\t\t\tmpars.depthWrite = m.depthWrite;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.visible !== undefined ) {\r\n\r\n\t\t\tmpars.visible = m.visible;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.flipSided !== undefined ) {\r\n\r\n\t\t\tmpars.side = THREE.BackSide;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.doubleSided !== undefined ) {\r\n\r\n\t\t\tmpars.side = THREE.DoubleSide;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.wireframe !== undefined ) {\r\n\r\n\t\t\tmpars.wireframe = m.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.vertexColors !== undefined ) {\r\n\r\n\t\t\tif ( m.vertexColors === 'face' ) {\r\n\r\n\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\r\n\t\t\t} else if ( m.vertexColors ) {\r\n\r\n\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// colors\r\n\r\n\t\tif ( m.colorDiffuse ) {\r\n\r\n\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\r\n\t\t} else if ( m.DbgColor ) {\r\n\r\n\t\t\tmpars.color = m.DbgColor;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.colorSpecular ) {\r\n\r\n\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.colorAmbient ) {\r\n\r\n\t\t\tmpars.ambient = rgb2hex( m.colorAmbient );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.colorEmissive ) {\r\n\r\n\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\r\n\t\t}\r\n\r\n\t\t// modifiers\r\n\r\n\t\tif ( m.transparency ) {\r\n\r\n\t\t\tmpars.opacity = m.transparency;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.specularCoef ) {\r\n\r\n\t\t\tmpars.shininess = m.specularCoef;\r\n\r\n\t\t}\r\n\r\n\t\t// textures\r\n\r\n\t\tif ( m.mapDiffuse && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapLight && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapBump && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapNormal && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapSpecular && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapAlpha && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( m.mapBumpScale ) {\r\n\r\n\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapNormalFactor ) {\r\n\r\n\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\r\n\t\t}\r\n\r\n\t\tvar material = new THREE[ mtype ]( mpars );\r\n\r\n\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.cache = new THREE.Cache();\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = scope.cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) onLoad( cached );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tscope.cache.add( url, this.response );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this.response );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( onError !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\t\tonError( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.cache = new THREE.Cache();\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = scope.cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tonLoad( cached );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\t\tscope.cache.add( url, this );\r\n\r\n\t\t\t\tonLoad( this );\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( onError !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\t\tonError( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\timage.src = url;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( showStatus ) {\r\n\r\n\tTHREE.Loader.call( this, showStatus );\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = Object.create( THREE.Loader.prototype );\r\nTHREE.JSONLoader.prototype.constructor = THREE.JSONLoader;\r\n\r\nTHREE.JSONLoader.prototype.load = function ( url, callback, texturePath ) {\r\n\r\n\tvar scope = this;\r\n\r\n\t// todo: unify load API to for easier SceneLoader use\r\n\r\n\ttexturePath = texturePath && ( typeof texturePath === 'string' ) ? texturePath : this.extractUrlBase( url );\r\n\r\n\tthis.onLoadStart();\r\n\tthis.loadAjaxJSON( this, url, callback, texturePath );\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype.loadAjaxJSON = function ( context, url, callback, texturePath, callbackProgress ) {\r\n\r\n\tvar xhr = new XMLHttpRequest();\r\n\r\n\tvar length = 0;\r\n\r\n\txhr.onreadystatechange = function () {\r\n\r\n\t\tif ( xhr.readyState === xhr.DONE ) {\r\n\r\n\t\t\tif ( xhr.status === 200 || xhr.status === 0 ) {\r\n\r\n\t\t\t\tif ( xhr.responseText ) {\r\n\r\n\t\t\t\t\tvar json = JSON.parse( xhr.responseText );\r\n\r\n\t\t\t\t\tif ( json.metadata !== undefined && json.metadata.type === 'scene' ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: \"' + url + '\" seems to be a Scene. Use THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar result = context.parse( json, texturePath );\r\n\t\t\t\t\tcallback( result.geometry, result.materials );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: \"' + url + '\" seems to be unreachable or the file is empty.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// in context of more complex asset initialization\r\n\t\t\t\t// do not block on single failed file\r\n\t\t\t\t// maybe should go even one more level up\r\n\r\n\t\t\t\tcontext.onLoadComplete();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.JSONLoader: Couldn\\'t load \"' + url + '\" (' + xhr.status + ')' );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( xhr.readyState === xhr.LOADING ) {\r\n\r\n\t\t\tif ( callbackProgress ) {\r\n\r\n\t\t\t\tif ( length === 0 ) {\r\n\r\n\t\t\t\t\tlength = xhr.getResponseHeader( 'Content-Length' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallbackProgress( { total: length, loaded: xhr.responseText.length } );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( xhr.readyState === xhr.HEADERS_RECEIVED ) {\r\n\r\n\t\t\tif ( callbackProgress !== undefined ) {\r\n\r\n\t\t\t\tlength = xhr.getResponseHeader( 'Content-Length' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\txhr.open( 'GET', url, true );\r\n\txhr.withCredentials = this.withCredentials;\r\n\txhr.send( null );\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype.parse = function ( json, texturePath ) {\r\n\r\n\tvar scope = this,\r\n\tgeometry = new THREE.Geometry(),\r\n\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\tparseModel( scale );\r\n\r\n\tparseSkin();\r\n\tparseMorphing( scale );\r\n\r\n\tgeometry.computeFaceNormals();\r\n\tgeometry.computeBoundingSphere();\r\n\r\n\tfunction parseModel( scale ) {\r\n\r\n\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t}\r\n\r\n\t\tvar i, j, fi,\r\n\r\n\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\ttype,\r\n\t\tisQuad,\r\n\t\thasMaterial,\r\n\t\thasFaceVertexUv,\r\n\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, color, hex, normal,\r\n\r\n\t\tuvLayer, uv, u, v,\r\n\r\n\t\tfaces = json.faces,\r\n\t\tvertices = json.vertices,\r\n\t\tnormals = json.normals,\r\n\t\tcolors = json.colors,\r\n\r\n\t\tnUvLayers = 0;\r\n\r\n\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t// disregard empty arrays\r\n\r\n\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\toffset = 0;\r\n\t\tzLength = vertices.length;\r\n\r\n\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t\toffset = 0;\r\n\t\tzLength = faces.length;\r\n\r\n\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\toffset += 4;\r\n\r\n\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = []\r\n\r\n\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction parseSkin() {\r\n\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\tvar x =                               json.skinWeights[ i     ];\r\n\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\tvar a =                               json.skinIndices[ i     ];\r\n\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.bones = json.bones;\r\n\r\n\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// could change this to json.animations[0] or remove completely\r\n\r\n\t\tgeometry.animation = json.animation;\r\n\t\tgeometry.animations = json.animations;\r\n\r\n\t};\r\n\r\n\tfunction parseMorphing( scale ) {\r\n\r\n\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\r\n\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\tsrcVertices = json.morphTargets [ i ].vertices;\r\n\r\n\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.morphColors !== undefined ) {\r\n\r\n\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\r\n\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\r\n\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\tsrcColors = json.morphColors [ i ].colors;\r\n\r\n\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\r\n\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\tdstColors.push( color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\treturn { geometry: geometry };\r\n\r\n\t} else {\r\n\r\n\t\tvar materials = this.initMaterials( json.materials, texturePath );\r\n\r\n\t\tif ( this.needsTangents( materials ) ) {\r\n\r\n\t\t\tgeometry.computeTangents();\r\n\r\n\t\t}\r\n\r\n\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar loaded = 0, total = 0;\r\n\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\ttotal ++;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\tloaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, loaded, total );\r\n\r\n\t\t}\r\n\r\n\t\tif ( loaded === total && scope.onLoad !== undefined ) {\r\n\r\n\t\t\tscope.onLoad();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar attributes = json.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar offsets = json.offsets;\r\n\r\n\t\tif ( offsets !== undefined ) {\r\n\r\n\t\t\tgeometry.offsets = JSON.parse( JSON.stringify( offsets ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.ambient !== undefined ) material.ambient.setHex( json.ambient );\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\t\tvar materials = this.parseMaterials( json.materials );\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.PlaneGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data.data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\t\t\t\tvar material = loader.parse( data );\r\n\r\n\t\t\t\tmaterial.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) material.name = data.name;\r\n\r\n\t\t\t\tmaterials[ data.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tvar geometry = geometries[ data.geometry ];\r\n\t\t\t\t\tvar material = materials[ data.material ];\r\n\r\n\t\t\t\t\tif ( geometry === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', data.geometry );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( material === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', data.material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject = new THREE.Mesh( geometry, material );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tvar geometry = geometries[ data.geometry ];\r\n\t\t\t\t\tvar material = materials[ data.material ];\r\n\r\n\t\t\t\t\tif ( geometry === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', data.geometry );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( material === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', data.material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject = new THREE.Line( geometry, material );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tvar material = materials[ data.material ];\r\n\r\n\t\t\t\t\tif ( material === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', data.material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( material );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function () {\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture( );\r\n\r\n\t\tvar loader = new THREE.XHRLoader();\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( !texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ){\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function () {\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader();\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tif ( url instanceof Array ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n \t\t\t\t\t\tif (texDatas.mipmapCount == 1)\r\n \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( key in this ) {\r\n\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t\t} else if ( key == 'overdraw' ) {\r\n\r\n\t\t\t\t\t// ensure overdraw is backwards-compatable with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type\r\n\t\t};\r\n\r\n\t\tif ( this.name !== \"\" ) output.name = this.name;\r\n\r\n\t\tif ( this instanceof THREE.MeshBasicMaterial ) {\r\n\r\n\t\t\toutput.color = this.color.getHex();\r\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.MeshLambertMaterial ) {\r\n\r\n\t\t\toutput.color = this.color.getHex();\r\n\t\t\toutput.ambient = this.ambient.getHex();\r\n\t\t\toutput.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\toutput.color = this.color.getHex();\r\n\t\t\toutput.ambient = this.ambient.getHex();\r\n\t\t\toutput.emissive = this.emissive.getHex();\r\n\t\t\toutput.specular = this.specular.getHex();\r\n\t\t\toutput.shininess = this.shininess;\r\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\tif ( this.shading !== THREE.FlatShading ) output.shading = this.shading;\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.ShaderMaterial ) {\r\n\r\n\t\t\toutput.uniforms = this.uniforms;\r\n\t\t\toutput.vertexShader = this.vertexShader;\r\n\t\t\toutput.fragmentShader = this.fragmentShader;\r\n\r\n\t\t} else if ( this instanceof THREE.SpriteMaterial ) {\r\n\r\n\t\t\toutput.color = this.color.getHex();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.opacity < 1 ) output.opacity = this.opacity;\r\n\t\tif ( this.transparent !== false ) output.transparent = this.transparent;\r\n\t\tif ( this.wireframe !== false ) output.wireframe = this.wireframe;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function ( material ) {\r\n\r\n\t\tif ( material === undefined ) material = new THREE.Material();\r\n\r\n\t\tmaterial.name = this.name;\r\n\r\n\t\tmaterial.side = this.side;\r\n\r\n\t\tmaterial.opacity = this.opacity;\r\n\t\tmaterial.transparent = this.transparent;\r\n\r\n\t\tmaterial.blending = this.blending;\r\n\r\n\t\tmaterial.blendSrc = this.blendSrc;\r\n\t\tmaterial.blendDst = this.blendDst;\r\n\t\tmaterial.blendEquation = this.blendEquation;\r\n\r\n\t\tmaterial.depthTest = this.depthTest;\r\n\t\tmaterial.depthWrite = this.depthWrite;\r\n\r\n\t\tmaterial.polygonOffset = this.polygonOffset;\r\n\t\tmaterial.polygonOffsetFactor = this.polygonOffsetFactor;\r\n\t\tmaterial.polygonOffsetUnits = this.polygonOffsetUnits;\r\n\r\n\t\tmaterial.alphaTest = this.alphaTest;\r\n\r\n\t\tmaterial.overdraw = this.overdraw;\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.LineBasicMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.linewidth = this.linewidth;\r\n\tmaterial.linecap = this.linecap;\r\n\tmaterial.linejoin = this.linejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.LineDashedMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.linewidth = this.linewidth;\r\n\r\n\tmaterial.scale = this.scale;\r\n\tmaterial.dashSize = this.dashSize;\r\n\tmaterial.gapSize = this.gapSize;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshBasicMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.lightMap = this.lightMap;\r\n\r\n\tmaterial.specularMap = this.specularMap;\r\n\r\n\tmaterial.alphaMap = this.alphaMap;\r\n\r\n\tmaterial.envMap = this.envMap;\r\n\tmaterial.combine = this.combine;\r\n\tmaterial.reflectivity = this.reflectivity;\r\n\tmaterial.refractionRatio = this.refractionRatio;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\r\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  ambient: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.ambient = new THREE.Color( 0xffffff );\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\r\n\tthis.wrapAround = false;\r\n\tthis.wrapRGB = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshLambertMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.ambient.copy( this.ambient );\r\n\tmaterial.emissive.copy( this.emissive );\r\n\r\n\tmaterial.wrapAround = this.wrapAround;\r\n\tmaterial.wrapRGB.copy( this.wrapRGB );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.lightMap = this.lightMap;\r\n\r\n\tmaterial.specularMap = this.specularMap;\r\n\r\n\tmaterial.alphaMap = this.alphaMap;\r\n\r\n\tmaterial.envMap = this.envMap;\r\n\tmaterial.combine = this.combine;\r\n\tmaterial.reflectivity = this.reflectivity;\r\n\tmaterial.refractionRatio = this.refractionRatio;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\r\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\tmaterial.morphNormals = this.morphNormals;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  ambient: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.ambient = new THREE.Color( 0xffffff );\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.metal = false;\r\n\r\n\tthis.wrapAround = false;\r\n\tthis.wrapRGB = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshPhongMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.ambient.copy( this.ambient );\r\n\tmaterial.emissive.copy( this.emissive );\r\n\tmaterial.specular.copy( this.specular );\r\n\tmaterial.shininess = this.shininess;\r\n\r\n\tmaterial.metal = this.metal;\r\n\r\n\tmaterial.wrapAround = this.wrapAround;\r\n\tmaterial.wrapRGB.copy( this.wrapRGB );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.lightMap = this.lightMap;\r\n\r\n\tmaterial.bumpMap = this.bumpMap;\r\n\tmaterial.bumpScale = this.bumpScale;\r\n\r\n\tmaterial.normalMap = this.normalMap;\r\n\tmaterial.normalScale.copy( this.normalScale );\r\n\r\n\tmaterial.specularMap = this.specularMap;\r\n\r\n\tmaterial.alphaMap = this.alphaMap;\r\n\r\n\tmaterial.envMap = this.envMap;\r\n\tmaterial.combine = this.combine;\r\n\tmaterial.reflectivity = this.reflectivity;\r\n\tmaterial.refractionRatio = this.refractionRatio;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\r\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\tmaterial.morphNormals = this.morphNormals;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.morphTargets = false;\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshDepthMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.shading = THREE.FlatShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshNormalMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshFaceMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MeshFaceMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MeshFaceMaterial';\r\n\t\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n};\r\n\r\nTHREE.MeshFaceMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MeshFaceMaterial,\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new THREE.MeshFaceMaterial();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/PointCloudMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointCloudMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointCloudMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointCloudMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointCloudMaterial.prototype.constructor = THREE.PointCloudMaterial;\r\n\r\nTHREE.PointCloudMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.PointCloudMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.size = this.size;\r\n\tmaterial.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.' );\r\n\treturn new THREE.PointCloudMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.' );\r\n\treturn new THREE.PointCloudMaterial( parameters );\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\tthis.attributes = null;\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.ShaderMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.fragmentShader = this.fragmentShader;\r\n\tmaterial.vertexShader = this.vertexShader;\r\n\r\n\tmaterial.uniforms = THREE.UniformsUtils.clone( this.uniforms );\r\n\r\n\tmaterial.attributes = this.attributes;\r\n\tmaterial.defines = this.defines;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.lights = this.lights;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\tmaterial.morphNormals = this.morphNormals;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\r\nTHREE.RawShaderMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.RawShaderMaterial();\r\n\r\n\tTHREE.ShaderMaterial.prototype.clone.call( this, material );\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.SpriteMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.rotation = this.rotation;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\tthis._needsUpdate = false;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tclone: function ( texture ) {\r\n\r\n\t\tif ( texture === undefined ) texture = new THREE.Texture();\r\n\r\n\t\ttexture.image = this.image;\r\n\t\ttexture.mipmaps = this.mipmaps.slice( 0 );\r\n\r\n\t\ttexture.mapping = this.mapping;\r\n\r\n\t\ttexture.wrapS = this.wrapS;\r\n\t\ttexture.wrapT = this.wrapT;\r\n\r\n\t\ttexture.magFilter = this.magFilter;\r\n\t\ttexture.minFilter = this.minFilter;\r\n\r\n\t\ttexture.anisotropy = this.anisotropy;\r\n\r\n\t\ttexture.format = this.format;\r\n\t\ttexture.type = this.type;\r\n\r\n\t\ttexture.offset.copy( this.offset );\r\n\t\ttexture.repeat.copy( this.repeat );\r\n\r\n\t\ttexture.generateMipmaps = this.generateMipmaps;\r\n\t\ttexture.premultiplyAlpha = this.premultiplyAlpha;\r\n\t\ttexture.flipY = this.flipY;\r\n\t\ttexture.unpackAlignment = this.unpackAlignment;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\t\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.images = images;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nTHREE.CubeTexture.clone = function ( texture ) {\r\n\r\n\tif ( texture === undefined ) texture = new THREE.CubeTexture();\r\n\r\n\tTHREE.Texture.prototype.clone.call( this, texture );\r\n\r\n\ttexture.images = this.images;\r\n\r\n\treturn texture;\r\n\r\n};\r\n\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\nTHREE.CompressedTexture.prototype.clone = function () {\r\n\r\n\tvar texture = new THREE.CompressedTexture();\r\n\r\n\tTHREE.Texture.prototype.clone.call( this, texture );\r\n\r\n\treturn texture;\r\n\r\n};\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\nTHREE.DataTexture.prototype.clone = function () {\r\n\r\n\tvar texture = new THREE.DataTexture();\r\n\r\n\tTHREE.Texture.prototype.clone.call( this, texture );\r\n\r\n\treturn texture;\r\n\r\n};\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar update = function () {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Group.prototype.constructor = THREE.Group;\r\n\r\n// File:src/objects/PointCloud.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.PointCloud = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'PointCloud';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointCloudMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.PointCloud.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.PointCloud.prototype.constructor = THREE.PointCloud;\r\n\r\nTHREE.PointCloud.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tvar object = this;\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar threshold = raycaster.params.PointCloud.threshold;\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\tvar testPoint = function ( point, index ) {\r\n\r\n\t\t\tvar rayPointDistance = ray.distanceToPoint( point );\r\n\r\n\t\t\tif ( rayPointDistance < localThreshold ) {\r\n\r\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tdistanceToRay: rayPointDistance,\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.index !== undefined ) {\r\n\r\n\t\t\t\tvar indices = attributes.index.array;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\tvar offset = {\r\n\t\t\t\t\t\tstart: 0,\r\n\t\t\t\t\t\tcount: indices.length,\r\n\t\t\t\t\t\tindex: 0\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\toffsets = [ offset ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var oi = 0, ol = offsets.length; oi < ol; ++oi ) {\r\n\r\n\t\t\t\t\tvar start = offsets[ oi ].start;\r\n\t\t\t\t\tvar count = offsets[ oi ].count;\r\n\t\t\t\t\tvar index = offsets[ oi ].index;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar a = index + indices[ i ];\r\n\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar pointCount = positions.length / 3;\r\n\r\n\t\t\t\tfor ( var i = 0; i < pointCount; i ++ ) {\r\n\r\n\t\t\t\t\tposition.set(\r\n\t\t\t\t\t\tpositions[ 3 * i ],\r\n\t\t\t\t\t\tpositions[ 3 * i + 1 ],\r\n\t\t\t\t\t\tpositions[ 3 * i + 2 ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertices = this.geometry.vertices;\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length; i ++ ) {\r\n\r\n\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.PointCloud.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.PointCloud( this.geometry, this.material );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.PointCloud.' );\r\n\treturn new THREE.PointCloud( geometry, material );\r\n\r\n};\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.mode = ( mode !== undefined ) ? mode : THREE.LineStrip;\r\n\r\n};\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Line.prototype.constructor = THREE.Line;\r\n\r\nTHREE.Line.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tvar precision = raycaster.linePrecision;\r\n\t\tvar precisionSq = precision * precision;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar vStart = new THREE.Vector3();\r\n\t\tvar vEnd = new THREE.Vector3();\r\n\t\tvar interSegment = new THREE.Vector3();\r\n\t\tvar interRay = new THREE.Vector3();\r\n\t\tvar step = this.mode === THREE.LineStrip ? 1 : 2;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( attributes.index !== undefined ) {\r\n\r\n\t\t\t\tvar indices = attributes.index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\toffsets = [ { start: 0, count: indices.length, index: 0 } ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var oi = 0; oi < offsets.length; oi++){\r\n\r\n\t\t\t\t\tvar start = offsets[ oi ].start;\r\n\t\t\t\t\tvar count = offsets[ oi ].count;\r\n\t\t\t\t\tvar index = offsets[ oi ].index;\r\n\r\n\t\t\t\t\tfor ( var i = start; i < start + count - 1; i += step ) {\r\n\r\n\t\t\t\t\t\tvar a = index + indices[ i ];\r\n\t\t\t\t\t\tvar b = index + indices[ i + 1 ];\r\n\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\t\tvar distance = ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0; i < positions.length / 3 - 1; i += step ) {\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tvar distance = ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\tvar distance = ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Line.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Line( this.geometry, this.material, this.mode );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\t\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = - 1;\r\n\t\tthis.morphTargetForcedOrder = [];\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tconsole.log( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n\r\nTHREE.Mesh.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Check boundingBox before continuing\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false )  {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar material = this.material;\r\n\r\n\t\t\tif ( material === undefined ) return;\r\n\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tvar a, b, c;\r\n\t\t\tvar precision = raycaster.precision;\r\n\r\n\t\t\tif ( attributes.index !== undefined ) {\r\n\r\n\t\t\t\tvar indices = attributes.index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\toffsets = [ { start: 0, count: indices.length, index: 0 } ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var oi = 0, ol = offsets.length; oi < ol; ++oi ) {\r\n\r\n\t\t\t\t\tvar start = offsets[ oi ].start;\r\n\t\t\t\t\tvar count = offsets[ oi ].count;\r\n\t\t\t\t\tvar index = offsets[ oi ].index;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\ta = index + indices[ i ];\r\n\t\t\t\t\t\tb = index + indices[ i + 1 ];\r\n\t\t\t\t\t\tc = index + indices[ i + 2 ];\r\n\r\n\t\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vC, vB, vA, true );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( intersectionPoint === null ) continue;\r\n\r\n\t\t\t\t\t\tintersectionPoint.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n\t\t\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPoint,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, j = 0, il = positions.length; i < il; i += 3, j += 9 ) {\r\n\r\n\t\t\t\t\ta = i;\r\n\t\t\t\t\tb = i + 1;\r\n\t\t\t\t\tc = i + 2;\r\n\r\n\t\t\t\t\tvA.fromArray( positions, j );\r\n\t\t\t\t\tvB.fromArray( positions, j + 3 );\r\n\t\t\t\t\tvC.fromArray( positions, j + 6 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vC, vB, vA, true );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( intersectionPoint === null ) continue;\r\n\r\n\t\t\t\t\tintersectionPoint.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n\t\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPoint,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar isFaceMaterial = this.material instanceof THREE.MeshFaceMaterial;\r\n\t\t\tvar objectMaterials = isFaceMaterial === true ? this.material.materials : null;\r\n\r\n\t\t\tvar a, b, c, d;\r\n\t\t\tvar precision = raycaster.precision;\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\tfor ( var f = 0, fl = geometry.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = geometry.faces[ f ];\r\n\r\n\t\t\t\tvar material = isFaceMaterial === true ? objectMaterials[ face.materialIndex ] : this.material;\r\n\r\n\t\t\t\tif ( material === undefined ) continue;\r\n\r\n\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\tc = vertices[ face.c ];\r\n\r\n\t\t\t\tif ( material.morphTargets === true ) {\r\n\r\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\tvA.x += ( targets[ face.a ].x - a.x ) * influence;\r\n\t\t\t\t\t\tvA.y += ( targets[ face.a ].y - a.y ) * influence;\r\n\t\t\t\t\t\tvA.z += ( targets[ face.a ].z - a.z ) * influence;\r\n\r\n\t\t\t\t\t\tvB.x += ( targets[ face.b ].x - b.x ) * influence;\r\n\t\t\t\t\t\tvB.y += ( targets[ face.b ].y - b.y ) * influence;\r\n\t\t\t\t\t\tvB.z += ( targets[ face.b ].z - b.z ) * influence;\r\n\r\n\t\t\t\t\t\tvC.x += ( targets[ face.c ].x - c.x ) * influence;\r\n\t\t\t\t\t\tvC.y += ( targets[ face.c ].y - c.y ) * influence;\r\n\t\t\t\t\t\tvC.z += ( targets[ face.c ].z - c.z ) * influence;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\tvC.add( c );\r\n\r\n\t\t\t\t\ta = vA;\r\n\t\t\t\t\tb = vB;\r\n\t\t\t\t\tc = vC;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( c, b, a, true );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( a, b, c, material.side !== THREE.DoubleSide );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( intersectionPoint === null ) continue;\r\n\r\n\t\t\t\tintersectionPoint.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPoint,\r\n\t\t\t\t\tface: face,\r\n\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Mesh.prototype.clone = function ( object, recursive ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Mesh( this.geometry, this.material );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object, recursive );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( belongsToSkin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.skin = belongsToSkin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones  (8 * 8  / 4)\r\n\t\t//       16x16 pixel texture max   64 bones (16 * 16 / 4)\r\n\t\t//       32x32 pixel texture max  256 bones (32 * 32 / 4)\r\n\t\t//       64x64 pixel texture max 1024 bones (64 * 64 / 4)\r\n\r\n\t\tvar size;\r\n\r\n\t\tif ( this.bones.length > 256 )\r\n\t\t\tsize = 64;\r\n\t\telse if ( this.bones.length > 64 )\r\n\t\t\tsize = 32;\r\n\t\telse if ( this.bones.length > 16 )\r\n\t\t\tsize = 16;\r\n\t\telse\r\n\t\t\tsize = 8;\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\t\tthis.boneTexture.minFilter = THREE.NearestFilter;\r\n\t\tthis.boneTexture.magFilter = THREE.NearestFilter;\r\n\t\tthis.boneTexture.generateMipmaps = false;\r\n\t\tthis.boneTexture.flipY = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\r\n\tthis.boneInverses = [];\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.boneInverses.push( inverse );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.pose = function () {\r\n\r\n\tvar bone;\r\n\r\n\t// recover the bind-time world matrices\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// compute the local matrices, positions, rotations and scales\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.update = ( function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\t\r\n\treturn function () {\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\t\t\r\n\t};\r\n\r\n} )();\r\n\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone, p, q, s;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tp = gbone.pos;\r\n\t\t\tq = gbone.rotq;\r\n\t\t\ts = gbone.scl;\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.set( p[ 0 ], p[ 1 ], p[ 2 ] );\r\n\t\t\tbone.quaternion.set( q[ 0 ], q[ 1 ], q[ 2 ], q[ 3 ] );\r\n\r\n\t\t\tif ( s !== undefined ) {\r\n\r\n\t\t\t\tbone.scale.set( s[ 0 ], s[ 1 ], s[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.scale.set( 1, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ) );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\r\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\r\n\tthis.skeleton = skeleton;\r\n\r\n\tif ( bindMatrix === undefined ) {\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t}\r\n\r\n\tthis.bindMatrix.copy( bindMatrix );\r\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.skeleton.pose();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\r\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.SkinnedMesh unreckognized bindMode: ' + this.bindMode );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function( object ) {\r\n\r\n\tif ( object === undefined ) {\r\n\r\n\t\tobject = new THREE.SkinnedMesh( this.geometry, this.material, this.useVertexTexture );\r\n\r\n\t}\r\n\r\n\tTHREE.Mesh.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n\r\n// File:src/objects/MorphAnimMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'MorphAnimMesh';\r\n\r\n\t// API\r\n\r\n\tthis.duration = 1000; // milliseconds\r\n\tthis.mirroredLoop = false;\r\n\tthis.time = 0;\r\n\r\n\t// internals\r\n\r\n\tthis.lastKeyframe = 0;\r\n\tthis.currentKeyframe = 0;\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n\tthis.setFrameRange( 0, this.geometry.morphTargets.length - 1 );\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\r\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\r\n\tthis.startKeyframe = start;\r\n\tthis.endKeyframe = end;\r\n\r\n\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\r\n\tthis.direction = - 1;\r\n\tthis.directionBackwards = true;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tif ( ! geometry.animations ) geometry.animations = {};\r\n\r\n\tvar firstAnimation, animations = geometry.animations;\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar parts = morph.name.match( pattern );\r\n\r\n\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\tvar label = parts[ 1 ];\r\n\t\t\tvar num = parts[ 2 ];\r\n\r\n\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar animation = animations[ label ];\r\n\r\n\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\tif ( i > animation.end ) animation.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\r\n\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\r\n\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\r\n\tvar animation = this.geometry.animations[ label ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\tthis.time = 0;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'animation[' + label + '] undefined' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\r\n\tvar frameTime = this.duration / this.length;\r\n\r\n\tthis.time += this.direction * delta;\r\n\r\n\tif ( this.mirroredLoop ) {\r\n\r\n\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\r\n\t\t\tthis.direction *= - 1;\r\n\r\n\t\t\tif ( this.time > this.duration ) {\r\n\r\n\t\t\t\tthis.time = this.duration;\r\n\t\t\t\tthis.directionBackwards = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.time < 0 ) {\r\n\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t\tthis.directionBackwards = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.time = this.time % this.duration;\r\n\r\n\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\r\n\t}\r\n\r\n\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\r\n\tif ( keyframe !== this.currentKeyframe ) {\r\n\r\n\t\tthis.morphTargetInfluences[ this.lastKeyframe ] = 0;\r\n\t\tthis.morphTargetInfluences[ this.currentKeyframe ] = 1;\r\n\r\n\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\tthis.currentKeyframe = keyframe;\r\n\r\n\t}\r\n\r\n\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\r\n\tif ( this.directionBackwards ) {\r\n\r\n\t\tmix = 1 - mix;\r\n\r\n\t}\r\n\r\n\tthis.morphTargetInfluences[ this.currentKeyframe ] = mix;\r\n\tthis.morphTargetInfluences[ this.lastKeyframe ] = 1 - mix;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\r\n\t\tinfluences[ i ] = 0;\r\n\r\n\t}\r\n\r\n\tif ( a > -1 ) influences[ a ] = 1 - t;\r\n\tif ( b > -1 ) influences[ b ] = t;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.MorphAnimMesh( this.geometry, this.material );\r\n\r\n\tobject.duration = this.duration;\r\n\tobject.mirroredLoop = this.mirroredLoop;\r\n\tobject.time = this.time;\r\n\r\n\tobject.lastKeyframe = this.lastKeyframe;\r\n\tobject.currentKeyframe = this.currentKeyframe;\r\n\r\n\tobject.direction = this.direction;\r\n\tobject.directionBackwards = this.directionBackwards;\r\n\r\n\tTHREE.Mesh.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.objects = [];\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tfor ( var l = 0; l < this.objects.length; l ++ ) {\r\n\r\n\t\tif ( distance < this.objects[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.objects.splice( l, 0, { distance: distance, object: object } );\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tfor ( var i = 1, l = this.objects.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < this.objects[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn this.objects[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( camera ) {\r\n\r\n\t\tif ( this.objects.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tthis.objects[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = this.objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= this.objects[ i ].distance ) {\r\n\r\n\t\t\t\t\tthis.objects[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tthis.objects[ i     ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.objects[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.LOD();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\tfor ( var i = 0, l = this.objects.length; i < l; i ++ ) {\r\n\t\tvar x = this.objects[ i ].object.clone();\r\n\t\tx.visible = i === 0;\r\n\t\tobject.addLevel( x, this.objects[ i ].distance );\r\n\t}\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'index', new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn function ( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\r\nTHREE.Sprite.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.distanceToPoint( matrixPosition );\r\n\r\n\t\tif ( distance > this.scale.x ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: distance,\r\n\t\t\tpoint: this.position,\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Sprite.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Sprite( this.material );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif ( size === undefined ) size = - 1;\r\n\tif ( distance === undefined ) distance = 0;\r\n\tif ( opacity === undefined ) opacity = 1;\r\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( {\r\n\t\ttexture: texture, \t\t\t// THREE.Texture\r\n\t\tsize: size, \t\t\t\t// size in pixels (-1 = use texture.width)\r\n\t\tdistance: distance, \t\t// distance (0-1) from light source (0=at light source)\r\n\t\tx: 0, y: 0, z: 0,\t\t\t// screen position (-1 => 1) z = 0 is ontop z = 1 is back\r\n\t\tscale: 1, \t\t\t\t\t// scale\r\n\t\trotation: 1, \t\t\t\t// rotation\r\n\t\topacity: opacity,\t\t\t// opacity\r\n\t\tcolor: color,\t\t\t\t// color\r\n\t\tblending: blending\t\t\t// blending\r\n\t} );\r\n\r\n};\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = - this.positionScreen.x * 2;\r\n\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\tfor( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Scene();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\tif ( this.fog !== null ) object.fog = this.fog.clone();\r\n\tif ( this.overrideMaterial !== null ) object.overrideMaterial = this.overrideMaterial.clone();\r\n\r\n\tobject.autoUpdate = this.autoUpdate;\r\n\tobject.matrixAutoUpdate = this.matrixAutoUpdate;\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\ntransformedNormal = normalize( transformedNormal );\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\n\tvec3 dirVector = normalize( lDirection.xyz );\\n\\n\tfloat dotProduct = dot( transformedNormal, dirVector );\\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t#endif\\n\\n\t#endif\\n\\n\t#ifdef WRAP_AROUND\\n\\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\\n\\n\t\t#endif\\n\\n\t#endif\\n\\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\\n\\n\t#endif\\n\\n}\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\t\tfloat lDistance = 1.0;\\n\t\tif ( pointLightDistance[ i ] > 0.0 )\\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\n\\n\t\tlVector = normalize( lVector );\\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\t\t\tfloat lDistance = 1.0;\\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\\n\\n\t\t\tlVector = normalize( lVector );\\n\\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t\t\t#endif\\n\\n\t\t\t#endif\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\\n\\n\t\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\\n\\n\t\t\t\t#endif\\n\\n\t\t\t#endif\\n\\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\\n\t\tvec3 lVector = normalize( lDirection.xyz );\\n\\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/default_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'default_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#elif defined( USE_MORPHTARGETS )\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\\n\\n#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\t#ifdef USE_MORPHNORMALS\\n\\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\\n\\n\t#else\\n\\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_vertex'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"vec3 normal = normalize( vNormal );\\nvec3 viewPosition = normalize( vViewPosition );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tvec3 pointDiffuse = vec3( 0.0 );\\n\tvec3 pointSpecular = vec3( 0.0 );\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\t\tfloat lDistance = 1.0;\\n\t\tif ( pointLightDistance[ i ] > 0.0 )\\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\n\\n\t\tlVector = normalize( lVector );\\n\\n\t\t\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lVector );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t#else\\n\\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t#endif\\n\\n\t\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\\n\\n\t\t\t\t// specular\\n\\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tvec3 spotDiffuse = vec3( 0.0 );\\n\tvec3 spotSpecular = vec3( 0.0 );\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\t\tfloat lDistance = 1.0;\\n\t\tif ( spotLightDistance[ i ] > 0.0 )\\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\\n\\n\t\tlVector = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\t\t\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lVector );\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t\t#else\\n\\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t\t#endif\\n\\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\\n\\n\t\t\t\t\t// specular\\n\\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\\n\\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tvec3 dirDiffuse = vec3( 0.0 );\\n\tvec3 dirSpecular = vec3( 0.0 );\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\n\t\tvec3 dirVector = normalize( lDirection.xyz );\\n\\n\t\t\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, dirVector );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t#else\\n\\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t#endif\\n\\n\t\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\\n\\n\t\t// specular\\n\\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\\n\\n\t\t/*\\n\t\t// fresnel term from skin shader\\n\t\tconst float F0 = 0.128;\\n\\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\\n\t\tfloat exponential = pow( base, 5.0 );\\n\\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\\n\t\t*/\\n\\n\t\t/*\\n\t\t// fresnel term from fresnel shader\\n\t\tconst float mFresnelBias = 0.08;\\n\t\tconst float mFresnelScale = 0.3;\\n\t\tconst float mFresnelPower = 5.0;\\n\\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\\n\t\t*/\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\\n\\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tvec3 hemiDiffuse = vec3( 0.0 );\\n\tvec3 hemiSpecular = vec3( 0.0 );\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\\n\t\tvec3 lVector = normalize( lDirection.xyz );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lVector );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\themiDiffuse += diffuse * hemiColor;\\n\\n\t\t// specular (sky light)\\n\\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\\n\\n\t\t// specular (ground light)\\n\\n\t\tvec3 lVectorGround = -lVector;\\n\\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\\n\\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\\n\\n\t}\\n\\n#endif\\n\\nvec3 totalDiffuse = vec3( 0.0 );\\nvec3 totalSpecular = vec3( 0.0 );\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\ttotalDiffuse += dirDiffuse;\\n\ttotalSpecular += dirSpecular;\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\ttotalDiffuse += hemiDiffuse;\\n\ttotalSpecular += hemiSpecular;\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\ttotalDiffuse += pointDiffuse;\\n\ttotalSpecular += pointSpecular;\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\ttotalDiffuse += spotDiffuse;\\n\ttotalSpecular += spotSpecular;\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\\n\\n#else\\n\\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tvec3 morphedNormal = vec3( 0.0 );\\n\\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n\tmorphedNormal += normal;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t\t\t// Per-Pixel Tangent Space Normal Mapping\\n\t\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvarying vec2 vUv2;\\n\tuniform sampler2D lightMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\ttexelColor.xyz *= texelColor.xyz;\\n\\n\t#endif\\n\\n\tgl_FragColor = gl_FragColor * texelColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_vertex'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\tvColor = color * color;\\n\\n\t#else\\n\\n\t\tvColor = color;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\t#ifdef USE_MORPHTARGETS\\n\\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\\n\\n\t#else\\n\\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\\n\\n\t#endif\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"#ifdef GAMMA_OUTPUT\\n\\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambient;\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\n\\nuniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\tuniform vec3 wrapRGB;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = clamp( flipNormal * reflectVec.y * 0.5 + 0.5, 0.0, 1.0);\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * 0.15915494309189533576888376337251 + 0.5; // reciprocal( 2 PI ) + 0.5\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\t\t\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\tenvColor.xyz *= envColor.xyz;\\n\\n\t#endif\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\tgl_FragColor.xyz += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tconst float LOG2 = 1.442695;\\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t\t\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t\t\t//\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t\t\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec3 objectNormal = skinnedNormal.xyz;\\n\\n#elif defined( USE_MORPHNORMALS )\\n\\n\tvec3 objectNormal = morphedNormal;\\n\\n#else\\n\\n\tvec3 objectNormal = normal;\\n\\n#endif\\n\\n#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\tuniform vec3 wrapRGB;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\nvarying vec3 vNormal;\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\tvec3 morphed = vec3( 0.0 );\\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n\tmorphed += position;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\\n\tworldNormal = normalize( worldNormal );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\tint inFrustumCount = 0;\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\t\t\t// don't shadow pixels outside of light frustum\\n\t\t\t\t// use just first frustum (for cascades)\\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\\n\\n\t\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\t\tinFrustumCount += int( inFrustum );\\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\\n\\n\t\t#else\\n\\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\t#endif\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\\n\\n\t\t\t#else\\n\\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t}\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\tshadowColor *= shadowColor;\\n\\n\t#endif\\n\\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#elif defined( USE_MORPHTARGETS )\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\t#extension GL_EXT_frag_depth : enable\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tgl_FragColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( parameter_src instanceof Array ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 },\r\n\r\n\t\t\"morphTargetInfluences\" : { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\tbump: {\r\n\r\n\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\t},\r\n\r\n\tfog : {\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] }\r\n\r\n\t},\r\n\r\n\tparticle: {\r\n\r\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tshadowmap: {\r\n\r\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"ambient\"  : { type: \"c\", value: new THREE.Color( 0xffffff ) },\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define LAMBERT\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t//\"float isFront = float( gl_FrontFacing );\",\r\n\t\t\t\t\t//\"gl_FragColor.xyz *= isFront * vLightFront + ( 1.0 - isFront ) * vLightBack;\",\r\n\r\n\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\"\t\t\tgl_FragColor.xyz *= vLightFront;\",\r\n\t\t\t\"\t\telse\",\r\n\t\t\t\"\t\t\tgl_FragColor.xyz *= vLightBack;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tgl_FragColor.xyz *= vLightFront;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bump\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"ambient\"  : { type: \"c\", value: new THREE.Color( 0xffffff ) },\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 },\r\n\t\t\t\t\"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"\tvViewPosition = -mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform vec3 ambient;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'particle_basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"particle\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float size;\",\r\n\t\t\t\"uniform float scale;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\"\t#else\",\r\n\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( psColor, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float scale;\",\r\n\t\t\t\"attribute float lineDistance;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\"uniform float totalSize;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n\t\t\t\"\t\tdiscard;\",\r\n\r\n\t\t\t\"\t}\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float mNear;\",\r\n\t\t\t\"uniform float mFar;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tvWorldPosition = worldPosition.xyz;\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tvWorldPosition = worldPosition.xyz;\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\"sampleUV.y = clamp( tFlip * direction.y * -0.5 + 0.5, 0.0, 1.0);\",\r\n\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * 0.15915494309189533576888376337251 + 0.5;\", // reciprocal( 2 PI ) + 0.5\r\n\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t/* Depth encoding into RGBA texture\r\n\t *\r\n\t * based on SpiderGL shadow map example\r\n\t * http://spidergl.org/example.php?id=6\r\n\t *\r\n\t * originally from\r\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t *\r\n\t * see also\r\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t */\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\r\n\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\tpixelRatio = 1,\r\n\r\n\t_precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t_logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false,\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar _webglObjects = {};\r\n\tvar _webglObjectsImmediate = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar transparentObjects = [];\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// shadow map\r\n\r\n\tthis.shadowMapEnabled = false;\r\n\tthis.shadowMapType = THREE.PCFShadowMap;\r\n\tthis.shadowMapCullFace = THREE.CullFaceFront;\r\n\tthis.shadowMapDebug = false;\r\n\tthis.shadowMapCascade = false;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// info\r\n\r\n\tthis.info = {\r\n\r\n\t\tmemory: {\r\n\r\n\t\t\tprograms: 0,\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\r\n\t\t},\r\n\r\n\t\trender: {\r\n\r\n\t\t\tcalls: 0,\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0,\r\n\t\t\tpoints: 0\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t_programs = [],\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t// GL state cache\r\n\r\n\t_oldDoubleSided = - 1,\r\n\t_oldFlipSided = - 1,\r\n\r\n\t_oldBlending = - 1,\r\n\r\n\t_oldBlendEquation = - 1,\r\n\t_oldBlendSrc = - 1,\r\n\t_oldBlendDst = - 1,\r\n\r\n\t_oldDepthTest = - 1,\r\n\t_oldDepthWrite = - 1,\r\n\r\n\t_oldPolygonOffset = null,\r\n\t_oldPolygonOffsetFactor = null,\r\n\t_oldPolygonOffsetUnits = null,\r\n\r\n\t_oldLineWidth = null,\r\n\r\n\t_viewportX = 0,\r\n\t_viewportY = 0,\r\n\t_viewportWidth = _canvas.width,\r\n\t_viewportHeight = _canvas.height,\r\n\t_currentWidth = 0,\r\n\t_currentHeight = 0,\r\n\r\n\t_newAttributes = new Uint8Array( 16 ),\r\n\t_enabledAttributes = new Uint8Array( 16 ),\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t // camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t_projScreenMatrixPS = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_direction = new THREE.Vector3(),\r\n\r\n\t_lightsNeedUpdate = true,\r\n\r\n\t_lights = {\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: { length: 0, colors:[], positions: [] },\r\n\t\tpoint: { length: 0, colors: [], positions: [], distances: [] },\r\n\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [] },\r\n\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\r\n\t};\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl') !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', function ( event ) {\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tresetGLState();\r\n\t\t\tsetDefaultGLState();\r\n\r\n\t\t\t_webglObjects = {};\r\n\r\n\t\t}, false);\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tconsole.error( error );\r\n\r\n\t}\r\n\r\n\tif ( _gl.getShaderPrecisionFormat === undefined ) {\r\n\r\n\t\t_gl.getShaderPrecisionFormat = function () {\r\n\r\n\t\t\treturn {\r\n\t\t\t\t'rangeMin': 1,\r\n\t\t\t\t'rangeMax': 1,\r\n\t\t\t\t'precision': 1\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\r\n\tif ( _logarithmicDepthBuffer ) {\r\n\r\n\t\textensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar setDefaultGLState = function () {\r\n\r\n\t\t_gl.clearColor( 0, 0, 0, 1 );\r\n\t\t_gl.clearDepth( 1 );\r\n\t\t_gl.clearStencil( 0 );\r\n\r\n\t\t_gl.enable( _gl.DEPTH_TEST );\r\n\t\t_gl.depthFunc( _gl.LEQUAL );\r\n\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\t\t_gl.cullFace( _gl.BACK );\r\n\t\t_gl.enable( _gl.CULL_FACE );\r\n\r\n\t\t_gl.enable( _gl.BLEND );\r\n\t\t_gl.blendEquation( _gl.FUNC_ADD );\r\n\t\t_gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t\t_gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tvar resetGLState = function () {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_oldBlending = - 1;\r\n\t\t_oldDepthTest = - 1;\r\n\t\t_oldDepthWrite = - 1;\r\n\t\t_oldDoubleSided = - 1;\r\n\t\t_oldFlipSided = - 1;\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\tfor ( var i = 0; i < _enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\t_enabledAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\r\n\t// GPU capabilities\r\n\r\n\tvar _maxTextures = _gl.getParameter( _gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tvar _maxVertexTextures = _gl.getParameter( _gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tvar _maxTextureSize = _gl.getParameter( _gl.MAX_TEXTURE_SIZE );\r\n\tvar _maxCubemapSize = _gl.getParameter( _gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tvar _supportsVertexTextures = _maxVertexTextures > 0;\r\n\tvar _supportsBoneTextures = _supportsVertexTextures && extensions.get( 'OES_texture_float' );\r\n\r\n\t//\r\n\r\n\tvar _vertexShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.HIGH_FLOAT );\r\n\tvar _vertexShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.MEDIUM_FLOAT );\r\n\tvar _vertexShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.LOW_FLOAT );\r\n\r\n\tvar _fragmentShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.HIGH_FLOAT );\r\n\tvar _fragmentShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.MEDIUM_FLOAT );\r\n\tvar _fragmentShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.LOW_FLOAT );\r\n\r\n\tvar getCompressedTextureFormats = ( function () {\r\n\r\n\t\tvar array;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( array !== undefined ) {\r\n\r\n\t\t\t\treturn array;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) || extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\r\n\t\t\t\tvar formats = _gl.getParameter( _gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ){\r\n\r\n\t\t\t\t\tarray.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t} )();\r\n\r\n\t// clamp precision to maximum available\r\n\r\n\tvar highpAvailable = _vertexShaderPrecisionHighpFloat.precision > 0 && _fragmentShaderPrecisionHighpFloat.precision > 0;\r\n\tvar mediumpAvailable = _vertexShaderPrecisionMediumpFloat.precision > 0 && _fragmentShaderPrecisionMediumpFloat.precision > 0;\r\n\r\n\tif ( _precision === 'highp' && ! highpAvailable ) {\r\n\r\n\t\tif ( mediumpAvailable ) {\r\n\r\n\t\t\t_precision = 'mediump';\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: highp not supported, using mediump.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_precision = 'lowp';\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: highp and mediump not supported, using lowp.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tif ( _precision === 'mediump' && ! mediumpAvailable ) {\r\n\r\n\t\t_precision = 'lowp';\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: mediump not supported, using lowp.' );\r\n\r\n\t}\r\n\r\n\t// Plugins\r\n\r\n\tvar shadowMapPlugin = new THREE.ShadowMapPlugin( this, lights, _webglObjects, _webglObjectsImmediate );\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.supportsVertexTextures = function () {\r\n\r\n\t\treturn _supportsVertexTextures;\r\n\r\n\t};\r\n\r\n\tthis.supportsFloatTextures = function () {\r\n\r\n\t\treturn extensions.get( 'OES_texture_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsStandardDerivatives = function () {\r\n\r\n\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTextureS3TC = function () {\r\n\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTexturePVRTC = function () {\r\n\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsBlendMinMax = function () {\r\n\r\n\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\treturn value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tvalue = extension !== null ? _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT ) : 0;\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn _precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tpixelRatio = value;\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_canvas.width = width * pixelRatio;\r\n\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t_viewportX = x * pixelRatio;\r\n\t\t_viewportY = y * pixelRatio;\r\n\r\n\t\t_viewportWidth = width * pixelRatio;\r\n\t\t_viewportHeight = height * pixelRatio;\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t_gl.scissor(\r\n\t\t\tx * pixelRatio,\r\n\t\t\ty * pixelRatio,\r\n\t\t\twidth * pixelRatio,\r\n\t\t\theight * pixelRatio\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tthis.enableScissorTest = function ( enable ) {\r\n\r\n\t\tenable ? _gl.enable( _gl.SCISSOR_TEST ) : _gl.disable( _gl.SCISSOR_TEST );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\t_gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\t_gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\t// Buffer allocation\r\n\r\n\tfunction createParticleBuffers ( geometry ) {\r\n\r\n\t\tgeometry.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tgeometry.__webglColorBuffer = _gl.createBuffer();\r\n\r\n\t\t_this.info.memory.geometries ++;\r\n\r\n\t};\r\n\r\n\tfunction createLineBuffers ( geometry ) {\r\n\r\n\t\tgeometry.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tgeometry.__webglColorBuffer = _gl.createBuffer();\r\n\t\tgeometry.__webglLineDistanceBuffer = _gl.createBuffer();\r\n\r\n\t\t_this.info.memory.geometries ++;\r\n\r\n\t};\r\n\r\n\tfunction createMeshBuffers ( geometryGroup ) {\r\n\r\n\t\tgeometryGroup.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglNormalBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglTangentBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglColorBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglUVBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglUV2Buffer = _gl.createBuffer();\r\n\r\n\t\tgeometryGroup.__webglSkinIndicesBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglSkinWeightsBuffer = _gl.createBuffer();\r\n\r\n\t\tgeometryGroup.__webglFaceBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglLineBuffer = _gl.createBuffer();\r\n\r\n\t\tvar numMorphTargets = geometryGroup.numMorphTargets;\r\n\r\n\t\tif ( numMorphTargets ) {\r\n\r\n\t\t\tgeometryGroup.__webglMorphTargetsBuffers = [];\r\n\r\n\t\t\tfor ( var m = 0, ml = numMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__webglMorphTargetsBuffers.push( _gl.createBuffer() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar numMorphNormals = geometryGroup.numMorphNormals;\r\n\r\n\t\tif ( numMorphNormals ) {\r\n\r\n\t\t\tgeometryGroup.__webglMorphNormalsBuffers = [];\r\n\r\n\t\t\tfor ( var m = 0, ml = numMorphNormals; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__webglMorphNormalsBuffers.push( _gl.createBuffer() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_this.info.memory.geometries ++;\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tvar onObjectRemoved = function ( event ) {\r\n\r\n\t\tvar object = event.target;\r\n\r\n\t\tobject.traverse( function ( child ) {\r\n\r\n\t\t\tchild.removeEventListener( 'remove', onObjectRemoved );\r\n\r\n\t\t\tremoveObject( child );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tvar onGeometryDispose = function ( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdeallocateGeometry( geometry );\r\n\r\n\t};\r\n\r\n\tvar onTextureDispose = function ( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_this.info.memory.textures --;\r\n\r\n\r\n\t};\r\n\r\n\tvar onRenderTargetDispose = function ( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_this.info.memory.textures --;\r\n\r\n\t};\r\n\r\n\tvar onMaterialDispose = function ( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t};\r\n\r\n\t// Buffer deallocation\r\n\r\n\tvar deleteBuffers = function ( geometry ) {\r\n\r\n\t\tvar buffers = [\r\n\t\t\t'__webglVertexBuffer',\r\n\t\t\t'__webglNormalBuffer',\r\n\t\t\t'__webglTangentBuffer',\r\n\t\t\t'__webglColorBuffer',\r\n\t\t\t'__webglUVBuffer',\r\n\t\t\t'__webglUV2Buffer',\r\n\r\n\t\t\t'__webglSkinIndicesBuffer',\r\n\t\t\t'__webglSkinWeightsBuffer',\r\n\r\n\t\t\t'__webglFaceBuffer',\r\n\t\t\t'__webglLineBuffer',\r\n\r\n\t\t\t'__webglLineDistanceBuffer'\r\n\t\t];\r\n\r\n\t\tfor ( var i = 0, l = buffers.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar name = buffers[ i ];\r\n\r\n\t\t\tif ( geometry[ name ] !== undefined ) {\r\n\r\n\t\t\t\t_gl.deleteBuffer( geometry[ name ] );\r\n\r\n\t\t\t\tdelete geometry[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// custom attributes\r\n\r\n\t\tif ( geometry.__webglCustomAttributesList !== undefined ) {\r\n\r\n\t\t\tfor ( var name in geometry.__webglCustomAttributesList ) {\r\n\r\n\t\t\t\t_gl.deleteBuffer( geometry.__webglCustomAttributesList[ name ].buffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete geometry.__webglCustomAttributesList;\r\n\r\n\t\t}\r\n\r\n\t\t_this.info.memory.geometries --;\r\n\r\n\t};\r\n\r\n\tvar deallocateGeometry = function ( geometry ) {\r\n\r\n\t\tdelete geometry.__webglInit;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tfor ( var name in geometry.attributes ) {\r\n\r\n\t\t\t\tvar attribute = geometry.attributes[ name ];\r\n\r\n\t\t\t\tif ( attribute.buffer !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.deleteBuffer( attribute.buffer );\r\n\r\n\t\t\t\t\tdelete attribute.buffer;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.info.memory.geometries --;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\r\n\r\n\t\t\tif ( geometryGroupsList !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = geometryGroupsList.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar geometryGroup = geometryGroupsList[ i ];\r\n\r\n\t\t\t\t\tif ( geometryGroup.numMorphTargets !== undefined ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\t\t_gl.deleteBuffer( geometryGroup.__webglMorphTargetsBuffers[ m ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdelete geometryGroup.__webglMorphTargetsBuffers;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( geometryGroup.numMorphNormals !== undefined ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\t\t_gl.deleteBuffer( geometryGroup.__webglMorphNormalsBuffers[ m ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdelete geometryGroup.__webglMorphNormalsBuffers;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdeleteBuffers( geometryGroup );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete geometryGroups[ geometry.id ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeleteBuffers( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// TOFIX: Workaround for deleted geometry being currently bound\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\r\n\t};\r\n\r\n\tvar deallocateTexture = function ( texture ) {\r\n\r\n\t\tif ( texture.image && texture.image.__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( texture.image.__webglTextureCube );\r\n\r\n\t\t\tdelete texture.image.__webglTextureCube;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( texture.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( texture.__webglTexture );\r\n\r\n\t\t\tdelete texture.__webglTexture;\r\n\t\t\tdelete texture.__webglInit;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tvar deallocateRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tif ( ! renderTarget || renderTarget.__webglTexture === undefined ) return;\r\n\r\n\t\t_gl.deleteTexture( renderTarget.__webglTexture );\r\n\r\n\t\tdelete renderTarget.__webglTexture;\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTarget.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTarget.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tdelete renderTarget.__webglFramebuffer;\r\n\t\tdelete renderTarget.__webglRenderbuffer;\r\n\r\n\t};\r\n\r\n\tvar deallocateMaterial = function ( material ) {\r\n\r\n\t\tvar program = material.program.program;\r\n\r\n\t\tif ( program === undefined ) return;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\t// only deallocate GL program if this was the last use of shared program\r\n\t\t// assumed there is only single copy of any program in the _programs list\r\n\t\t// (that's how it's constructed)\r\n\r\n\t\tvar i, il, programInfo;\r\n\t\tvar deleteProgram = false;\r\n\r\n\t\tfor ( i = 0, il = _programs.length; i < il; i ++ ) {\r\n\r\n\t\t\tprogramInfo = _programs[ i ];\r\n\r\n\t\t\tif ( programInfo.program === program ) {\r\n\r\n\t\t\t\tprogramInfo.usedTimes --;\r\n\r\n\t\t\t\tif ( programInfo.usedTimes === 0 ) {\r\n\r\n\t\t\t\t\tdeleteProgram = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( deleteProgram === true ) {\r\n\r\n\t\t\t// avoid using array.splice, this is costlier than creating new array from scratch\r\n\r\n\t\t\tvar newPrograms = [];\r\n\r\n\t\t\tfor ( i = 0, il = _programs.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tprogramInfo = _programs[ i ];\r\n\r\n\t\t\t\tif ( programInfo.program !== program ) {\r\n\r\n\t\t\t\t\tnewPrograms.push( programInfo );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_programs = newPrograms;\r\n\r\n\t\t\t_gl.deleteProgram( program );\r\n\r\n\t\t\t_this.info.memory.programs --;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Buffer initialization\r\n\r\n\tfunction initCustomAttributes ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar material = object.material;\r\n\r\n\t\tvar nvertices = geometry.vertices.length;\r\n\r\n\t\tif ( material.attributes ) {\r\n\r\n\t\t\tif ( geometry.__webglCustomAttributesList === undefined ) {\r\n\r\n\t\t\t\tgeometry.__webglCustomAttributesList = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var name in material.attributes ) {\r\n\r\n\t\t\t\tvar attribute = material.attributes[ name ];\r\n\r\n\t\t\t\tif ( ! attribute.__webglInitialized || attribute.createUniqueBuffers ) {\r\n\r\n\t\t\t\t\tattribute.__webglInitialized = true;\r\n\r\n\t\t\t\t\tvar size = 1;   // \"f\" and \"i\"\r\n\r\n\t\t\t\t\tif ( attribute.type === 'v2' ) size = 2;\r\n\t\t\t\t\telse if ( attribute.type === 'v3' ) size = 3;\r\n\t\t\t\t\telse if ( attribute.type === 'v4' ) size = 4;\r\n\t\t\t\t\telse if ( attribute.type === 'c'  ) size = 3;\r\n\r\n\t\t\t\t\tattribute.size = size;\r\n\r\n\t\t\t\t\tattribute.array = new Float32Array( nvertices * size );\r\n\r\n\t\t\t\t\tattribute.buffer = _gl.createBuffer();\r\n\t\t\t\t\tattribute.buffer.belongsToAttribute = name;\r\n\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.__webglCustomAttributesList.push( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction initParticleBuffers ( geometry, object ) {\r\n\r\n\t\tvar nvertices = geometry.vertices.length;\r\n\r\n\t\tgeometry.__vertexArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometry.__colorArray = new Float32Array( nvertices * 3 );\r\n\r\n\t\tgeometry.__sortArray = [];\r\n\r\n\t\tgeometry.__webglParticleCount = nvertices;\r\n\r\n\t\tinitCustomAttributes( object );\r\n\r\n\t};\r\n\r\n\tfunction initLineBuffers ( geometry, object ) {\r\n\r\n\t\tvar nvertices = geometry.vertices.length;\r\n\r\n\t\tgeometry.__vertexArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometry.__colorArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometry.__lineDistanceArray = new Float32Array( nvertices * 1 );\r\n\r\n\t\tgeometry.__webglLineCount = nvertices;\r\n\r\n\t\tinitCustomAttributes( object );\r\n\r\n\t};\r\n\r\n\tfunction initMeshBuffers ( geometryGroup, object ) {\r\n\r\n\t\tvar geometry = object.geometry,\r\n\t\t\tfaces3 = geometryGroup.faces3,\r\n\r\n\t\t\tnvertices = faces3.length * 3,\r\n\t\t\tntris     = faces3.length * 1,\r\n\t\t\tnlines    = faces3.length * 3,\r\n\r\n\t\t\tmaterial = getBufferMaterial( object, geometryGroup );\r\n\r\n\t\tgeometryGroup.__vertexArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometryGroup.__normalArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometryGroup.__colorArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometryGroup.__uvArray = new Float32Array( nvertices * 2 );\r\n\r\n\t\tif ( geometry.faceVertexUvs.length > 1 ) {\r\n\r\n\t\t\tgeometryGroup.__uv2Array = new Float32Array( nvertices * 2 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.hasTangents ) {\r\n\r\n\t\t\tgeometryGroup.__tangentArray = new Float32Array( nvertices * 4 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.geometry.skinWeights.length && object.geometry.skinIndices.length ) {\r\n\r\n\t\t\tgeometryGroup.__skinIndexArray = new Float32Array( nvertices * 4 );\r\n\t\t\tgeometryGroup.__skinWeightArray = new Float32Array( nvertices * 4 );\r\n\r\n\t\t}\r\n\r\n\t\tvar UintArray = extensions.get( 'OES_element_index_uint' ) !== null && ntris > 21845 ? Uint32Array : Uint16Array; // 65535 / 3\r\n\r\n\t\tgeometryGroup.__typeArray = UintArray;\r\n\t\tgeometryGroup.__faceArray = new UintArray( ntris * 3 );\r\n\t\tgeometryGroup.__lineArray = new UintArray( nlines * 2 );\r\n\r\n\t\tvar numMorphTargets = geometryGroup.numMorphTargets;\r\n\r\n\t\tif ( numMorphTargets ) {\r\n\r\n\t\t\tgeometryGroup.__morphTargetsArrays = [];\r\n\r\n\t\t\tfor ( var m = 0, ml = numMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__morphTargetsArrays.push( new Float32Array( nvertices * 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar numMorphNormals = geometryGroup.numMorphNormals;\r\n\r\n\t\tif ( numMorphNormals ) {\r\n\r\n\t\t\tgeometryGroup.__morphNormalsArrays = [];\r\n\r\n\t\t\tfor ( var m = 0, ml = numMorphNormals; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__morphNormalsArrays.push( new Float32Array( nvertices * 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometryGroup.__webglFaceCount = ntris * 3;\r\n\t\tgeometryGroup.__webglLineCount = nlines * 2;\r\n\r\n\r\n\t\t// custom attributes\r\n\r\n\t\tif ( material.attributes ) {\r\n\r\n\t\t\tif ( geometryGroup.__webglCustomAttributesList === undefined ) {\r\n\r\n\t\t\t\tgeometryGroup.__webglCustomAttributesList = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var name in material.attributes ) {\r\n\r\n\t\t\t\t// Do a shallow copy of the attribute object so different geometryGroup chunks use different\r\n\t\t\t\t// attribute buffers which are correctly indexed in the setMeshBuffers function\r\n\r\n\t\t\t\tvar originalAttribute = material.attributes[ name ];\r\n\r\n\t\t\t\tvar attribute = {};\r\n\r\n\t\t\t\tfor ( var property in originalAttribute ) {\r\n\r\n\t\t\t\t\tattribute[ property ] = originalAttribute[ property ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! attribute.__webglInitialized || attribute.createUniqueBuffers ) {\r\n\r\n\t\t\t\t\tattribute.__webglInitialized = true;\r\n\r\n\t\t\t\t\tvar size = 1;   // \"f\" and \"i\"\r\n\r\n\t\t\t\t\tif ( attribute.type === 'v2' ) size = 2;\r\n\t\t\t\t\telse if ( attribute.type === 'v3' ) size = 3;\r\n\t\t\t\t\telse if ( attribute.type === 'v4' ) size = 4;\r\n\t\t\t\t\telse if ( attribute.type === 'c'  ) size = 3;\r\n\r\n\t\t\t\t\tattribute.size = size;\r\n\r\n\t\t\t\t\tattribute.array = new Float32Array( nvertices * size );\r\n\r\n\t\t\t\t\tattribute.buffer = _gl.createBuffer();\r\n\t\t\t\t\tattribute.buffer.belongsToAttribute = name;\r\n\r\n\t\t\t\t\toriginalAttribute.needsUpdate = true;\r\n\t\t\t\t\tattribute.__original = originalAttribute;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometryGroup.__webglCustomAttributesList.push( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometryGroup.__inittedArrays = true;\r\n\r\n\t};\r\n\r\n\tfunction getBufferMaterial( object, geometryGroup ) {\r\n\r\n\t\treturn object.material instanceof THREE.MeshFaceMaterial\r\n\t\t\t ? object.material.materials[ geometryGroup.materialIndex ]\r\n\t\t\t : object.material;\r\n\r\n\t};\r\n\r\n\tfunction materialNeedsSmoothNormals ( material ) {\r\n\r\n\t\treturn material && material.shading !== undefined && material.shading === THREE.SmoothShading;\r\n\r\n\t};\r\n\r\n\t// Buffer setting\r\n\r\n\tfunction setParticleBuffers ( geometry, hint, object ) {\r\n\r\n\t\tvar v, c, vertex, offset, index, color,\r\n\r\n\t\tvertices = geometry.vertices,\r\n\t\tvl = vertices.length,\r\n\r\n\t\tcolors = geometry.colors,\r\n\t\tcl = colors.length,\r\n\r\n\t\tvertexArray = geometry.__vertexArray,\r\n\t\tcolorArray = geometry.__colorArray,\r\n\r\n\t\tsortArray = geometry.__sortArray,\r\n\r\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\r\n\t\tdirtyElements = geometry.elementsNeedUpdate,\r\n\t\tdirtyColors = geometry.colorsNeedUpdate,\r\n\r\n\t\tcustomAttributes = geometry.__webglCustomAttributesList,\r\n\t\ti, il,\r\n\t\ta, ca, cal, value,\r\n\t\tcustomAttribute;\r\n\r\n\t\tif ( dirtyVertices ) {\r\n\r\n\t\t\tfor ( v = 0; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertex = vertices[ v ];\r\n\r\n\t\t\t\toffset = v * 3;\r\n\r\n\t\t\t\tvertexArray[ offset ]     = vertex.x;\r\n\t\t\t\tvertexArray[ offset + 1 ] = vertex.y;\r\n\t\t\t\tvertexArray[ offset + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyColors ) {\r\n\r\n\t\t\tfor ( c = 0; c < cl; c ++ ) {\r\n\r\n\t\t\t\tcolor = colors[ c ];\r\n\r\n\t\t\t\toffset = c * 3;\r\n\r\n\t\t\t\tcolorArray[ offset ]     = color.r;\r\n\t\t\t\tcolorArray[ offset + 1 ] = color.g;\r\n\t\t\t\tcolorArray[ offset + 2 ] = color.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( customAttributes ) {\r\n\r\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\tif ( customAttribute.needsUpdate && ( customAttribute.boundTo === undefined ||  customAttribute.boundTo === 'vertices' ) ) {\r\n\r\n\t\t\t\t\tcal = customAttribute.value.length;\r\n\r\n\t\t\t\t\toffset = 0;\r\n\r\n\t\t\t\t\tif ( customAttribute.size === 1 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ ca ] = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 2 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\r\n\t\t\t\t\t\t\toffset += 2;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 3 ) {\r\n\r\n\t\t\t\t\t\tif ( customAttribute.type === 'c' ) {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.r;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.g;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.b;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.z;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 4 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]      = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1  ] = value.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2  ] = value.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 3  ] = value.w;\r\n\r\n\t\t\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n\t\t\t\tcustomAttribute.needsUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setLineBuffers ( geometry, hint ) {\r\n\r\n\t\tvar v, c, d, vertex, offset, color,\r\n\r\n\t\tvertices = geometry.vertices,\r\n\t\tcolors = geometry.colors,\r\n\t\tlineDistances = geometry.lineDistances,\r\n\r\n\t\tvl = vertices.length,\r\n\t\tcl = colors.length,\r\n\t\tdl = lineDistances.length,\r\n\r\n\t\tvertexArray = geometry.__vertexArray,\r\n\t\tcolorArray = geometry.__colorArray,\r\n\t\tlineDistanceArray = geometry.__lineDistanceArray,\r\n\r\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\r\n\t\tdirtyColors = geometry.colorsNeedUpdate,\r\n\t\tdirtyLineDistances = geometry.lineDistancesNeedUpdate,\r\n\r\n\t\tcustomAttributes = geometry.__webglCustomAttributesList,\r\n\r\n\t\ti, il,\r\n\t\ta, ca, cal, value,\r\n\t\tcustomAttribute;\r\n\r\n\t\tif ( dirtyVertices ) {\r\n\r\n\t\t\tfor ( v = 0; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertex = vertices[ v ];\r\n\r\n\t\t\t\toffset = v * 3;\r\n\r\n\t\t\t\tvertexArray[ offset ]     = vertex.x;\r\n\t\t\t\tvertexArray[ offset + 1 ] = vertex.y;\r\n\t\t\t\tvertexArray[ offset + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyColors ) {\r\n\r\n\t\t\tfor ( c = 0; c < cl; c ++ ) {\r\n\r\n\t\t\t\tcolor = colors[ c ];\r\n\r\n\t\t\t\toffset = c * 3;\r\n\r\n\t\t\t\tcolorArray[ offset ]     = color.r;\r\n\t\t\t\tcolorArray[ offset + 1 ] = color.g;\r\n\t\t\t\tcolorArray[ offset + 2 ] = color.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyLineDistances ) {\r\n\r\n\t\t\tfor ( d = 0; d < dl; d ++ ) {\r\n\r\n\t\t\t\tlineDistanceArray[ d ] = lineDistances[ d ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglLineDistanceBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, lineDistanceArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( customAttributes ) {\r\n\r\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\tif ( customAttribute.needsUpdate && ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) ) {\r\n\r\n\t\t\t\t\toffset = 0;\r\n\r\n\t\t\t\t\tcal = customAttribute.value.length;\r\n\r\n\t\t\t\t\tif ( customAttribute.size === 1 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ ca ] = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 2 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\r\n\t\t\t\t\t\t\toffset += 2;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 3 ) {\r\n\r\n\t\t\t\t\t\tif ( customAttribute.type === 'c' ) {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.r;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.g;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.b;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.z;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 4 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]    = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1  ] = value.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2  ] = value.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 3  ] = value.w;\r\n\r\n\t\t\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n\t\t\t\t\tcustomAttribute.needsUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMeshBuffers( geometryGroup, object, hint, dispose, material ) {\r\n\r\n\t\tif ( ! geometryGroup.__inittedArrays ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar needsSmoothNormals = materialNeedsSmoothNormals( material );\r\n\r\n\t\tvar f, fl, fi, face,\r\n\t\tvertexNormals, faceNormal, normal,\r\n\t\tvertexColors, faceColor,\r\n\t\tvertexTangents,\r\n\t\tuv, uv2, v1, v2, v3, v4, t1, t2, t3, t4, n1, n2, n3, n4,\r\n\t\tc1, c2, c3,\r\n\t\tsw1, sw2, sw3, sw4,\r\n\t\tsi1, si2, si3, si4,\r\n\t\tsa1, sa2, sa3, sa4,\r\n\t\tsb1, sb2, sb3, sb4,\r\n\t\tm, ml, i, il,\r\n\t\tvn, uvi, uv2i,\r\n\t\tvk, vkl, vka,\r\n\t\tnka, chf, faceVertexNormals,\r\n\t\ta,\r\n\r\n\t\tvertexIndex = 0,\r\n\r\n\t\toffset = 0,\r\n\t\toffset_uv = 0,\r\n\t\toffset_uv2 = 0,\r\n\t\toffset_face = 0,\r\n\t\toffset_normal = 0,\r\n\t\toffset_tangent = 0,\r\n\t\toffset_line = 0,\r\n\t\toffset_color = 0,\r\n\t\toffset_skin = 0,\r\n\t\toffset_morphTarget = 0,\r\n\t\toffset_custom = 0,\r\n\t\toffset_customSrc = 0,\r\n\r\n\t\tvalue,\r\n\r\n\t\tvertexArray = geometryGroup.__vertexArray,\r\n\t\tuvArray = geometryGroup.__uvArray,\r\n\t\tuv2Array = geometryGroup.__uv2Array,\r\n\t\tnormalArray = geometryGroup.__normalArray,\r\n\t\ttangentArray = geometryGroup.__tangentArray,\r\n\t\tcolorArray = geometryGroup.__colorArray,\r\n\r\n\t\tskinIndexArray = geometryGroup.__skinIndexArray,\r\n\t\tskinWeightArray = geometryGroup.__skinWeightArray,\r\n\r\n\t\tmorphTargetsArrays = geometryGroup.__morphTargetsArrays,\r\n\t\tmorphNormalsArrays = geometryGroup.__morphNormalsArrays,\r\n\r\n\t\tcustomAttributes = geometryGroup.__webglCustomAttributesList,\r\n\t\tcustomAttribute,\r\n\r\n\t\tfaceArray = geometryGroup.__faceArray,\r\n\t\tlineArray = geometryGroup.__lineArray,\r\n\r\n\t\tgeometry = object.geometry, // this is shared for all chunks\r\n\r\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\r\n\t\tdirtyElements = geometry.elementsNeedUpdate,\r\n\t\tdirtyUvs = geometry.uvsNeedUpdate,\r\n\t\tdirtyNormals = geometry.normalsNeedUpdate,\r\n\t\tdirtyTangents = geometry.tangentsNeedUpdate,\r\n\t\tdirtyColors = geometry.colorsNeedUpdate,\r\n\t\tdirtyMorphTargets = geometry.morphTargetsNeedUpdate,\r\n\r\n\t\tvertices = geometry.vertices,\r\n\t\tchunk_faces3 = geometryGroup.faces3,\r\n\t\tobj_faces = geometry.faces,\r\n\r\n\t\tobj_uvs  = geometry.faceVertexUvs[ 0 ],\r\n\t\tobj_uvs2 = geometry.faceVertexUvs[ 1 ],\r\n\r\n\t\tobj_colors = geometry.colors,\r\n\r\n\t\tobj_skinIndices = geometry.skinIndices,\r\n\t\tobj_skinWeights = geometry.skinWeights,\r\n\r\n\t\tmorphTargets = geometry.morphTargets,\r\n\t\tmorphNormals = geometry.morphNormals;\r\n\r\n\t\tif ( dirtyVertices ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\tv1 = vertices[ face.a ];\r\n\t\t\t\tv2 = vertices[ face.b ];\r\n\t\t\t\tv3 = vertices[ face.c ];\r\n\r\n\t\t\t\tvertexArray[ offset ]     = v1.x;\r\n\t\t\t\tvertexArray[ offset + 1 ] = v1.y;\r\n\t\t\t\tvertexArray[ offset + 2 ] = v1.z;\r\n\r\n\t\t\t\tvertexArray[ offset + 3 ] = v2.x;\r\n\t\t\t\tvertexArray[ offset + 4 ] = v2.y;\r\n\t\t\t\tvertexArray[ offset + 5 ] = v2.z;\r\n\r\n\t\t\t\tvertexArray[ offset + 6 ] = v3.x;\r\n\t\t\t\tvertexArray[ offset + 7 ] = v3.y;\r\n\t\t\t\tvertexArray[ offset + 8 ] = v3.z;\r\n\r\n\t\t\t\toffset += 9;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyMorphTargets ) {\r\n\r\n\t\t\tfor ( vk = 0, vkl = morphTargets.length; vk < vkl; vk ++ ) {\r\n\r\n\t\t\t\toffset_morphTarget = 0;\r\n\r\n\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tchf = chunk_faces3[ f ];\r\n\t\t\t\t\tface = obj_faces[ chf ];\r\n\r\n\t\t\t\t\t// morph positions\r\n\r\n\t\t\t\t\tv1 = morphTargets[ vk ].vertices[ face.a ];\r\n\t\t\t\t\tv2 = morphTargets[ vk ].vertices[ face.b ];\r\n\t\t\t\t\tv3 = morphTargets[ vk ].vertices[ face.c ];\r\n\r\n\t\t\t\t\tvka = morphTargetsArrays[ vk ];\r\n\r\n\t\t\t\t\tvka[ offset_morphTarget ]     = v1.x;\r\n\t\t\t\t\tvka[ offset_morphTarget + 1 ] = v1.y;\r\n\t\t\t\t\tvka[ offset_morphTarget + 2 ] = v1.z;\r\n\r\n\t\t\t\t\tvka[ offset_morphTarget + 3 ] = v2.x;\r\n\t\t\t\t\tvka[ offset_morphTarget + 4 ] = v2.y;\r\n\t\t\t\t\tvka[ offset_morphTarget + 5 ] = v2.z;\r\n\r\n\t\t\t\t\tvka[ offset_morphTarget + 6 ] = v3.x;\r\n\t\t\t\t\tvka[ offset_morphTarget + 7 ] = v3.y;\r\n\t\t\t\t\tvka[ offset_morphTarget + 8 ] = v3.z;\r\n\r\n\t\t\t\t\t// morph normals\r\n\r\n\t\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t\tif ( needsSmoothNormals ) {\r\n\r\n\t\t\t\t\t\t\tfaceVertexNormals = morphNormals[ vk ].vertexNormals[ chf ];\r\n\r\n\t\t\t\t\t\t\tn1 = faceVertexNormals.a;\r\n\t\t\t\t\t\t\tn2 = faceVertexNormals.b;\r\n\t\t\t\t\t\t\tn3 = faceVertexNormals.c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tn1 = morphNormals[ vk ].faceNormals[ chf ];\r\n\t\t\t\t\t\t\tn2 = n1;\r\n\t\t\t\t\t\t\tn3 = n1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnka = morphNormalsArrays[ vk ];\r\n\r\n\t\t\t\t\t\tnka[ offset_morphTarget ]     = n1.x;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 1 ] = n1.y;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 2 ] = n1.z;\r\n\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 3 ] = n2.x;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 4 ] = n2.y;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 5 ] = n2.z;\r\n\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 6 ] = n3.x;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 7 ] = n3.y;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 8 ] = n3.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//\r\n\r\n\t\t\t\t\toffset_morphTarget += 9;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ vk ] );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, morphTargetsArrays[ vk ], hint );\r\n\r\n\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ vk ] );\r\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, morphNormalsArrays[ vk ], hint );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( obj_skinWeights.length ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t// weights\r\n\r\n\t\t\t\tsw1 = obj_skinWeights[ face.a ];\r\n\t\t\t\tsw2 = obj_skinWeights[ face.b ];\r\n\t\t\t\tsw3 = obj_skinWeights[ face.c ];\r\n\r\n\t\t\t\tskinWeightArray[ offset_skin ]     = sw1.x;\r\n\t\t\t\tskinWeightArray[ offset_skin + 1 ] = sw1.y;\r\n\t\t\t\tskinWeightArray[ offset_skin + 2 ] = sw1.z;\r\n\t\t\t\tskinWeightArray[ offset_skin + 3 ] = sw1.w;\r\n\r\n\t\t\t\tskinWeightArray[ offset_skin + 4 ] = sw2.x;\r\n\t\t\t\tskinWeightArray[ offset_skin + 5 ] = sw2.y;\r\n\t\t\t\tskinWeightArray[ offset_skin + 6 ] = sw2.z;\r\n\t\t\t\tskinWeightArray[ offset_skin + 7 ] = sw2.w;\r\n\r\n\t\t\t\tskinWeightArray[ offset_skin + 8 ]  = sw3.x;\r\n\t\t\t\tskinWeightArray[ offset_skin + 9 ]  = sw3.y;\r\n\t\t\t\tskinWeightArray[ offset_skin + 10 ] = sw3.z;\r\n\t\t\t\tskinWeightArray[ offset_skin + 11 ] = sw3.w;\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tsi1 = obj_skinIndices[ face.a ];\r\n\t\t\t\tsi2 = obj_skinIndices[ face.b ];\r\n\t\t\t\tsi3 = obj_skinIndices[ face.c ];\r\n\r\n\t\t\t\tskinIndexArray[ offset_skin ]     = si1.x;\r\n\t\t\t\tskinIndexArray[ offset_skin + 1 ] = si1.y;\r\n\t\t\t\tskinIndexArray[ offset_skin + 2 ] = si1.z;\r\n\t\t\t\tskinIndexArray[ offset_skin + 3 ] = si1.w;\r\n\r\n\t\t\t\tskinIndexArray[ offset_skin + 4 ] = si2.x;\r\n\t\t\t\tskinIndexArray[ offset_skin + 5 ] = si2.y;\r\n\t\t\t\tskinIndexArray[ offset_skin + 6 ] = si2.z;\r\n\t\t\t\tskinIndexArray[ offset_skin + 7 ] = si2.w;\r\n\r\n\t\t\t\tskinIndexArray[ offset_skin + 8 ]  = si3.x;\r\n\t\t\t\tskinIndexArray[ offset_skin + 9 ]  = si3.y;\r\n\t\t\t\tskinIndexArray[ offset_skin + 10 ] = si3.z;\r\n\t\t\t\tskinIndexArray[ offset_skin + 11 ] = si3.w;\r\n\r\n\t\t\t\toffset_skin += 12;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_skin > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, skinIndexArray, hint );\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, skinWeightArray, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyColors ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\tvertexColors = face.vertexColors;\r\n\t\t\t\tfaceColor = face.color;\r\n\r\n\t\t\t\tif ( vertexColors.length === 3 && material.vertexColors === THREE.VertexColors ) {\r\n\r\n\t\t\t\t\tc1 = vertexColors[ 0 ];\r\n\t\t\t\t\tc2 = vertexColors[ 1 ];\r\n\t\t\t\t\tc3 = vertexColors[ 2 ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tc1 = faceColor;\r\n\t\t\t\t\tc2 = faceColor;\r\n\t\t\t\t\tc3 = faceColor;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolorArray[ offset_color ]     = c1.r;\r\n\t\t\t\tcolorArray[ offset_color + 1 ] = c1.g;\r\n\t\t\t\tcolorArray[ offset_color + 2 ] = c1.b;\r\n\r\n\t\t\t\tcolorArray[ offset_color + 3 ] = c2.r;\r\n\t\t\t\tcolorArray[ offset_color + 4 ] = c2.g;\r\n\t\t\t\tcolorArray[ offset_color + 5 ] = c2.b;\r\n\r\n\t\t\t\tcolorArray[ offset_color + 6 ] = c3.r;\r\n\t\t\t\tcolorArray[ offset_color + 7 ] = c3.g;\r\n\t\t\t\tcolorArray[ offset_color + 8 ] = c3.b;\r\n\r\n\t\t\t\toffset_color += 9;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_color > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyTangents && geometry.hasTangents ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\tvertexTangents = face.vertexTangents;\r\n\r\n\t\t\t\tt1 = vertexTangents[ 0 ];\r\n\t\t\t\tt2 = vertexTangents[ 1 ];\r\n\t\t\t\tt3 = vertexTangents[ 2 ];\r\n\r\n\t\t\t\ttangentArray[ offset_tangent ]     = t1.x;\r\n\t\t\t\ttangentArray[ offset_tangent + 1 ] = t1.y;\r\n\t\t\t\ttangentArray[ offset_tangent + 2 ] = t1.z;\r\n\t\t\t\ttangentArray[ offset_tangent + 3 ] = t1.w;\r\n\r\n\t\t\t\ttangentArray[ offset_tangent + 4 ] = t2.x;\r\n\t\t\t\ttangentArray[ offset_tangent + 5 ] = t2.y;\r\n\t\t\t\ttangentArray[ offset_tangent + 6 ] = t2.z;\r\n\t\t\t\ttangentArray[ offset_tangent + 7 ] = t2.w;\r\n\r\n\t\t\t\ttangentArray[ offset_tangent + 8 ]  = t3.x;\r\n\t\t\t\ttangentArray[ offset_tangent + 9 ]  = t3.y;\r\n\t\t\t\ttangentArray[ offset_tangent + 10 ] = t3.z;\r\n\t\t\t\ttangentArray[ offset_tangent + 11 ] = t3.w;\r\n\r\n\t\t\t\toffset_tangent += 12;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, tangentArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyNormals ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\tvertexNormals = face.vertexNormals;\r\n\t\t\t\tfaceNormal = face.normal;\r\n\r\n\t\t\t\tif ( vertexNormals.length === 3 && needsSmoothNormals ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tvn = vertexNormals[ i ];\r\n\r\n\t\t\t\t\t\tnormalArray[ offset_normal ]     = vn.x;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 1 ] = vn.y;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 2 ] = vn.z;\r\n\r\n\t\t\t\t\t\toffset_normal += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tnormalArray[ offset_normal ]     = faceNormal.x;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 1 ] = faceNormal.y;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 2 ] = faceNormal.z;\r\n\r\n\t\t\t\t\t\toffset_normal += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, normalArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyUvs && obj_uvs ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tfi = chunk_faces3[ f ];\r\n\r\n\t\t\t\tuv = obj_uvs[ fi ];\r\n\r\n\t\t\t\tif ( uv === undefined ) continue;\r\n\r\n\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\tuvi = uv[ i ];\r\n\r\n\t\t\t\t\tuvArray[ offset_uv ]     = uvi.x;\r\n\t\t\t\t\tuvArray[ offset_uv + 1 ] = uvi.y;\r\n\r\n\t\t\t\t\toffset_uv += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_uv > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, uvArray, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyUvs && obj_uvs2 ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tfi = chunk_faces3[ f ];\r\n\r\n\t\t\t\tuv2 = obj_uvs2[ fi ];\r\n\r\n\t\t\t\tif ( uv2 === undefined ) continue;\r\n\r\n\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\tuv2i = uv2[ i ];\r\n\r\n\t\t\t\t\tuv2Array[ offset_uv2 ]     = uv2i.x;\r\n\t\t\t\t\tuv2Array[ offset_uv2 + 1 ] = uv2i.y;\r\n\r\n\t\t\t\t\toffset_uv2 += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_uv2 > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, uv2Array, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyElements ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tfaceArray[ offset_face ]   = vertexIndex;\r\n\t\t\t\tfaceArray[ offset_face + 1 ] = vertexIndex + 1;\r\n\t\t\t\tfaceArray[ offset_face + 2 ] = vertexIndex + 2;\r\n\r\n\t\t\t\toffset_face += 3;\r\n\r\n\t\t\t\tlineArray[ offset_line ]     = vertexIndex;\r\n\t\t\t\tlineArray[ offset_line + 1 ] = vertexIndex + 1;\r\n\r\n\t\t\t\tlineArray[ offset_line + 2 ] = vertexIndex;\r\n\t\t\t\tlineArray[ offset_line + 3 ] = vertexIndex + 2;\r\n\r\n\t\t\t\tlineArray[ offset_line + 4 ] = vertexIndex + 1;\r\n\t\t\t\tlineArray[ offset_line + 5 ] = vertexIndex + 2;\r\n\r\n\t\t\t\toffset_line += 6;\r\n\r\n\t\t\t\tvertexIndex += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\r\n\t\t\t_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, faceArray, hint );\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\r\n\t\t\t_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, lineArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( customAttributes ) {\r\n\r\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\tif ( ! customAttribute.__original.needsUpdate ) continue;\r\n\r\n\t\t\t\toffset_custom = 0;\r\n\t\t\t\toffset_customSrc = 0;\r\n\r\n\t\t\t\tif ( customAttribute.size === 1 ) {\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 3;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = value;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = value;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = value;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 3;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( customAttribute.size === 2 ) {\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v3.y;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 6;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value;\r\n\t\t\t\t\t\t\tv2 = value;\r\n\t\t\t\t\t\t\tv3 = value;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v3.y;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 6;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( customAttribute.size === 3 ) {\r\n\r\n\t\t\t\t\tvar pp;\r\n\r\n\t\t\t\t\tif ( customAttribute.type === 'c' ) {\r\n\r\n\t\t\t\t\t\tpp = [ 'r', 'g', 'b' ];\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpp = [ 'x', 'y', 'z' ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 9;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value;\r\n\t\t\t\t\t\t\tv2 = value;\r\n\t\t\t\t\t\t\tv3 = value;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 9;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faceVertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value[ 0 ];\r\n\t\t\t\t\t\t\tv2 = value[ 1 ];\r\n\t\t\t\t\t\t\tv3 = value[ 2 ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 9;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( customAttribute.size === 4 ) {\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ]   = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 12;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value;\r\n\t\t\t\t\t\t\tv2 = value;\r\n\t\t\t\t\t\t\tv3 = value;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ]   = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 12;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faceVertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value[ 0 ];\r\n\t\t\t\t\t\t\tv2 = value[ 1 ];\r\n\t\t\t\t\t\t\tv3 = value[ 2 ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ]   = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 12;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dispose ) {\r\n\r\n\t\t\tdelete geometryGroup.__inittedArrays;\r\n\t\t\tdelete geometryGroup.__colorArray;\r\n\t\t\tdelete geometryGroup.__normalArray;\r\n\t\t\tdelete geometryGroup.__tangentArray;\r\n\t\t\tdelete geometryGroup.__uvArray;\r\n\t\t\tdelete geometryGroup.__uv2Array;\r\n\t\t\tdelete geometryGroup.__faceArray;\r\n\t\t\tdelete geometryGroup.__vertexArray;\r\n\t\t\tdelete geometryGroup.__lineArray;\r\n\t\t\tdelete geometryGroup.__skinIndexArray;\r\n\t\t\tdelete geometryGroup.__skinWeightArray;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tinitAttributes();\r\n\r\n\t\tif ( object.hasPositions && ! object.__webglVertexBuffer ) object.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! object.__webglNormalBuffer ) object.__webglNormalBuffer = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! object.__webglUvBuffer ) object.__webglUvBuffer = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! object.__webglColorBuffer ) object.__webglColorBuffer = _gl.createBuffer();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\t\t\tenableAttribute( program.attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglNormalBuffer );\r\n\r\n\t\t\tif ( material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tvar nx, ny, nz,\r\n\t\t\t\t\tnax, nbx, ncx, nay, nby, ncy, naz, nbz, ncz,\r\n\t\t\t\t\tnormalArray,\r\n\t\t\t\t\ti, il = object.count * 3;\r\n\r\n\t\t\t\tfor ( i = 0; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tnormalArray = object.normalArray;\r\n\r\n\t\t\t\t\tnax  = normalArray[ i ];\r\n\t\t\t\t\tnay  = normalArray[ i + 1 ];\r\n\t\t\t\t\tnaz  = normalArray[ i + 2 ];\r\n\r\n\t\t\t\t\tnbx  = normalArray[ i + 3 ];\r\n\t\t\t\t\tnby  = normalArray[ i + 4 ];\r\n\t\t\t\t\tnbz  = normalArray[ i + 5 ];\r\n\r\n\t\t\t\t\tncx  = normalArray[ i + 6 ];\r\n\t\t\t\t\tncy  = normalArray[ i + 7 ];\r\n\t\t\t\t\tncz  = normalArray[ i + 8 ];\r\n\r\n\t\t\t\t\tnx = ( nax + nbx + ncx ) / 3;\r\n\t\t\t\t\tny = ( nay + nby + ncy ) / 3;\r\n\t\t\t\t\tnz = ( naz + nbz + ncz ) / 3;\r\n\r\n\t\t\t\t\tnormalArray[ i ]   = nx;\r\n\t\t\t\t\tnormalArray[ i + 1 ] = ny;\r\n\t\t\t\t\tnormalArray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tnormalArray[ i + 3 ] = nx;\r\n\t\t\t\t\tnormalArray[ i + 4 ] = ny;\r\n\t\t\t\t\tnormalArray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tnormalArray[ i + 6 ] = nx;\r\n\t\t\t\t\tnormalArray[ i + 7 ] = ny;\r\n\t\t\t\t\tnormalArray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\t\t\tenableAttribute( program.attributes.normal );\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglUvBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\t\t\tenableAttribute( program.attributes.uv );\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglColorBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\t\t\tenableAttribute( program.attributes.color );\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tdisableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.attributes;\r\n\t\tvar programAttributesKeys = program.attributesKeys;\r\n\r\n\t\tfor ( var i = 0, l = programAttributesKeys.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar key = programAttributesKeys[ i ];\r\n\t\t\tvar programAttribute = programAttributes[ key ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ key ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryAttribute.buffer );\r\n\r\n\t\t\t\t\tenableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tif ( material.defaultAttributeValues[ key ].length === 2 ) {\r\n\r\n\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, material.defaultAttributeValues[ key ] );\r\n\r\n\t\t\t\t\t} else if ( material.defaultAttributeValues[ key ].length === 3 ) {\r\n\r\n\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, material.defaultAttributeValues[ key ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdisableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\tthis.renderBufferDirect = function ( camera, lights, fog, material, geometry, object ) {\r\n\r\n\t\tif ( material.visible === false ) return;\r\n\r\n\t\tupdateObject( object );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false,\r\n\t\t\twireframeBit = material.wireframe ? 1 : 0,\r\n\t\t\tgeometryProgram = 'direct_' + geometry.id + '_' + program.id + '_' + wireframeBit;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tinitAttributes();\r\n\r\n\t\t}\r\n\r\n\t\t// render mesh\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar mode = material.wireframe === true ? _gl.LINES : _gl.TRIANGLES;\r\n\r\n\t\t\tvar index = geometry.attributes.index;\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\t// indexed triangles\r\n\r\n\t\t\t\tvar type, size;\r\n\r\n\t\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\t\tsize = 4;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\t\tsize = 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.drawElements( mode, index.array.length, type, 0 );\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.vertices += index.array.length; // not really true, here vertices can be shared\r\n\t\t\t\t\t_this.info.render.faces += index.array.length / 3;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// if there is more than 1 chunk\r\n\t\t\t\t\t// must set attribute pointers to use new offsets for each chunk\r\n\t\t\t\t\t// even if geometry and materials didn't change\r\n\r\n\t\t\t\t\tupdateBuffers = true;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar startIndex = offsets[ i ].index;\r\n\r\n\t\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, startIndex );\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// render indexed triangles\r\n\r\n\t\t\t\t\t\t_gl.drawElements( mode, offsets[ i ].count, type, offsets[ i ].start * size );\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared\r\n\t\t\t\t\t\t_this.info.render.faces += offsets[ i ].count / 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed triangles\r\n\r\n\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = geometry.attributes[ 'position' ];\r\n\r\n\t\t\t\t// render non-indexed triangles\r\n\r\n\t\t\t\t_gl.drawArrays( mode, 0, position.array.length / 3 );\r\n\r\n\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t_this.info.render.vertices += position.array.length / 3;\r\n\t\t\t\t_this.info.render.faces += position.array.length / 9;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t// render particles\r\n\r\n\t\t\tvar mode = _gl.POINTS;\r\n\r\n\t\t\tvar index = geometry.attributes.index;\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\t// indexed points\r\n\r\n\t\t\t\tvar type, size;\r\n\r\n\t\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\t\tsize = 4;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\t\tsize = 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.drawElements( mode, index.array.length, type, 0);\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.points += index.array.length;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// if there is more than 1 chunk\r\n\t\t\t\t\t// must set attribute pointers to use new offsets for each chunk\r\n\t\t\t\t\t// even if geometry and materials didn't change\r\n\r\n\t\t\t\t\tif ( offsets.length > 1 ) updateBuffers = true;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar startIndex = offsets[ i ].index;\r\n\r\n\t\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, startIndex );\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// render indexed points\r\n\r\n\t\t\t\t\t\t_gl.drawElements( mode, offsets[ i ].count, type, offsets[ i ].start * size );\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.points += offsets[ i ].count;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed points\r\n\r\n\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = geometry.attributes.position;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\t_gl.drawArrays( mode, 0, position.array.length / 3 );\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.points += position.array.length / 3;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t_gl.drawArrays( mode, offsets[ i ].index, offsets[ i ].count );\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.points += offsets[ i ].count;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar mode = ( object.mode === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\r\n\r\n\t\t\tsetLineWidth( material.linewidth );\r\n\r\n\t\t\tvar index = geometry.attributes.index;\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\t// indexed lines\r\n\r\n\t\t\t\tvar type, size;\r\n\r\n\t\t\t\tif ( index.array instanceof Uint32Array ) {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\t\tsize = 4;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\t\tsize = 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.drawElements( mode, index.array.length, type, 0 ); // 2 bytes per Uint16Array\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.vertices += index.array.length; // not really true, here vertices can be shared\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// if there is more than 1 chunk\r\n\t\t\t\t\t// must set attribute pointers to use new offsets for each chunk\r\n\t\t\t\t\t// even if geometry and materials didn't change\r\n\r\n\t\t\t\t\tif ( offsets.length > 1 ) updateBuffers = true;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar startIndex = offsets[ i ].index;\r\n\r\n\t\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, startIndex );\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// render indexed lines\r\n\r\n\t\t\t\t\t\t_gl.drawElements( mode, offsets[ i ].count, type, offsets[ i ].start * size ); // 2 bytes per Uint16Array\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed lines\r\n\r\n\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = geometry.attributes.position;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\t_gl.drawArrays( mode, 0, position.array.length / 3 );\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.vertices += position.array.length / 3;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t_gl.drawArrays( mode, offsets[ i ].index, offsets[ i ].count );\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.vertices += offsets[ i ].count;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.renderBuffer = function ( camera, lights, fog, material, geometryGroup, object ) {\r\n\r\n\t\tif ( material.visible === false ) return;\r\n\r\n\t\tupdateObject( object );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar attributes = program.attributes;\r\n\r\n\t\tvar updateBuffers = false,\r\n\t\t\twireframeBit = material.wireframe ? 1 : 0,\r\n\t\t\tgeometryProgram = geometryGroup.id + '_' + program.id + '_' + wireframeBit;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tinitAttributes();\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tif ( ! material.morphTargets && attributes.position >= 0 ) {\r\n\r\n\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n\t\t\t\tenableAttribute( attributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( object.morphTargetBase ) {\r\n\r\n\t\t\t\tsetupMorphTargets( material, geometryGroup, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t// custom attributes\r\n\r\n\t\t\t// Use the per-geometryGroup custom attribute arrays which are setup in initMeshBuffers\r\n\r\n\t\t\tif ( geometryGroup.__webglCustomAttributesList ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = geometryGroup.__webglCustomAttributesList.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar attribute = geometryGroup.__webglCustomAttributesList[ i ];\r\n\r\n\t\t\t\t\tif ( attributes[ attribute.buffer.belongsToAttribute ] >= 0 ) {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, attribute.buffer );\r\n\t\t\t\t\t\tenableAttribute( attributes[ attribute.buffer.belongsToAttribute ] );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ attribute.buffer.belongsToAttribute ], attribute.size, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tif ( attributes.color >= 0 ) {\r\n\r\n\t\t\t\tif ( object.geometry.colors.length > 0 || object.geometry.faces.length > 0 ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\r\n\t\t\t\t\tenableAttribute( attributes.color );\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\r\n\r\n\r\n\t\t\t\t\t_gl.vertexAttrib3fv( attributes.color, material.defaultAttributeValues.color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// normals\r\n\r\n\t\t\tif ( attributes.normal >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\r\n\t\t\t\tenableAttribute( attributes.normal );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// tangents\r\n\r\n\t\t\tif ( attributes.tangent >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\r\n\t\t\t\tenableAttribute( attributes.tangent );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.tangent, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tif ( attributes.uv >= 0 ) {\r\n\r\n\t\t\t\tif ( object.geometry.faceVertexUvs[ 0 ] ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\r\n\t\t\t\t\tenableAttribute( attributes.uv );\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\r\n\r\n\r\n\t\t\t\t\t_gl.vertexAttrib2fv( attributes.uv, material.defaultAttributeValues.uv );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attributes.uv2 >= 0 ) {\r\n\r\n\t\t\t\tif ( object.geometry.faceVertexUvs[ 1 ] ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\r\n\t\t\t\t\tenableAttribute( attributes.uv2 );\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.uv2, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\r\n\r\n\r\n\t\t\t\t\t_gl.vertexAttrib2fv( attributes.uv2, material.defaultAttributeValues.uv2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.skinning &&\r\n\t\t\t\t attributes.skinIndex >= 0 && attributes.skinWeight >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\r\n\t\t\t\tenableAttribute( attributes.skinIndex );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.skinIndex, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\r\n\t\t\t\tenableAttribute( attributes.skinWeight );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.skinWeight, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// line distances\r\n\r\n\t\t\tif ( attributes.lineDistance >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglLineDistanceBuffer );\r\n\t\t\t\tenableAttribute( attributes.lineDistance );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.lineDistance, 1, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdisableUnusedAttributes();\r\n\r\n\t\t// render mesh\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar type = geometryGroup.__typeArray === Uint32Array ? _gl.UNSIGNED_INT : _gl.UNSIGNED_SHORT;\r\n\r\n\t\t\t// wireframe\r\n\r\n\t\t\tif ( material.wireframe ) {\r\n\r\n\t\t\t\tsetLineWidth( material.wireframeLinewidth );\r\n\t\t\t\tif ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\r\n\t\t\t\t_gl.drawElements( _gl.LINES, geometryGroup.__webglLineCount, type, 0 );\r\n\r\n\t\t\t// triangles\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\r\n\t\t\t\t_gl.drawElements( _gl.TRIANGLES, geometryGroup.__webglFaceCount, type, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.info.render.calls ++;\r\n\t\t\t_this.info.render.vertices += geometryGroup.__webglFaceCount;\r\n\t\t\t_this.info.render.faces += geometryGroup.__webglFaceCount / 3;\r\n\r\n\t\t// render lines\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar mode = ( object.mode === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\r\n\r\n\t\t\tsetLineWidth( material.linewidth );\r\n\r\n\t\t\t_gl.drawArrays( mode, 0, geometryGroup.__webglLineCount );\r\n\r\n\t\t\t_this.info.render.calls ++;\r\n\r\n\t\t// render particles\r\n\r\n\t\t} else if ( object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t_gl.drawArrays( _gl.POINTS, 0, geometryGroup.__webglParticleCount );\r\n\r\n\t\t\t_this.info.render.calls ++;\r\n\t\t\t_this.info.render.points += geometryGroup.__webglParticleCount;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction initAttributes() {\r\n\r\n\t\tfor ( var i = 0, l = _newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\t_newAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction enableAttribute( attribute ) {\r\n\r\n\t\t_newAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( _enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\t_gl.enableVertexAttribArray( attribute );\r\n\t\t\t_enabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction disableUnusedAttributes() {\r\n\r\n\t\tfor ( var i = 0, l = _enabledAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( _enabledAttributes[ i ] !== _newAttributes[ i ] ) {\r\n\r\n\t\t\t\t_gl.disableVertexAttribArray( i );\r\n\t\t\t\t_enabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setupMorphTargets ( material, geometryGroup, object ) {\r\n\r\n\t\t// set base\r\n\r\n\t\tvar attributes = material.program.attributes;\r\n\r\n\t\tif ( object.morphTargetBase !== - 1 && attributes.position >= 0 ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ object.morphTargetBase ] );\r\n\t\t\tenableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t} else if ( attributes.position >= 0 ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n\t\t\tenableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.morphTargetForcedOrder.length ) {\r\n\r\n\t\t\t// set forced order\r\n\r\n\t\t\tvar m = 0;\r\n\t\t\tvar order = object.morphTargetForcedOrder;\r\n\t\t\tvar influences = object.morphTargetInfluences;\r\n\r\n\t\t\tvar attribute;\r\n\r\n\t\t\twhile ( m < material.numSupportedMorphTargets && m < order.length ) {\r\n\r\n\t\t\t\tattribute = attributes[ 'morphTarget' + m ];\r\n\r\n\t\t\t\tif ( attribute >= 0 ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ order[ m ] ] );\r\n\t\t\t\t\tenableAttribute( attribute );\r\n\t\t\t\t\t_gl.vertexAttribPointer( attribute, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattribute = attributes[ 'morphNormal' + m ];\r\n\r\n\t\t\t\tif ( attribute >= 0 && material.morphNormals ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ order[ m ] ] );\r\n\t\t\t\t\tenableAttribute( attribute );\r\n\t\t\t\t\t_gl.vertexAttribPointer( attribute, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = influences[ order[ m ] ];\r\n\r\n\t\t\t\tm ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// find the most influencing\r\n\r\n\t\t\tvar activeInfluenceIndices = [];\r\n\t\t\tvar influences = object.morphTargetInfluences;\r\n\r\n\t\t\tfor ( var i = 0, il = influences.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar influence = influences[ i ];\r\n\r\n\t\t\t\tactiveInfluenceIndices.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( activeInfluenceIndices.length > material.numSupportedMorphTargets ) {\r\n\r\n\t\t\t\tactiveInfluenceIndices.sort( numericalSort );\r\n\t\t\t\tactiveInfluenceIndices.length = material.numSupportedMorphTargets;\r\n\r\n\t\t\t} else if ( activeInfluenceIndices.length > material.numSupportedMorphNormals ) {\r\n\r\n\t\t\t\tactiveInfluenceIndices.sort( numericalSort );\r\n\r\n\t\t\t} else if ( activeInfluenceIndices.length === 0 ) {\r\n\r\n\t\t\t\tactiveInfluenceIndices.push( [ 0, 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attribute;\r\n\r\n\t\t\tfor ( var m = 0, ml = material.numSupportedMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\tif ( activeInfluenceIndices[ m ] ) {\r\n\r\n\t\t\t\t\tvar influenceIndex = activeInfluenceIndices[ m ][ 1 ];\r\n\r\n\t\t\t\t\tattribute = attributes[ 'morphTarget' + m ];\r\n\r\n\t\t\t\t\tif ( attribute >= 0 ) {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ influenceIndex ] );\r\n\t\t\t\t\t\tenableAttribute( attribute );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attribute, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tattribute = attributes[ 'morphNormal' + m ];\r\n\r\n\t\t\t\t\tif ( attribute >= 0 && material.morphNormals ) {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ influenceIndex ] );\r\n\t\t\t\t\t\tenableAttribute( attribute );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attribute, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = influences[ influenceIndex ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphTarget\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphNormal\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\r\n\t\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// load updated influences uniform\r\n\r\n\t\tif ( material.program.uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t_gl.uniform1fv( material.program.uniforms.morphTargetInfluences, object.__webglMorphTargetInfluences );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction numericalSort ( a, b ) {\r\n\r\n\t\treturn b[ 0 ] - a[ 0 ];\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === undefined ) camera.updateMatrixWorld();\r\n\r\n\t\t// update Skeleton objects\r\n\r\n\t\tscene.traverse( function ( object ) {\r\n\r\n\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\t\topaqueObjects.length = 0;\r\n\t\ttransparentObjects.length = 0;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\tprojectObject( scene );\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (pre pass)\r\n\r\n\t\tshadowMapPlugin.render( scene, camera );\r\n\r\n\t\t//\r\n\r\n\t\t_this.info.render.calls = 0;\r\n\t\t_this.info.render.vertices = 0;\r\n\t\t_this.info.render.faces = 0;\r\n\t\t_this.info.render.points = 0;\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t// set matrices for immediate objects\r\n\r\n\t\tfor ( var i = 0, il = _webglObjectsImmediate.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar webglObject = _webglObjectsImmediate[ i ];\r\n\t\t\tvar object = webglObject.object;\r\n\r\n\t\t\tif ( object.visible ) {\r\n\r\n\t\t\t\tsetupMatrices( object, camera );\r\n\r\n\t\t\t\tunrollImmediateBufferMaterial( webglObject );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar material = scene.overrideMaterial;\r\n\r\n\t\t\tthis.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tthis.setDepthTest( material.depthTest );\r\n\t\t\tthis.setDepthWrite( material.depthWrite );\r\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, true, material );\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, true, material );\r\n\t\t\trenderObjectsImmediate( _webglObjectsImmediate, '', camera, lights, fog, false, material );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar material = null;\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tthis.setBlending( THREE.NoBlending );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, false, material );\r\n\t\t\trenderObjectsImmediate( _webglObjectsImmediate, 'opaque', camera, lights, fog, false, material );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, true, material );\r\n\t\t\trenderObjectsImmediate( _webglObjectsImmediate, 'transparent', camera, lights, fog, true, material );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tthis.setDepthTest( true );\r\n\t\tthis.setDepthWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction projectObject( object ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Scene || object instanceof THREE.Group ) {\r\n\r\n\t\t\t// skip\r\n\r\n\t\t} else {\r\n\r\n\t\t\tinitObject( object );\r\n\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\t\tlights.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\t\tsprites.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\t\tlensFlares.push( object );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar webglObjects = _webglObjects[ object.id ];\r\n\r\n\t\t\t\tif ( webglObjects && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = webglObjects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar webglObject = webglObjects[i];\r\n\r\n\t\t\t\t\t\tunrollBufferMaterial( webglObject );\r\n\r\n\t\t\t\t\t\twebglObject.render = true;\r\n\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t\twebglObject.z = _vector3.z;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, l = object.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( object.children[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, lights, fog, useBlending, overrideMaterial ) {\r\n\r\n\t\tvar material;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar webglObject = renderList[ i ];\r\n\r\n\t\t\tvar object = webglObject.object;\r\n\t\t\tvar buffer = webglObject.buffer;\r\n\r\n\t\t\tsetupMatrices( object, camera );\r\n\r\n\t\t\tif ( overrideMaterial ) {\r\n\r\n\t\t\t\tmaterial = overrideMaterial;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterial = webglObject.material;\r\n\r\n\t\t\t\tif ( ! material ) continue;\r\n\r\n\t\t\t\tif ( useBlending ) _this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\r\n\t\t\t\t_this.setDepthTest( material.depthTest );\r\n\t\t\t\t_this.setDepthWrite( material.depthWrite );\r\n\t\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.setMaterialFaces( material );\r\n\r\n\t\t\tif ( buffer instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t_this.renderBufferDirect( camera, lights, fog, material, buffer, object );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.renderBuffer( camera, lights, fog, material, buffer, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjectsImmediate ( renderList, materialType, camera, lights, fog, useBlending, overrideMaterial ) {\r\n\r\n\t\tvar material;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar webglObject = renderList[ i ];\r\n\t\t\tvar object = webglObject.object;\r\n\r\n\t\t\tif ( object.visible ) {\r\n\r\n\t\t\t\tif ( overrideMaterial ) {\r\n\r\n\t\t\t\t\tmaterial = overrideMaterial;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterial = webglObject[ materialType ];\r\n\r\n\t\t\t\t\tif ( ! material ) continue;\r\n\r\n\t\t\t\t\tif ( useBlending ) _this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\r\n\t\t\t\t\t_this.setDepthTest( material.depthTest );\r\n\t\t\t\t\t_this.setDepthWrite( material.depthWrite );\r\n\t\t\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_this.renderImmediateObject( camera, lights, fog, material, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.renderImmediateObject = function ( camera, lights, fog, material, object ) {\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\r\n\t\t_this.setMaterialFaces( material );\r\n\r\n\t\tif ( object.immediateRenderCallback ) {\r\n\r\n\t\t\tobject.immediateRenderCallback( program, _gl, _frustum );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tobject.render( function ( object ) { _this.renderBufferImmediate( object, program, material ); } );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction unrollImmediateBufferMaterial ( globject ) {\r\n\r\n\t\tvar object = globject.object,\r\n\t\t\tmaterial = object.material;\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tglobject.transparent = material;\r\n\t\t\tglobject.opaque = null;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tglobject.opaque = material;\r\n\t\t\tglobject.transparent = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction unrollBufferMaterial ( globject ) {\r\n\r\n\t\tvar object = globject.object;\r\n\t\tvar buffer = globject.buffer;\r\n\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar material = object.material;\r\n\r\n\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\tvar materialIndex = geometry instanceof THREE.BufferGeometry ? 0 : buffer.materialIndex;\r\n\r\n\t\t\tmaterial = material.materials[ materialIndex ];\r\n\r\n\t\t\tglobject.material = material;\r\n\r\n\t\t\tif ( material.transparent ) {\r\n\r\n\t\t\t\ttransparentObjects.push( globject );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\topaqueObjects.push( globject );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( material ) {\r\n\r\n\t\t\tglobject.material = material;\r\n\r\n\t\t\tif ( material.transparent ) {\r\n\r\n\t\t\t\ttransparentObjects.push( globject );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\topaqueObjects.push( globject );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initObject( object ) {\r\n\r\n\t\tif ( object.__webglInit === undefined ) {\r\n\r\n\t\t\tobject.__webglInit = true;\r\n\t\t\tobject._modelViewMatrix = new THREE.Matrix4();\r\n\t\t\tobject._normalMatrix = new THREE.Matrix3();\r\n\r\n\t\t\tobject.addEventListener( 'removed', onObjectRemoved );\r\n\r\n\t\t}\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometry === undefined ) {\r\n\r\n\t\t\t// ImmediateRenderObject\r\n\r\n\t\t} else if ( geometry.__webglInit === undefined ) {\r\n\r\n\t\t\tgeometry.__webglInit = true;\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t_this.info.memory.geometries ++;\r\n\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t\tinitGeometryGroups( object, geometry );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\t\tif ( geometry.__webglVertexBuffer === undefined ) {\r\n\r\n\t\t\t\t\tcreateLineBuffers( geometry );\r\n\t\t\t\t\tinitLineBuffers( geometry, object );\r\n\r\n\t\t\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\t\t\t\tgeometry.colorsNeedUpdate = true;\r\n\t\t\t\t\tgeometry.lineDistancesNeedUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t\tif ( geometry.__webglVertexBuffer === undefined ) {\r\n\r\n\t\t\t\t\tcreateParticleBuffers( geometry );\r\n\t\t\t\t\tinitParticleBuffers( geometry, object );\r\n\r\n\t\t\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\t\t\t\tgeometry.colorsNeedUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.__webglActive === undefined) {\r\n\r\n\t\t\tobject.__webglActive = true;\r\n\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t\taddBuffer( _webglObjects, geometry, object );\r\n\r\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\r\n\r\n\t\t\t\t\tfor ( var i = 0,l = geometryGroupsList.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\taddBuffer( _webglObjects, geometryGroupsList[ i ], object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.Line || object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t\taddBuffer( _webglObjects, geometry, object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\r\n\r\n\t\t\t\taddBufferImmediate( _webglObjectsImmediate, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Geometry splitting\r\n\r\n\tvar geometryGroups = {};\r\n\tvar geometryGroupCounter = 0;\r\n\r\n\tfunction makeGroups( geometry, usesFaceMaterial ) {\r\n\r\n\t\tvar maxVerticesInGroup = extensions.get( 'OES_element_index_uint' ) ? 4294967296 : 65535;\r\n\r\n\t\tvar groupHash, hash_map = {};\r\n\r\n\t\tvar numMorphTargets = geometry.morphTargets.length;\r\n\t\tvar numMorphNormals = geometry.morphNormals.length;\r\n\r\n\t\tvar group;\r\n\t\tvar groups = {};\r\n\t\tvar groupsList = [];\r\n\r\n\t\tfor ( var f = 0, fl = geometry.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = geometry.faces[ f ];\r\n\t\t\tvar materialIndex = usesFaceMaterial ? face.materialIndex : 0;\r\n\r\n\t\t\tif ( ! ( materialIndex in hash_map ) ) {\r\n\r\n\t\t\t\thash_map[ materialIndex ] = { hash: materialIndex, counter: 0 };\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgroupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\r\n\r\n\t\t\tif ( ! ( groupHash in groups ) ) {\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tid: geometryGroupCounter ++,\r\n\t\t\t\t\tfaces3: [],\r\n\t\t\t\t\tmaterialIndex: materialIndex,\r\n\t\t\t\t\tvertices: 0,\r\n\t\t\t\t\tnumMorphTargets: numMorphTargets,\r\n\t\t\t\t\tnumMorphNormals: numMorphNormals\r\n\t\t\t\t};\r\n\r\n\t\t\t\tgroups[ groupHash ] = group;\r\n\t\t\t\tgroupsList.push( group );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( groups[ groupHash ].vertices + 3 > maxVerticesInGroup ) {\r\n\r\n\t\t\t\thash_map[ materialIndex ].counter += 1;\r\n\t\t\t\tgroupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\r\n\r\n\t\t\t\tif ( ! ( groupHash in groups ) ) {\r\n\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tid: geometryGroupCounter ++,\r\n\t\t\t\t\t\tfaces3: [],\r\n\t\t\t\t\t\tmaterialIndex: materialIndex,\r\n\t\t\t\t\t\tvertices: 0,\r\n\t\t\t\t\t\tnumMorphTargets: numMorphTargets,\r\n\t\t\t\t\t\tnumMorphNormals: numMorphNormals\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tgroups[ groupHash ] = group;\r\n\t\t\t\t\tgroupsList.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgroups[ groupHash ].faces3.push( f );\r\n\t\t\tgroups[ groupHash ].vertices += 3;\r\n\r\n\t\t}\r\n\r\n\t\treturn groupsList;\r\n\r\n\t}\r\n\r\n\tfunction initGeometryGroups( object, geometry ) {\r\n\r\n\t\tvar material = object.material, addBuffers = false;\r\n\r\n\t\tif ( geometryGroups[ geometry.id ] === undefined || geometry.groupsNeedUpdate === true ) {\r\n\r\n\t\t\tdelete _webglObjects[ object.id ];\r\n\r\n\t\t\tgeometryGroups[ geometry.id ] = makeGroups( geometry, material instanceof THREE.MeshFaceMaterial );\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\r\n\r\n\t\t// create separate VBOs per geometry chunk\r\n\r\n\t\tfor ( var i = 0, il = geometryGroupsList.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar geometryGroup = geometryGroupsList[ i ];\r\n\r\n\t\t\t// initialise VBO on the first access\r\n\r\n\t\t\tif ( geometryGroup.__webglVertexBuffer === undefined ) {\r\n\r\n\t\t\t\tcreateMeshBuffers( geometryGroup );\r\n\t\t\t\tinitMeshBuffers( geometryGroup, object );\r\n\r\n\t\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\t\t\tgeometry.morphTargetsNeedUpdate = true;\r\n\t\t\t\tgeometry.elementsNeedUpdate = true;\r\n\t\t\t\tgeometry.uvsNeedUpdate = true;\r\n\t\t\t\tgeometry.normalsNeedUpdate = true;\r\n\t\t\t\tgeometry.tangentsNeedUpdate = true;\r\n\t\t\t\tgeometry.colorsNeedUpdate = true;\r\n\r\n\t\t\t\taddBuffers = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\taddBuffers = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( addBuffers || object.__webglActive === undefined ) {\r\n\r\n\t\t\t\taddBuffer( _webglObjects, geometryGroup, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tobject.__webglActive = true;\r\n\r\n\t}\r\n\r\n\tfunction addBuffer( objlist, buffer, object ) {\r\n\r\n\t\tvar id = object.id;\r\n\t\tobjlist[id] = objlist[id] || [];\r\n\t\tobjlist[id].push(\r\n\t\t\t{\r\n\t\t\t\tid: id,\r\n\t\t\t\tbuffer: buffer,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tmaterial: null,\r\n\t\t\t\tz: 0\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tfunction addBufferImmediate( objlist, object ) {\r\n\r\n\t\tobjlist.push(\r\n\t\t\t{\r\n\t\t\t\tid: null,\r\n\t\t\t\tobject: object,\r\n\t\t\t\topaque: null,\r\n\t\t\t\ttransparent: null,\r\n\t\t\t\tz: 0\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t};\r\n\r\n\t// Objects updates\r\n\r\n\tfunction updateObject( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar attributesKeys = geometry.attributesKeys;\r\n\r\n\t\t\tfor ( var i = 0, l = attributesKeys.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar key = attributesKeys[ i ];\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\t\tif ( attribute.buffer === undefined ) {\r\n\r\n\t\t\t\t\tattribute.buffer = _gl.createBuffer();\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( attribute.needsUpdate === true ) {\r\n\r\n\t\t\t\t\tvar bufferType = ( key === 'index' ) ? _gl.ELEMENT_ARRAY_BUFFER : _gl.ARRAY_BUFFER;\r\n\r\n\t\t\t\t\t_gl.bindBuffer( bufferType, attribute.buffer );\r\n\t\t\t\t\t_gl.bufferData( bufferType, attribute.array, _gl.STATIC_DRAW );\r\n\r\n\t\t\t\t\tattribute.needsUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t// check all geometry groups\r\n\r\n\t\t\tif ( geometry.groupsNeedUpdate === true ) {\r\n\r\n\t\t\t\tinitGeometryGroups( object, geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\r\n\r\n\t\t\tfor ( var i = 0, il = geometryGroupsList.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar geometryGroup = geometryGroupsList[ i ];\r\n\t\t\t\tvar material = getBufferMaterial( object, geometryGroup );\r\n\r\n\t\t\t\tif ( geometry.groupsNeedUpdate === true ) {\r\n\r\n\t\t\t\t\tinitMeshBuffers( geometryGroup, object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n\t\t\t\tif ( geometry.verticesNeedUpdate || geometry.morphTargetsNeedUpdate || geometry.elementsNeedUpdate ||\r\n\t\t\t\t\t geometry.uvsNeedUpdate || geometry.normalsNeedUpdate ||\r\n\t\t\t\t\t geometry.colorsNeedUpdate || geometry.tangentsNeedUpdate || customAttributesDirty ) {\r\n\r\n\t\t\t\t\tsetMeshBuffers( geometryGroup, object, _gl.DYNAMIC_DRAW, ! geometry.dynamic, material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.morphTargetsNeedUpdate = false;\r\n\t\t\tgeometry.elementsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.tangentsNeedUpdate = false;\r\n\r\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar material = getBufferMaterial( object, geometry );\r\n\t\t\tvar customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n\t\t\tif ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || geometry.lineDistancesNeedUpdate || customAttributesDirty ) {\r\n\r\n\t\t\t\tsetLineBuffers( geometry, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\r\n\r\n\t\t} else if ( object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\tvar material = getBufferMaterial( object, geometry );\r\n\t\t\tvar customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n\t\t\tif ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || customAttributesDirty ) {\r\n\r\n\t\t\t\tsetParticleBuffers( geometry, _gl.DYNAMIC_DRAW, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Objects updates - custom attributes check\r\n\r\n\tfunction areCustomAttributesDirty( material ) {\r\n\r\n\t\tfor ( var name in material.attributes ) {\r\n\r\n\t\t\tif ( material.attributes[ name ].needsUpdate ) return true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tfunction clearCustomAttributes( material ) {\r\n\r\n\t\tfor ( var name in material.attributes ) {\r\n\r\n\t\t\tmaterial.attributes[ name ].needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Objects removal\r\n\r\n\tfunction removeObject( object ) {\r\n\r\n\t\tif ( object instanceof THREE.Mesh  ||\r\n\t\t\t object instanceof THREE.PointCloud ||\r\n\t\t\t object instanceof THREE.Line ) {\r\n\r\n\t\t\tdelete _webglObjects[ object.id ];\r\n\r\n\t\t} else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\r\n\r\n\t\t\tremoveInstances( _webglObjectsImmediate, object );\r\n\r\n\t\t}\r\n\r\n\t\tdelete object.__webglInit;\r\n\t\tdelete object._modelViewMatrix;\r\n\t\tdelete object._normalMatrix;\r\n\r\n\t\tdelete object.__webglActive;\r\n\r\n\t}\r\n\r\n\tfunction removeInstances( objlist, object ) {\r\n\r\n\t\tfor ( var o = objlist.length - 1; o >= 0; o -- ) {\r\n\r\n\t\t\tif ( objlist[ o ].object === object ) {\r\n\r\n\t\t\t\tobjlist.splice( o, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Materials\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointCloudMaterial: 'particle_basic'\r\n\t};\r\n\r\n\tfunction initMaterial( material, lights, fog, object ) {\r\n\r\n\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\r\n\t\tif ( shaderID ) {\r\n\r\n\t\t\tvar shader = THREE.ShaderLib[ shaderID ];\r\n\r\n\t\t\tmaterial.__webglShader = {\r\n\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmaterial.__webglShader = {\r\n\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxLightCount = allocateLights( lights );\r\n\t\tvar maxShadows = allocateShadows( lights );\r\n\t\tvar maxBones = allocateBones( object );\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tprecision: _precision,\r\n\t\t\tsupportsVertexTextures: _supportsVertexTextures,\r\n\r\n\t\t\tmap: !! material.map,\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: _logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: _supportsBoneTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: _this.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: _this.maxMorphNormals,\r\n\r\n\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\r\n\t\t\tmaxShadows: maxShadows,\r\n\t\t\tshadowMapEnabled: _this.shadowMapEnabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\tshadowMapType: _this.shadowMapType,\r\n\t\t\tshadowMapDebug: _this.shadowMapDebug,\r\n\t\t\tshadowMapCascade: _this.shadowMapCascade,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tmetal: material.metal,\r\n\t\t\twrapAround: material.wrapAround,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\t// Generate code\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tif ( shaderID ) {\r\n\r\n\t\t\tchunks.push( shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\tchunks.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tchunks.push( name );\r\n\t\t\t\tchunks.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in parameters ) {\r\n\r\n\t\t\tchunks.push( name );\r\n\t\t\tchunks.push( parameters[ name ] );\r\n\r\n\t\t}\r\n\r\n\t\tvar code = chunks.join();\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\r\n\t\tfor ( var p = 0, pl = _programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = _programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\tprogram.usedTimes ++;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( _this, code, material, parameters );\r\n\t\t\t_programs.push( program );\r\n\r\n\t\t\t_this.info.memory.programs = _programs.length;\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.program = program;\r\n\r\n\t\tvar attributes = program.attributes;\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tvar id, base = 'morphTarget';\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tid = base + i;\r\n\r\n\t\t\t\tif ( attributes[ id ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tvar id, base = 'morphNormal';\r\n\r\n\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tid = base + i;\r\n\r\n\t\t\t\tif ( attributes[ id ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.uniformsList = [];\r\n\r\n\t\tfor ( var u in material.__webglShader.uniforms ) {\r\n\r\n\t\t\tvar location = material.program.uniforms[ u ];\r\n\r\n\t\t\tif ( location ) {\r\n\t\t\t\tmaterial.uniformsList.push( [ material.__webglShader.uniforms[ u ], location ] );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tif ( material.needsUpdate ) {\r\n\r\n\t\t\tif ( material.program ) deallocateMaterial( material );\r\n\r\n\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tif ( ! object.__webglMorphTargetInfluences ) {\r\n\r\n\t\t\t\tobject.__webglMorphTargetInfluences = new Float32Array( _this.maxMorphTargets );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = material.program,\r\n\t\t\tp_uniforms = program.uniforms,\r\n\t\t\tm_uniforms = material.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\tif ( _currentMaterialId === -1 ) refreshLights = true;\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( _logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== null ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== null ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== null ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _supportsBoneTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== null ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\r\n\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\tsetupLights( lights );\r\n\t\t\t\t\t_lightsNeedUpdate = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( refreshLights ) {\r\n\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointCloudMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( material.uniformsList );\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== null ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tif ( _this.gammaInput ) {\r\n\r\n\t\t\tuniforms.diffuse.value.copyGammaToLinear( material.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t//  1. color map\r\n\t\t//  2. specular map\r\n\t\t//  3. normal map\r\n\t\t//  4. bump map\r\n\t\t//  5. alpha map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\tif ( _this.gammaInput ) {\r\n\r\n\t\t\t//uniforms.reflectivity.value = material.reflectivity * material.reflectivity;\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\r\n\t\tuniforms.psColor.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size;\r\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.shininess.value = material.shininess;\r\n\r\n\t\tif ( _this.gammaInput ) {\r\n\r\n\t\t\tuniforms.ambient.value.copyGammaToLinear( material.ambient );\r\n\t\t\tuniforms.emissive.value.copyGammaToLinear( material.emissive );\r\n\t\t\tuniforms.specular.value.copyGammaToLinear( material.specular );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tuniforms.ambient.value = material.ambient;\r\n\t\t\tuniforms.emissive.value = material.emissive;\r\n\t\t\tuniforms.specular.value = material.specular;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.wrapAround ) {\r\n\r\n\t\t\tuniforms.wrapRGB.value.copy( material.wrapRGB );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLambert ( uniforms, material ) {\r\n\r\n\t\tif ( _this.gammaInput ) {\r\n\r\n\t\t\tuniforms.ambient.value.copyGammaToLinear( material.ambient );\r\n\t\t\tuniforms.emissive.value.copyGammaToLinear( material.emissive );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tuniforms.ambient.value = material.ambient;\r\n\t\t\tuniforms.emissive.value = material.emissive;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.wrapAround ) {\r\n\r\n\t\t\tuniforms.wrapRGB.value.copy( material.wrapRGB );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\r\n\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\r\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\r\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, boolean ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = boolean;\r\n\r\n\t\tuniforms.directionalLightColor.needsUpdate = boolean;\r\n\t\tuniforms.directionalLightDirection.needsUpdate = boolean;\r\n\r\n\t\tuniforms.pointLightColor.needsUpdate = boolean;\r\n\t\tuniforms.pointLightPosition.needsUpdate = boolean;\r\n\t\tuniforms.pointLightDistance.needsUpdate = boolean;\r\n\r\n\t\tuniforms.spotLightColor.needsUpdate = boolean;\r\n\t\tuniforms.spotLightPosition.needsUpdate = boolean;\r\n\t\tuniforms.spotLightDistance.needsUpdate = boolean;\r\n\t\tuniforms.spotLightDirection.needsUpdate = boolean;\r\n\t\tuniforms.spotLightAngleCos.needsUpdate = boolean;\r\n\t\tuniforms.spotLightExponent.needsUpdate = boolean;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.needsUpdate = boolean;\r\n\t\tuniforms.hemisphereLightGroundColor.needsUpdate = boolean;\r\n\t\tuniforms.hemisphereLightDirection.needsUpdate = boolean;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\r\n\t\tif ( uniforms.shadowMatrix ) {\r\n\r\n\t\t\tvar j = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) ) {\r\n\r\n\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\r\n\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\r\n\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object._modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object._normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= _maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + _maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction loadUniformsGeneric ( uniforms ) {\r\n\r\n\t\tvar texture, textureUnit, offset;\r\n\r\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\r\n\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\r\n\t\t\tvar type = uniform.type;\r\n\t\t\tvar value = uniform.value;\r\n\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase '1i':\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1f':\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2f':\r\n\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3f':\r\n\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4f':\r\n\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1iv':\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3iv':\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1fv':\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2fv':\r\n\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3fv':\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4fv':\r\n\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tcase 'i':\r\n\r\n\t\t\t\t\t// single integer\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'f':\r\n\r\n\t\t\t\t\t// single float\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2':\r\n\r\n\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3':\r\n\r\n\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4':\r\n\r\n\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'c':\r\n\r\n\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv1':\r\n\r\n\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv':\r\n\r\n\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv1':\r\n\r\n\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv':\r\n\r\n\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector2\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\toffset = i * 2;\r\n\r\n\t\t\t\t\t\tuniform._array[ offset ]   = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\toffset = i * 3;\r\n\r\n\t\t\t\t\t\tuniform._array[ offset ]   = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ offset + 2 ] = value[ i ].z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\toffset = i * 4;\r\n\r\n\t\t\t\t\t\tuniform._array[ offset ]   = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ offset + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\tuniform._array[ offset + 3 ] = value[ i ].w;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3':\r\n\r\n\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4':\r\n\r\n\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 't':\r\n\r\n\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\r\n\t\t\t\t\ttexture = value;\r\n\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t   ( texture.image instanceof Array && texture.image.length === 6 ) ) { // CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tv':\r\n\r\n\t\t\t\t\t// array of THREE.Texture (2d)\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setupMatrices ( object, camera ) {\r\n\r\n\t\tobject._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\tobject._normalMatrix.getNormalMatrix( object._modelViewMatrix );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction setColorGamma( array, offset, color, intensitySq ) {\r\n\r\n\t\tarray[ offset ]     = color.r * color.r * intensitySq;\r\n\t\tarray[ offset + 1 ] = color.g * color.g * intensitySq;\r\n\t\tarray[ offset + 2 ] = color.b * color.b * intensitySq;\r\n\r\n\t}\r\n\r\n\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\r\n\t\tarray[ offset ]     = color.r * intensity;\r\n\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights ) {\r\n\r\n\t\tvar l, ll, light, n,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor, skyColor, groundColor,\r\n\t\tintensity,  intensitySq,\r\n\t\tposition,\r\n\t\tdistance,\r\n\r\n\t\tzlights = _lights,\r\n\r\n\t\tdirColors = zlights.directional.colors,\r\n\t\tdirPositions = zlights.directional.positions,\r\n\r\n\t\tpointColors = zlights.point.colors,\r\n\t\tpointPositions = zlights.point.positions,\r\n\t\tpointDistances = zlights.point.distances,\r\n\r\n\t\tspotColors = zlights.spot.colors,\r\n\t\tspotPositions = zlights.spot.positions,\r\n\t\tspotDistances = zlights.spot.distances,\r\n\t\tspotDirections = zlights.spot.directions,\r\n\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\tspotExponents = zlights.spot.exponents,\r\n\r\n\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\themiPositions = zlights.hemi.positions,\r\n\r\n\t\tdirLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\r\n\t\tdirCount = 0,\r\n\t\tpointCount = 0,\r\n\t\tspotCount = 0,\r\n\t\themiCount = 0,\r\n\r\n\t\tdirOffset = 0,\r\n\t\tpointOffset = 0,\r\n\t\tspotOffset = 0,\r\n\t\themiOffset = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow ) continue;\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tif ( _this.gammaInput ) {\r\n\r\n\t\t\t\t\tr += color.r * color.r;\r\n\t\t\t\t\tg += color.g * color.g;\r\n\t\t\t\t\tb += color.b * color.b;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tr += color.r;\r\n\t\t\t\t\tg += color.g;\r\n\t\t\t\t\tb += color.b;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdirCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.normalize();\r\n\r\n\t\t\t\tdirOffset = dirLength * 3;\r\n\r\n\t\t\t\tdirPositions[ dirOffset ]     = _direction.x;\r\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tif ( _this.gammaInput ) {\r\n\r\n\t\t\t\t\tsetColorGamma( dirColors, dirOffset, color, intensity * intensity );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdirLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tpointCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tpointOffset = pointLength * 3;\r\n\r\n\t\t\t\tif ( _this.gammaInput ) {\r\n\r\n\t\t\t\t\tsetColorGamma( pointColors, pointOffset, color, intensity * intensity );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\r\n\t\t\t\tpointPositions[ pointOffset ]     = _vector3.x;\r\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\r\n\t\t\t\tpointLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tspotCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tspotOffset = spotLength * 3;\r\n\r\n\t\t\t\tif ( _this.gammaInput ) {\r\n\r\n\t\t\t\t\tsetColorGamma( spotColors, spotOffset, color, intensity * intensity );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\r\n\t\t\t\tspotPositions[ spotOffset ]     = _direction.x;\r\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.normalize();\r\n\r\n\t\t\t\tspotDirections[ spotOffset ]     = _direction.x;\r\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\r\n\t\t\t\tspotLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\themiCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_direction.normalize();\r\n\r\n\t\t\t\themiOffset = hemiLength * 3;\r\n\r\n\t\t\t\themiPositions[ hemiOffset ]     = _direction.x;\r\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tskyColor = light.color;\r\n\t\t\t\tgroundColor = light.groundColor;\r\n\r\n\t\t\t\tif ( _this.gammaInput ) {\r\n\r\n\t\t\t\t\tintensitySq = intensity * intensity;\r\n\r\n\t\t\t\t\tsetColorGamma( hemiSkyColors, hemiOffset, skyColor, intensitySq );\r\n\t\t\t\t\tsetColorGamma( hemiGroundColors, hemiOffset, groundColor, intensitySq );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\themiLength += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// null eventual remains from removed lights\r\n\t\t// (this is to avoid if in shader)\r\n\r\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\r\n\t\tzlights.directional.length = dirLength;\r\n\t\tzlights.point.length = pointLength;\r\n\t\tzlights.spot.length = spotLength;\r\n\t\tzlights.hemi.length = hemiLength;\r\n\r\n\t\tzlights.ambient[ 0 ] = r;\r\n\t\tzlights.ambient[ 1 ] = g;\r\n\t\tzlights.ambient[ 2 ] = b;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\t_gl.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setMaterialFaces = function ( material ) {\r\n\r\n\t\tvar doubleSided = material.side === THREE.DoubleSide;\r\n\t\tvar flipSided = material.side === THREE.BackSide;\r\n\r\n\t\tif ( _oldDoubleSided !== doubleSided ) {\r\n\r\n\t\t\tif ( doubleSided ) {\r\n\r\n\t\t\t\t_gl.disable( _gl.CULL_FACE );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.enable( _gl.CULL_FACE );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_oldDoubleSided = doubleSided;\r\n\r\n\t\t}\r\n\r\n\t\tif ( _oldFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_oldFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( _oldDepthTest !== depthTest ) {\r\n\r\n\t\t\tif ( depthTest ) {\r\n\r\n\t\t\t\t_gl.enable( _gl.DEPTH_TEST );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.disable( _gl.DEPTH_TEST );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_oldDepthTest = depthTest;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tif ( _oldDepthWrite !== depthWrite ) {\r\n\r\n\t\t\t_gl.depthMask( depthWrite );\r\n\t\t\t_oldDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setLineWidth ( width ) {\r\n\r\n\t\twidth *= pixelRatio;\r\n\r\n\t\tif ( width !== _oldLineWidth ) {\r\n\r\n\t\t\t_gl.lineWidth( width );\r\n\r\n\t\t\t_oldLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setPolygonOffset ( polygonoffset, factor, units ) {\r\n\r\n\t\tif ( _oldPolygonOffset !== polygonoffset ) {\r\n\r\n\t\t\tif ( polygonoffset ) {\r\n\r\n\t\t\t\t_gl.enable( _gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.disable( _gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_oldPolygonOffset = polygonoffset;\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonoffset && ( _oldPolygonOffsetFactor !== factor || _oldPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\t_gl.polygonOffset( factor, units );\r\n\r\n\t\t\t_oldPolygonOffsetFactor = factor;\r\n\t\t\t_oldPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst ) {\r\n\r\n\t\tif ( blending !== _oldBlending ) {\r\n\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\t\t_gl.disable( _gl.BLEND );\r\n\r\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\t_gl.enable( _gl.BLEND );\r\n\t\t\t\t_gl.blendEquation( _gl.FUNC_ADD );\r\n\t\t\t\t_gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE );\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\t\t\t_gl.enable( _gl.BLEND );\r\n\t\t\t\t_gl.blendEquation( _gl.FUNC_ADD );\r\n\t\t\t\t_gl.blendFunc( _gl.ZERO, _gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\t\t\t_gl.enable( _gl.BLEND );\r\n\t\t\t\t_gl.blendEquation( _gl.FUNC_ADD );\r\n\t\t\t\t_gl.blendFunc( _gl.ZERO, _gl.SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\t\t_gl.enable( _gl.BLEND );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.enable( _gl.BLEND );\r\n\t\t\t\t_gl.blendEquationSeparate( _gl.FUNC_ADD, _gl.FUNC_ADD );\r\n\t\t\t\t_gl.blendFuncSeparate( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_oldBlending = blending;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tif ( blendEquation !== _oldBlendEquation ) {\r\n\r\n\t\t\t\t_gl.blendEquation( paramThreeToGL( blendEquation ) );\r\n\r\n\t\t\t\t_oldBlendEquation = blendEquation;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== _oldBlendSrc || blendDst !== _oldBlendDst ) {\r\n\r\n\t\t\t\t_gl.blendFunc( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ) );\r\n\r\n\t\t\t\t_oldBlendSrc = blendSrc;\r\n\t\t\t\t_oldBlendDst = blendDst;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_oldBlendEquation = null;\r\n\t\t\t_oldBlendSrc = null;\r\n\t\t\t_oldBlendDst = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isImagePowerOfTwo ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT is set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter is set to THREE.LinearFilter or THREE.NearestFilter. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension && texture.type !== THREE.FloatType ) {\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || texture.__oldAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\ttexture.__oldAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.uploadTexture = function ( texture ) {\r\n\r\n\t\tif ( texture.__webglInit === undefined ) {\r\n\r\n\t\t\ttexture.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttexture.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_this.info.memory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\ttexture.image = clampToMaxSize( texture.image, _maxTextureSize );\r\n\r\n\t\tvar image = texture.image,\r\n\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( getCompressedTextureFormats().indexOf( glFormat ) > -1 ) {\r\n\r\n\t\t\t\t\t\t_gl.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"Attempt to load unsupported compressed texture format\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else { // regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttexture.needsUpdate = false;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate();\r\n\r\n\t};\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\r\n\t\tif ( texture.needsUpdate ) {\r\n\r\n\t\t\t_this.uploadTexture( texture );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer:', image, 'is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height + '.' );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.needsUpdate ) {\r\n\r\n\t\t\t\tif ( ! texture.image.__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttexture.image.__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_this.info.memory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], _maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( getCompressedTextureFormats().indexOf( glFormat ) > -1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t_gl.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.warn( \"Attempt to load unsupported compressed texture format\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.needsUpdate = false;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.__webglTexture );\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, renderTarget.__webglTexture, 0 );\r\n\r\n\t}\r\n\r\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget  ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget && renderTarget.__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\trenderTarget.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_this.info.memory.textures ++;\r\n\r\n\t\t\t// Setup texture, create render and frame buffers\r\n\r\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTarget.__webglFramebuffer = [];\r\n\t\t\t\trenderTarget.__webglRenderbuffer = [];\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTarget.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\trenderTarget.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\tsetupFrameBuffer( renderTarget.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\tsetupRenderBuffer( renderTarget.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTarget.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\trenderTarget.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTarget.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\tsetupFrameBuffer( renderTarget.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupRenderBuffer( renderTarget.__webglRenderbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Release everything\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer, width, height, vx, vy;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTarget.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTarget.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = renderTarget.width;\r\n\t\t\theight = renderTarget.height;\r\n\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\twidth = _viewportWidth;\r\n\t\t\theight = _viewportHeight;\r\n\r\n\t\t\tvx = _viewportX;\r\n\t\t\tvy = _viewportY;\r\n\r\n\t\t}\r\n\r\n\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.viewport( vx, vy, width, height );\r\n\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\t_currentWidth = width;\r\n\t\t_currentHeight = height;\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t// Allocations\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( _supportsBoneTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader\r\n\t\t\t//   to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = _gl.getParameter( _gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction allocateLights( lights ) {\r\n\r\n\t\tvar dirLights = 0;\r\n\t\tvar pointLights = 0;\r\n\t\tvar spotLights = 0;\r\n\t\tvar hemiLights = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\r\n\t}\r\n\r\n\tfunction allocateShadows( lights ) {\r\n\r\n\t\tvar maxShadows = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\tif ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) maxShadows ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxShadows;\r\n\r\n\t}\r\n\r\n\t// DEPRECATED\r\n\r\n\tthis.initMaterial = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPrePlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPostPlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.updateShadowMap = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\toptions = options || {};\r\n\r\n\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n\tthis.generateMipmaps = true;\r\n\r\n\tthis.shareDepthFrom = null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar tmp = new THREE.WebGLRenderTarget( this.width, this.height );\r\n\r\n\t\ttmp.wrapS = this.wrapS;\r\n\t\ttmp.wrapT = this.wrapT;\r\n\r\n\t\ttmp.magFilter = this.magFilter;\r\n\t\ttmp.minFilter = this.minFilter;\r\n\r\n\t\ttmp.anisotropy = this.anisotropy;\r\n\r\n\t\ttmp.offset.copy( this.offset );\r\n\t\ttmp.repeat.copy( this.repeat );\r\n\r\n\t\ttmp.format = this.format;\r\n\t\ttmp.type = this.type;\r\n\r\n\t\ttmp.depthBuffer = this.depthBuffer;\r\n\t\ttmp.stencilBuffer = this.stencilBuffer;\r\n\r\n\t\ttmp.generateMipmaps = this.generateMipmaps;\r\n\r\n\t\ttmp.shareDepthFrom = this.shareDepthFrom;\r\n\r\n\t\treturn tmp;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tvar generateDefines = function ( defines ) {\r\n\r\n\t\tvar value, chunk, chunks = [];\r\n\r\n\t\tfor ( var d in defines ) {\r\n\r\n\t\t\tvalue = defines[ d ];\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunk = '#define ' + d + ' ' + value;\r\n\t\t\tchunks.push( chunk );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t};\r\n\r\n\tvar cacheUniformLocations = function ( gl, program, identifiers ) {\r\n\r\n\t\tvar uniforms = {};\r\n\r\n\t\tfor ( var i = 0, l = identifiers.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar id = identifiers[ i ];\r\n\t\t\tuniforms[ id ] = gl.getUniformLocation( program, id );\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t};\r\n\r\n\tvar cacheAttributeLocations = function ( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tfor ( var i = 0, l = identifiers.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar id = identifiers[ i ];\r\n\t\t\tattributes[ id ] = gl.getAttribLocation( program, id );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t};\r\n\r\n\treturn function ( renderer, code, material, parameters ) {\r\n\r\n\t\tvar _this = renderer;\r\n\t\tvar _gl = _this.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\t\tvar uniforms = material.__webglShader.uniforms;\r\n\t\tvar attributes = material.attributes;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar index0AttributeName = material.index0AttributeName;\r\n\r\n\t\tif ( index0AttributeName === undefined && parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\r\n\t\t\tindex0AttributeName = 'position';\r\n\r\n\t\t}\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = _gl.createProgram();\r\n\r\n\t\tvar prefix_vertex, prefix_fragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefix_vertex = '';\r\n\t\t\tprefix_fragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefix_vertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\t_this.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t_this.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.wrapAround ? '#define WRAP_AROUND' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\t\t\tparameters.shadowMapCascade ? '#define SHADOWMAP_CASCADE' : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t//_this._glExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\t\t\t\t'attribute vec2 uv2;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t''\r\n\r\n\t\t\t].join( '\\n' );\r\n\r\n\t\t\tprefix_fragment = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t( parameters.bumpMap || parameters.normalMap ) ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest: '',\r\n\r\n\t\t\t\t_this.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t_this.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\tparameters.wrapAround ? '#define WRAP_AROUND' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\t\t\tparameters.shadowMapCascade ? '#define SHADOWMAP_CASCADE' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t//_this._glExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\t\t\t''\r\n\r\n\t\t\t].join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvar glVertexShader = new THREE.WebGLShader( _gl, _gl.VERTEX_SHADER, prefix_vertex + vertexShader );\r\n\t\tvar glFragmentShader = new THREE.WebGLShader( _gl, _gl.FRAGMENT_SHADER, prefix_fragment + fragmentShader );\r\n\r\n\t\t_gl.attachShader( program, glVertexShader );\r\n\t\t_gl.attachShader( program, glFragmentShader );\r\n\r\n\t\tif ( index0AttributeName !== undefined ) {\r\n\r\n\t\t\t// Force a particular attribute to index 0.\r\n\t\t\t// because potentially expensive emulation is done by browser if attribute 0 is disabled.\r\n\t\t\t// And, color, for example is often automatically bound to index 0 so disabling it\r\n\r\n\t\t\t_gl.bindAttribLocation( program, 0, index0AttributeName );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.linkProgram( program );\r\n\r\n\t\tif ( _gl.getProgramParameter( program, _gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: Could not initialise shader.' );\r\n\t\t\tconsole.error( 'gl.VALIDATE_STATUS', _gl.getProgramParameter( program, _gl.VALIDATE_STATUS ) );\r\n\t\t\tconsole.error( 'gl.getError()', _gl.getError() );\r\n\r\n\t\t}\r\n\r\n\t\tif ( _gl.getProgramInfoLog( program ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', _gl.getProgramInfoLog( program ) );\r\n\t\t\t// console.warn( _gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\r\n\t\t\t// console.warn( _gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\t_gl.deleteShader( glVertexShader );\r\n\t\t_gl.deleteShader( glFragmentShader );\r\n\r\n\t\t// cache uniform locations\r\n\r\n\t\tvar identifiers = [\r\n\r\n\t\t\t'viewMatrix',\r\n\t\t\t'modelViewMatrix',\r\n\t\t\t'projectionMatrix',\r\n\t\t\t'normalMatrix',\r\n\t\t\t'modelMatrix',\r\n\t\t\t'cameraPosition',\r\n\t\t\t'morphTargetInfluences',\r\n\t\t\t'bindMatrix',\r\n\t\t\t'bindMatrixInverse'\r\n\r\n\t\t];\r\n\r\n\t\tif ( parameters.useVertexTexture ) {\r\n\r\n\t\t\tidentifiers.push( 'boneTexture' );\r\n\t\t\tidentifiers.push( 'boneTextureWidth' );\r\n\t\t\tidentifiers.push( 'boneTextureHeight' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tidentifiers.push( 'boneGlobalMatrices' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( parameters.logarithmicDepthBuffer ) {\r\n\r\n\t\t\tidentifiers.push('logDepthBufFC');\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfor ( var u in uniforms ) {\r\n\r\n\t\t\tidentifiers.push( u );\r\n\r\n\t\t}\r\n\r\n\t\tthis.uniforms = cacheUniformLocations( _gl, program, identifiers );\r\n\r\n\t\t// cache attributes locations\r\n\r\n\t\tidentifiers = [\r\n\r\n\t\t\t'position',\r\n\t\t\t'normal',\r\n\t\t\t'uv',\r\n\t\t\t'uv2',\r\n\t\t\t'tangent',\r\n\t\t\t'color',\r\n\t\t\t'skinIndex',\r\n\t\t\t'skinWeight',\r\n\t\t\t'lineDistance'\r\n\r\n\t\t];\r\n\r\n\t\tfor ( var i = 0; i < parameters.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\tidentifiers.push( 'morphTarget' + i );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameters.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\tidentifiers.push( 'morphNormal' + i );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var a in attributes ) {\r\n\r\n\t\t\tidentifiers.push( a );\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes = cacheAttributeLocations( _gl, program, identifiers );\r\n\t\tthis.attributesKeys = Object.keys( this.attributes );\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tvar addLineNumbers = function ( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t};\r\n\r\n\treturn function ( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type ); \r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', gl.getShaderInfoLog( shader ) );\r\n\t\t\tconsole.warn( addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\tvar hasVertexTexture;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t-1, -1,  0, 0,\r\n\t\t\t 1, -1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t-1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tgl.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tgl.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( hasVertexTexture ) {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t}\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\r\n\t\tvar size = 16 / viewportHeight,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tgl.enableVertexAttribArray( attributes.vertex );\r\n\t\tgl.enableVertexAttribArray( attributes.uv );\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/unforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.disable( gl.CULL_FACE );\r\n\t\tgl.depthMask( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewportHeight;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\t\t\t\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition )\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tgl.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tgl.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tgl.disable( gl.BLEND );\r\n\t\t\t\tgl.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tgl.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tgl.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tgl.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tgl.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition )\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tgl.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\trenderer.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tgl.enable( gl.CULL_FACE );\r\n\t\tgl.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthMask( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/ShadowMapPlugin.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ShadowMapPlugin = function ( _renderer, _lights, _webglObjects, _webglObjectsImmediate ) {\r\n\r\n\tvar _gl = _renderer.context;\r\n\r\n\tvar _depthMaterial, _depthMaterialMorph, _depthMaterialSkin, _depthMaterialMorphSkin,\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_min = new THREE.Vector3(),\r\n\t_max = new THREE.Vector3(),\r\n\r\n\t_matrixPosition = new THREE.Vector3(),\r\n\t\r\n\t_renderList = [];\r\n\r\n\t// init\r\n\r\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\t_depthMaterial = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader\r\n\t } );\r\n\r\n\t_depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true\r\n\t} );\r\n\r\n\t_depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterial._shadowPass = true;\r\n\t_depthMaterialMorph._shadowPass = true;\r\n\t_depthMaterialSkin._shadowPass = true;\r\n\t_depthMaterialMorphSkin._shadowPass = true;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( _renderer.shadowMapEnabled === false ) return;\r\n\r\n\t\tvar i, il, j, jl, n,\r\n\r\n\t\tshadowMap, shadowMatrix, shadowCamera,\r\n\t\tprogram, buffer, material,\r\n\t\twebglObject, object, light,\r\n\r\n\t\tlights = [],\r\n\t\tk = 0,\r\n\r\n\t\tfog = null;\r\n\r\n\t\t// set GL state for depth map\r\n\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_gl.disable( _gl.BLEND );\r\n\r\n\t\t_gl.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\tif ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.setDepthTest( true );\r\n\r\n\t\t// preprocess lights\r\n\t\t// \t- skip lights that are not casting shadows\r\n\t\t//\t- create virtual lights for cascaded shadow maps\r\n\r\n\t\tfor ( i = 0, il = _lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tlight = _lights[ i ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( ( light instanceof THREE.DirectionalLight ) && light.shadowCascade ) {\r\n\r\n\t\t\t\tfor ( n = 0; n < light.shadowCascadeCount; n ++ ) {\r\n\r\n\t\t\t\t\tvar virtualLight;\r\n\r\n\t\t\t\t\tif ( ! light.shadowCascadeArray[ n ] ) {\r\n\r\n\t\t\t\t\t\tvirtualLight = createVirtualLight( light, n );\r\n\t\t\t\t\t\tvirtualLight.originalCamera = camera;\r\n\r\n\t\t\t\t\t\tvar gyro = new THREE.Gyroscope();\r\n\t\t\t\t\t\tgyro.position.copy( light.shadowCascadeOffset );\r\n\r\n\t\t\t\t\t\tgyro.add( virtualLight );\r\n\t\t\t\t\t\tgyro.add( virtualLight.target );\r\n\r\n\t\t\t\t\t\tcamera.add( gyro );\r\n\r\n\t\t\t\t\t\tlight.shadowCascadeArray[ n ] = virtualLight;\r\n\r\n\t\t\t\t\t\tconsole.log( \"Created virtualLight\", virtualLight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvirtualLight = light.shadowCascadeArray[ n ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tupdateVirtualLight( light, n );\r\n\r\n\t\t\t\t\tlights[ k ] = virtualLight;\r\n\t\t\t\t\tk ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlights[ k ] = light;\r\n\t\t\t\tk ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tlight = lights[ i ];\r\n\r\n\t\t\tif ( ! light.shadowMap ) {\r\n\r\n\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\tif ( _renderer.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\r\n\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! light.shadowCamera ) {\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( \"Unsupported light type for shadow\" );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscene.add( light.shadowCamera );\r\n\r\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\r\n\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\tscene.add( light.cameraHelper );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.isVirtual && virtualLight.originalCamera == camera ) {\r\n\r\n\t\t\t\tupdateShadowCamera( camera, light );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tshadowMap = light.shadowMap;\r\n\t\t\tshadowMatrix = light.shadowMatrix;\r\n\t\t\tshadowCamera = light.shadowCamera;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\r\n\t\t\t// compute shadow matrix\r\n\r\n\t\t\tshadowMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t// render shadow map\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t_renderList.length = 0;\r\n\r\n\t\t\tprojectObject( scene, scene, shadowCamera );\r\n\r\n\r\n\t\t\t// render regular objects\r\n\r\n\t\t\tvar objectMaterial, useMorphing, useSkinning;\r\n\r\n\t\t\tfor ( j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\twebglObject = _renderList[ j ];\r\n\r\n\t\t\t\tobject = webglObject.object;\r\n\t\t\t\tbuffer = webglObject.buffer;\r\n\r\n\t\t\t\t// culling is overriden globally for all objects\r\n\t\t\t\t// while rendering depth map\r\n\r\n\t\t\t\t// need to deal with MeshFaceMaterial somehow\r\n\t\t\t\t// in that case just use the first of material.materials for now\r\n\t\t\t\t// (proper solution would require to break objects by materials\r\n\t\t\t\t//  similarly to regular rendering and then set corresponding\r\n\t\t\t\t//  depth materials per each chunk instead of just once per object)\r\n\r\n\t\t\t\tobjectMaterial = getObjectMaterial( object );\r\n\r\n\t\t\t\tuseMorphing = object.geometry.morphTargets !== undefined && object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;\r\n\t\t\t\tuseSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;\r\n\r\n\t\t\t\tif ( object.customDepthMaterial ) {\r\n\r\n\t\t\t\t\tmaterial = object.customDepthMaterial;\r\n\r\n\t\t\t\t} else if ( useSkinning ) {\r\n\r\n\t\t\t\t\tmaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n\t\t\t\t} else if ( useMorphing ) {\r\n\r\n\t\t\t\t\tmaterial = _depthMaterialMorph;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterial = _depthMaterial;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_renderer.setMaterialFaces( objectMaterial );\r\n\r\n\t\t\t\tif ( buffer instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, fog, material, buffer, object );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_renderer.renderBuffer( shadowCamera, _lights, fog, material, buffer, object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// set matrices and render immediate objects\r\n\r\n\t\t\tfor ( j = 0, jl = _webglObjectsImmediate.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\twebglObject = _webglObjectsImmediate[ j ];\r\n\t\t\t\tobject = webglObject.object;\r\n\r\n\t\t\t\tif ( object.visible && object.castShadow ) {\r\n\r\n\t\t\t\t\tobject._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\r\n\t\t\t\t\t_renderer.renderImmediateObject( shadowCamera, _lights, fog, _depthMaterial, object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore GL state\r\n\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\r\n\t\t_gl.clearColor( clearColor.r, clearColor.g, clearColor.b, clearAlpha );\r\n\t\t_gl.enable( _gl.BLEND );\r\n\r\n\t\tif ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction projectObject( scene, object, shadowCamera ){\r\n\r\n\t\tif ( object.visible ) {\r\n\r\n\t\t\tvar webglObjects = _webglObjects[ object.id ];\r\n\r\n\t\t\tif ( webglObjects && object.castShadow && (object.frustumCulled === false || _frustum.intersectsObject( object ) === true) ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = webglObjects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar webglObject = webglObjects[ i ];\r\n\r\n\t\t\t\t\tobject._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( webglObject );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = object.children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tprojectObject( scene, object.children[ i ], shadowCamera );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createVirtualLight( light, cascade ) {\r\n\r\n\t\tvar virtualLight = new THREE.DirectionalLight();\r\n\r\n\t\tvirtualLight.isVirtual = true;\r\n\r\n\t\tvirtualLight.onlyShadow = true;\r\n\t\tvirtualLight.castShadow = true;\r\n\r\n\t\tvirtualLight.shadowCameraNear = light.shadowCameraNear;\r\n\t\tvirtualLight.shadowCameraFar = light.shadowCameraFar;\r\n\r\n\t\tvirtualLight.shadowCameraLeft = light.shadowCameraLeft;\r\n\t\tvirtualLight.shadowCameraRight = light.shadowCameraRight;\r\n\t\tvirtualLight.shadowCameraBottom = light.shadowCameraBottom;\r\n\t\tvirtualLight.shadowCameraTop = light.shadowCameraTop;\r\n\r\n\t\tvirtualLight.shadowCameraVisible = light.shadowCameraVisible;\r\n\r\n\t\tvirtualLight.shadowDarkness = light.shadowDarkness;\r\n\r\n\t\tvirtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\r\n\t\tvirtualLight.shadowMapWidth = light.shadowCascadeWidth[ cascade ];\r\n\t\tvirtualLight.shadowMapHeight = light.shadowCascadeHeight[ cascade ];\r\n\r\n\t\tvirtualLight.pointsWorld = [];\r\n\t\tvirtualLight.pointsFrustum = [];\r\n\r\n\t\tvar pointsWorld = virtualLight.pointsWorld,\r\n\t\t\tpointsFrustum = virtualLight.pointsFrustum;\r\n\r\n\t\tfor ( var i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\tpointsWorld[ i ] = new THREE.Vector3();\r\n\t\t\tpointsFrustum[ i ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tvar nearZ = light.shadowCascadeNearZ[ cascade ];\r\n\t\tvar farZ = light.shadowCascadeFarZ[ cascade ];\r\n\r\n\t\tpointsFrustum[ 0 ].set( - 1, - 1, nearZ );\r\n\t\tpointsFrustum[ 1 ].set(  1, - 1, nearZ );\r\n\t\tpointsFrustum[ 2 ].set( - 1,  1, nearZ );\r\n\t\tpointsFrustum[ 3 ].set(  1,  1, nearZ );\r\n\r\n\t\tpointsFrustum[ 4 ].set( - 1, - 1, farZ );\r\n\t\tpointsFrustum[ 5 ].set(  1, - 1, farZ );\r\n\t\tpointsFrustum[ 6 ].set( - 1,  1, farZ );\r\n\t\tpointsFrustum[ 7 ].set(  1,  1, farZ );\r\n\r\n\t\treturn virtualLight;\r\n\r\n\t}\r\n\r\n\t// Synchronize virtual light with the original light\r\n\r\n\tfunction updateVirtualLight( light, cascade ) {\r\n\r\n\t\tvar virtualLight = light.shadowCascadeArray[ cascade ];\r\n\r\n\t\tvirtualLight.position.copy( light.position );\r\n\t\tvirtualLight.target.position.copy( light.target.position );\r\n\t\tvirtualLight.lookAt( virtualLight.target );\r\n\r\n\t\tvirtualLight.shadowCameraVisible = light.shadowCameraVisible;\r\n\t\tvirtualLight.shadowDarkness = light.shadowDarkness;\r\n\r\n\t\tvirtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\r\n\r\n\t\tvar nearZ = light.shadowCascadeNearZ[ cascade ];\r\n\t\tvar farZ = light.shadowCascadeFarZ[ cascade ];\r\n\r\n\t\tvar pointsFrustum = virtualLight.pointsFrustum;\r\n\r\n\t\tpointsFrustum[ 0 ].z = nearZ;\r\n\t\tpointsFrustum[ 1 ].z = nearZ;\r\n\t\tpointsFrustum[ 2 ].z = nearZ;\r\n\t\tpointsFrustum[ 3 ].z = nearZ;\r\n\r\n\t\tpointsFrustum[ 4 ].z = farZ;\r\n\t\tpointsFrustum[ 5 ].z = farZ;\r\n\t\tpointsFrustum[ 6 ].z = farZ;\r\n\t\tpointsFrustum[ 7 ].z = farZ;\r\n\r\n\t}\r\n\r\n\t// Fit shadow camera's ortho frustum to camera frustum\r\n\r\n\tfunction updateShadowCamera( camera, light ) {\r\n\r\n\t\tvar shadowCamera = light.shadowCamera,\r\n\t\t\tpointsFrustum = light.pointsFrustum,\r\n\t\t\tpointsWorld = light.pointsWorld;\r\n\r\n\t\t_min.set( Infinity, Infinity, Infinity );\r\n\t\t_max.set( - Infinity, - Infinity, - Infinity );\r\n\r\n\t\tfor ( var i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\tvar p = pointsWorld[ i ];\r\n\r\n\t\t\tp.copy( pointsFrustum[ i ] );\r\n\t\t\tp.unproject( camera );\r\n\r\n\t\t\tp.applyMatrix4( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\tif ( p.x < _min.x ) _min.x = p.x;\r\n\t\t\tif ( p.x > _max.x ) _max.x = p.x;\r\n\r\n\t\t\tif ( p.y < _min.y ) _min.y = p.y;\r\n\t\t\tif ( p.y > _max.y ) _max.y = p.y;\r\n\r\n\t\t\tif ( p.z < _min.z ) _min.z = p.z;\r\n\t\t\tif ( p.z > _max.z ) _max.z = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tshadowCamera.left = _min.x;\r\n\t\tshadowCamera.right = _max.x;\r\n\t\tshadowCamera.top = _max.y;\r\n\t\tshadowCamera.bottom = _min.y;\r\n\r\n\t\t// can't really fit near/far\r\n\t\t//shadowCamera.near = _min.z;\r\n\t\t//shadowCamera.far = _max.z;\r\n\r\n\t\tshadowCamera.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\t// For the moment just ignore objects that have multiple materials with different animation methods\r\n\t// Only the first material will be taken into account for deciding which depth material to use for shadow maps\r\n\r\n\tfunction getObjectMaterial( object ) {\r\n\r\n\t\treturn object.material instanceof THREE.MeshFaceMaterial\r\n\t\t\t? object.material.materials[ 0 ]\r\n\t\t\t: object.material;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tgl.enableVertexAttribArray( attributes.position );\r\n\t\tgl.enableVertexAttribArray( attributes.uv );\r\n\r\n\t\tgl.disable( gl.CULL_FACE );\r\n\t\tgl.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tgl.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite._modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite._modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\trenderer.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\trenderer.setDepthTest( material.depthTest );\r\n\t\t\trenderer.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tgl.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/extras/GeometryUtils.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ImageUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t}, undefined, function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t} );\r\n\r\n\t\ttexture.sourceFile = url;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\r\n\t\t// no flipping needed for cube textures\r\n\r\n\t\ttexture.flipY = false;\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\tloader.load( array[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tgetNormalMap: function ( image, depth ) {\r\n\r\n\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\r\n\t\tvar cross = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\r\n\t\t}\r\n\r\n\t\tvar subtract = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\r\n\t\t}\r\n\r\n\t\tvar normalize = function ( a ) {\r\n\r\n\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\r\n\t\t}\r\n\r\n\t\tdepth = depth | 1;\r\n\r\n\t\tvar width = image.width;\r\n\t\tvar height = image.height;\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.drawImage( image, 0, 0 );\r\n\r\n\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\tvar imageData = context.createImageData( width, height );\r\n\t\tvar output = imageData.data;\r\n\r\n\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\r\n\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\r\n\t\t\t\tvar points = [];\r\n\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [  1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\r\n\t\t\t\tvar normals = [];\r\n\t\t\t\tvar num_points = points.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\r\n\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\r\n\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\r\n\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\r\n\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\r\n\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 3 ] = 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\treturn canvas;\r\n\r\n\t},\r\n\r\n\tgenerateDataTexture: function ( width, height, color ) {\r\n\r\n\t\tvar size = width * height;\r\n\t\tvar data = new Uint8Array( 3 * size );\r\n\r\n\t\tvar r = Math.floor( color.r * 255 );\r\n\t\tvar g = Math.floor( color.g * 255 );\r\n\t\tvar b = Math.floor( color.b * 255 );\r\n\r\n\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\tdata[ i * 3 + 2 ] = b;\r\n\r\n\t\t}\r\n\r\n\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Object3D();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/FontUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n * \ttypeface.js and canvastext\r\n * \t\tFor converting fonts and rendering with javascript\r\n *\t\thttp://typeface.neocracy.org\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\r\n\r\nTHREE.FontUtils = {\r\n\r\n\tfaces: {},\r\n\r\n\t// Just for now. face[weight][style]\r\n\r\n\tface: 'helvetiker',\r\n\tweight: 'normal',\r\n\tstyle: 'normal',\r\n\tsize: 150,\r\n\tdivisions: 10,\r\n\r\n\tgetFace: function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\treturn this.faces[ this.face ][ this.weight ][ this.style ];\r\n\r\n\t\t} catch (e) {\r\n\r\n\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\r\n\t\t};\r\n\r\n\t},\r\n\r\n\tloadFace: function ( data ) {\r\n\r\n\t\tvar family = data.familyName.toLowerCase();\r\n\r\n\t\tvar ThreeFont = this;\r\n\r\n\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\tvar face = ThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tdrawText: function ( text ) {\r\n\r\n\t\tvar characterPts = [], allPts = [];\r\n\r\n\t\t// RenderText\r\n\r\n\t\tvar i, p,\r\n\t\t\tface = this.getFace(),\r\n\t\t\tscale = this.size / face.resolution,\r\n\t\t\toffset = 0,\r\n\t\t\tchars = String( text ).split( '' ),\r\n\t\t\tlength = chars.length;\r\n\r\n\t\tvar fontPaths = [];\r\n\r\n\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\toffset += ret.offset;\r\n\r\n\t\t\tfontPaths.push( ret.path );\r\n\r\n\t\t}\r\n\r\n\t\t// get the width\r\n\r\n\t\tvar width = offset / 2;\r\n\t\t//\r\n\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t//\r\n\t\t// \tallPts[ p ].x -= width;\r\n\t\t//\r\n\t\t// }\r\n\r\n\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t//extract.contour = allPts;\r\n\r\n\t\t//extract.paths = fontPaths;\r\n\t\t//extract.offset = width;\r\n\r\n\t\treturn { paths: fontPaths, offset: width };\r\n\r\n\t},\r\n\r\n\r\n\r\n\r\n\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\r\n\t\tvar pts = [];\r\n\r\n\t\tvar i, i2, divisions,\r\n\t\t\toutline, action, length,\r\n\t\t\tscaleX, scaleY,\r\n\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\tlaste,\r\n\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\tlength = outline.length;\r\n\r\n\t\t\tscaleX = scale;\r\n\t\t\tscaleY = scale;\r\n\r\n\t\t\tfor ( i = 0; i < length; ) {\r\n\r\n\t\t\t\taction = outline[ i ++ ];\r\n\r\n\t\t\t\t//console.log( action );\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\tcase 'm':\r\n\r\n\t\t\t\t\t// Move To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'l':\r\n\r\n\t\t\t\t\t// Line To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tpath.lineTo( x,y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'q':\r\n\r\n\t\t\t\t\t// QuadraticCurveTo\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tvar tx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\tvar ty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\t\t\t\t  }\r\n\r\n\t\t\t\t  }\r\n\r\n\t\t\t\t  break;\r\n\r\n\t\t\t\tcase 'b':\r\n\r\n\t\t\t\t\t// Cubic Bezier Curve\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\r\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tvar tx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\tvar ty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn { offset: glyph.ha * scale, path:path };\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\r\n\t// Parameters \r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\r\n\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\r\n\tTHREE.FontUtils.size = size;\r\n\tTHREE.FontUtils.divisions = curveSegments;\r\n\r\n\tTHREE.FontUtils.face = font;\r\n\tTHREE.FontUtils.weight = weight;\r\n\tTHREE.FontUtils.style = style;\r\n\r\n\t// Get a Font data json object\r\n\r\n\tvar data = THREE.FontUtils.drawText( text );\r\n\r\n\tvar paths = data.paths;\r\n\tvar shapes = [];\r\n\r\n\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t}\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n\r\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\r\n\r\n\r\n( function ( namespace ) {\r\n\r\n\tvar EPSILON = 0.0000000001;\r\n\r\n\t// takes in an contour array and returns\r\n\r\n\tvar process = function ( contour, indices ) {\r\n\r\n\t\tvar n = contour.length;\r\n\r\n\t\tif ( n < 3 ) return null;\r\n\r\n\t\tvar result = [],\r\n\t\t\tverts = [],\r\n\t\t\tvertIndices = [];\r\n\r\n\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\tvar u, v, w;\r\n\r\n\t\tif ( area( contour ) > 0.0 ) {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t}\r\n\r\n\t\tvar nv = n;\r\n\r\n\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t//return null;\r\n\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\tconsole.log( 'Warning, unable to triangulate polygon!' );\r\n\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\ta = verts[ u ];\r\n\t\t\t\tb = verts[ v ];\r\n\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\tfor ( s = v, t = v + 1; t < nv; s++, t++ ) {\r\n\r\n\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnv --;\r\n\r\n\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices ) return vertIndices;\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tvar area = function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t};\r\n\r\n\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\r\n\t\tvar p;\r\n\t\tvar ax, ay, bx, by;\r\n\t\tvar cx, cy, px, py;\r\n\r\n\t\tax = contour[ verts[ u ] ].x;\r\n\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\tbx = contour[ verts[ v ] ].x;\r\n\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\tcx = contour[ verts[ w ] ].x;\r\n\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\taX = cx - bx;  aY = cy - by;\r\n\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\tpx = contour[ verts[ p ] ].x\r\n\t\t\tpy = contour[ verts[ p ] ].y\r\n\r\n\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n\r\n\tnamespace.Triangulate = process;\r\n\tnamespace.Triangulate.area = area;\r\n\r\n\treturn namespace;\r\n\r\n} )( THREE.FontUtils );\r\n\r\n// To use the typeface.js face files, hook up the API\r\nself._typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\nTHREE.typeface_js = self._typeface_js;\r\n\r\n// File:src/extras/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\r\nTHREE.Audio.prototype.load = function ( file ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open( 'GET', file, true );\r\n\trequest.responseType = 'arraybuffer';\r\n\trequest.onload = function ( e ) {\r\n\r\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\r\n\t\t\tscope.source.buffer = buffer;\r\n\t\t\tscope.source.connect( scope.panner );\r\n\t\t\tscope.source.start( 0 );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\trequest.send();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\r\n\tthis.source.loop = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\r\n\tthis.panner.refDistance = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\r\n\tthis.panner.rolloffFactor = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\r\n\treturn function ( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\r\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3();\r\n\r\n\tvar orientation = new THREE.Vector3();\r\n\tvar velocity = new THREE.Vector3();\r\n\r\n\tvar positionPrev = new THREE.Vector3();\r\n\r\n\treturn function ( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tvar listener = this.context.listener;\r\n\t\tvar up = this.up;\r\n\r\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\torientation.set( 0, 0, -1 ).applyQuaternion( quaternion );\r\n\t\tvelocity.subVectors( position, positionPrev );\r\n\r\n\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\t\tlistener.setVelocity( velocity.x, velocity.y, velocity.z );\r\n\r\n\t\tpositionPrev.copy( position );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\n// Virtual base class method to overwrite and implement in subclasses\r\n//\t- t [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\r\n\tconsole.log( \"Warning, getPoint() not implemented!\" );\r\n\treturn null;\r\n\r\n};\r\n\r\n// Get point at relative position in curve according to arc length\r\n// - u [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getPoint( t );\r\n\r\n};\r\n\r\n// Get sequence of points using getPoint( t )\r\n\r\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get sequence of points using getPointAt( u )\r\n\r\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get total curve arc length\r\n\r\nTHREE.Curve.prototype.getLength = function () {\r\n\r\n\tvar lengths = this.getLengths();\r\n\treturn lengths[ lengths.length - 1 ];\r\n\r\n};\r\n\r\n// Get list of cumulative segment lengths\r\n\r\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = (this.__arcLengthDivisions) ? (this.__arcLengthDivisions): 200;\r\n\r\n\tif ( this.cacheArcLengths\r\n\t\t&& ( this.cacheArcLengths.length == divisions + 1 )\r\n\t\t&& ! this.needsUpdate) {\r\n\r\n\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\treturn this.cacheArcLengths;\r\n\r\n\t}\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n\tvar cache = [];\r\n\tvar current, last = this.getPoint( 0 );\r\n\tvar p, sum = 0;\r\n\r\n\tcache.push( 0 );\r\n\r\n\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\tsum += current.distanceTo( last );\r\n\t\tcache.push( sum );\r\n\t\tlast = current;\r\n\r\n\t}\r\n\r\n\tthis.cacheArcLengths = cache;\r\n\r\n\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.updateArcLengths = function() {\r\n\tthis.needsUpdate = true;\r\n\tthis.getLengths();\r\n};\r\n\r\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equi distance\r\n\r\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\r\n\tvar arcLengths = this.getLengths();\r\n\r\n\tvar i = 0, il = arcLengths.length;\r\n\r\n\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\tif ( distance ) {\r\n\r\n\t\ttargetArcLength = distance;\r\n\r\n\t} else {\r\n\r\n\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t}\r\n\r\n\t//var time = Date.now();\r\n\r\n\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\tvar low = 0, high = il - 1, comparison;\r\n\r\n\twhile ( low <= high ) {\r\n\r\n\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\tlow = i + 1;\r\n\t\t\tcontinue;\r\n\r\n\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\thigh = i - 1;\r\n\t\t\tcontinue;\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = i;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// DONE\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ti = high;\r\n\r\n\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\tif ( arcLengths[ i ] == targetArcLength ) {\r\n\r\n\t\tvar t = i / ( il - 1 );\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// we could get finer grain at lengths, or use simple interpolatation between two points\r\n\r\n\tvar lengthBefore = arcLengths[ i ];\r\n    var lengthAfter = arcLengths[ i + 1 ];\r\n\r\n    var segmentLength = lengthAfter - lengthBefore;\r\n\r\n    // determine where we are between the 'before' and 'after' points\r\n\r\n    var segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n    // add that fractional amount to t\r\n\r\n    var t = ( i + segmentFraction ) / ( il -1 );\r\n\r\n\treturn t;\r\n\r\n};\r\n\r\n// Returns a unit vector tangent at t\r\n// In case any sub curve does not implement its tangent derivation,\r\n// 2 points a small delta apart will be used to find its gradient\r\n// which seems to give a reasonable approximation\r\n\r\nTHREE.Curve.prototype.getTangent = function( t ) {\r\n\r\n\tvar delta = 0.0001;\r\n\tvar t1 = t - delta;\r\n\tvar t2 = t + delta;\r\n\r\n\t// Capping in case of danger\r\n\r\n\tif ( t1 < 0 ) t1 = 0;\r\n\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\tvar pt1 = this.getPoint( t1 );\r\n\tvar pt2 = this.getPoint( t2 );\r\n\r\n\tvar vec = pt2.clone().sub(pt1);\r\n\treturn vec.normalize();\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getTangent( t );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Curve.Utils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function (t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * (1 - t) * (1 - t)  +\r\n\t\t\t3 * p1 * (1 - t) * (1-t) - 6 *t *p1 * (1-t) +\r\n\t\t\t6 * t *  p2 * (1-t) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\tthis.bends = [];\r\n\t\r\n\tthis.autoClose = false; // Automatically closes the path\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[0].getPoint(0);\r\n\tvar endPoint = this.curves[this.curves.length-1].getPoint(1);\r\n\t\r\n\tif (! startPoint.equals(endPoint)) {\r\n\t\tthis.curves.push( new THREE.LineCurve(endPoint, startPoint) );\r\n\t}\r\n\t\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0, diff, curve;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\tcurve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\r\n\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length == this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t};\r\n\r\n\t// Get length of subsurve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\tvar i, il = this.curves.length;\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n// Returns min and max coordinates\r\n\r\nTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\r\n\tvar points = this.getPoints();\r\n\r\n\tvar maxX, maxY, maxZ;\r\n\tvar minX, minY, minZ;\r\n\r\n\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\tminX = minY = Number.POSITIVE_INFINITY;\r\n\r\n\tvar p, i, il, sum;\r\n\r\n\tvar v3 = points[0] instanceof THREE.Vector3;\r\n\r\n\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\r\n\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\tp = points[ i ];\r\n\r\n\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\telse if ( p.x < minX ) minX = p.x;\r\n\r\n\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\telse if ( p.y < minY ) minY = p.y;\r\n\r\n\t\tif ( v3 ) {\r\n\r\n\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tsum.add( p );\r\n\r\n\t}\r\n\r\n\tvar ret = {\r\n\r\n\t\tminX: minX,\r\n\t\tminY: minY,\r\n\t\tmaxX: maxX,\r\n\t\tmaxY: maxY\r\n\r\n\t};\r\n\r\n\tif ( v3 ) {\r\n\r\n\t\tret.maxZ = maxZ;\r\n\t\tret.minZ = minZ;\r\n\r\n\t}\r\n\r\n\treturn ret;\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or Points objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistance sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\r\n\r\n// Wrap path / Bend modifiers?\r\n\r\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\r\n\tthis.bends.push( bendpath );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getSpacedPoints( segments );\r\n\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// This returns getPoints() bend/wrapped around the contour of a path.\r\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\r\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\r\n\tvar bounds = this.getBoundingBox();\r\n\r\n\tvar i, il, p, oldX, oldY, xNorm;\r\n\r\n\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\r\n\t\tp = oldPts[ i ];\r\n\r\n\t\toldX = p.x;\r\n\t\toldY = p.y;\r\n\r\n\t\txNorm = oldX / bounds.maxX;\r\n\r\n\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\r\n\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\r\n\t\t// check for out of bounds?\r\n\r\n\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\tvar normal = path.getTangent( xNorm );\r\n\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\r\n\t\tp.x = pathPt.x + normal.x;\r\n\t\tp.y = pathPt.y + normal.y;\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n\r\n// File:src/extras/core/Gyroscope.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Gyroscope = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n};\r\n\r\nTHREE.Gyroscope.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Gyroscope.prototype.constructor = THREE.Gyroscope;\r\n\r\nTHREE.Gyroscope.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar translationObject = new THREE.Vector3();\r\n\tvar quaternionObject = new THREE.Quaternion();\r\n\tvar scaleObject = new THREE.Vector3();\r\n\r\n\tvar translationWorld = new THREE.Vector3();\r\n\tvar quaternionWorld = new THREE.Quaternion();\r\n\tvar scaleWorld = new THREE.Vector3();\r\n\r\n\treturn function ( force ) {\r\n\r\n\t\tthis.matrixAutoUpdate && this.updateMatrix();\r\n\r\n\t\t// update matrixWorld\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n\t\t\tif ( this.parent ) {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t\tthis.matrixWorld.decompose( translationWorld, quaternionWorld, scaleWorld );\r\n\t\t\t\tthis.matrix.decompose( translationObject, quaternionObject, scaleObject );\r\n\r\n\t\t\t\tthis.matrixWorld.compose( translationWorld, quaternionObject, scaleWorld );\r\n\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\t\r\n}() );\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call(this);\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\nTHREE.Path.prototype.constructor = THREE.Path;\r\n\r\nTHREE.PathActions = {\r\n\r\n\tMOVE_TO: 'moveTo',\r\n\tLINE_TO: 'lineTo',\r\n\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-rom spline\r\n\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\tELLIPSE: 'ellipse'\r\n};\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\r\n\t};\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n//---\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc(aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint(1);\r\n\targs.push(lastPoint.x);\r\n\targs.push(lastPoint.y);\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\t// if ( closedPath ) {\r\n\t//\r\n\t// \tpoints.push( points[ 0 ] );\r\n\t//\r\n\t// }\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n\tif (this.useSpacedPoints) {\r\n\t\tconsole.log('tata');\r\n\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\t}\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar points = [];\r\n\r\n\tvar i, il, item, action, args;\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, j,\r\n\t\tt, tx, ty;\r\n\r\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n\t\titem = this.actions[ i ];\r\n\r\n\t\taction = item.action;\r\n\t\targs = item.args;\r\n\r\n\t\tswitch( action ) {\r\n\r\n\t\tcase THREE.PathActions.MOVE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.LINE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) ) ;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ARC:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t  break;\r\n\t\t  \r\n\t\tcase THREE.PathActions.ELLIPSE:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !! args[ 6 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t  break;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1];\r\n\tvar EPSILON = 0.0000000001;\r\n\tif ( Math.abs(lastPoint.x - points[ 0 ].x) < EPSILON &&\r\n\t\t\t Math.abs(lastPoint.y - points[ 0 ].y) < EPSILON)\r\n\t\tpoints.splice( points.length - 1, 1);\r\n\tif ( closedPath ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n//\r\n// Breaks path into shapes\r\n//\r\n//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n//\t- solid shapes are defined clockwise (CW)\r\n//\t- holes are defined counterclockwise (CCW)\r\n//\r\n//\tIf parameter noHoles==true:\r\n//  - all subPaths are regarded as solid shapes\r\n//  - definition order CW/CCW has no relevance\r\n//\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\r\n\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\tvar i, il, item, action, args;\r\n\r\n\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\r\n\t\t\titem = inActions[ i ];\r\n\r\n\t\t\targs = item.args;\r\n\t\t\taction = item.action;\r\n\r\n\t\t\tif ( action == THREE.PathActions.MOVE_TO ) {\r\n\r\n\t\t\t\tif ( lastPath.actions.length != 0 ) {\r\n\r\n\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastPath.actions.length != 0 ) {\r\n\r\n\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log(subPaths);\r\n\r\n\t\treturn\tsubPaths;\r\n\t}\r\n\r\n\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\t};\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs(edgeDy) > EPSILON ) {\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y == edgeLowPt.y ) {\r\n\t\t\t\t\tif ( inPt.x == edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\r\n\t\t\t\t\tif ( perpEdge == 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\t\t\t\t}\r\n\t\t\t} else {\t\t// parallel or colinear\r\n\t\t\t\tif ( inPt.y != edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// egde lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\t}\r\n\r\n\r\n\tvar subPaths = extractSubpaths( this.actions );\r\n\tif ( subPaths.length == 0 ) return [];\r\n\r\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length == 1) {\r\n\r\n\t\ttmpPath = subPaths[0];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\t\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[mainIdx] = undefined;\r\n\tnewShapeHoles[mainIdx] = [];\r\n\r\n\tvar i, il;\r\n\r\n\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( (! holesFirst ) && ( newShapes[mainIdx] ) )\tmainIdx ++;\r\n\r\n\t\t\tnewShapes[mainIdx] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[mainIdx].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\r\n\t\t\t\r\n\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\tnewShapeHoles[mainIdx] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[mainIdx].push( { h: tmpPath, p: tmpPoints[0] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// only Holes? -> probably all Shapes with wrong orientation\r\n\tif ( ! newShapes[0] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\t\tvar ambigious = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\t\tbetterShapeHoles[sIdx] = [];\r\n\t\t}\r\n\t\tfor (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\t\tvar sh = newShapes[sIdx];\r\n\t\t\tvar sho = newShapeHoles[sIdx];\r\n\t\t\tfor (var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\t\t\t\tvar ho = sho[hIdx];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\tfor (var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[s2Idx].p ) ) {\r\n\t\t\t\t\t\tif ( sIdx != s2Idx )\t\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push( ho );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tambigious = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) { betterShapeHoles[sIdx].push( ho ); }\r\n\t\t\t}\r\n\t\t}\r\n\t\t// console.log(\"ambigious: \", ambigious);\r\n\t\tif ( toChange.length > 0 ) {\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif (! ambigious)\tnewShapeHoles = betterShapeHoles;\r\n\t\t}\r\n\t}\r\n\r\n\tvar tmpHoles, j, jl;\r\n\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\t\ttmpShape = newShapes[i].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[i];\r\n\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\t\t\ttmpShape.holes.push( tmpHoles[j].h );\r\n\t\t}\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\nTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\treturn extruded;\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n// Get points of holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\tif (this.useSpacedPoints) {\r\n\t\treturn this.extractAllSpacedPoints(divisions);\r\n\t}\r\n\r\n\treturn this.extractAllPoints(divisions);\r\n\r\n};\r\n\r\n//\r\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n//\r\n// \treturn {\r\n//\r\n// \t\tshape: this.transform( bend, divisions ),\r\n// \t\tholes: this.getPointsHoles( divisions, bend )\r\n//\r\n// \t};\r\n//\r\n// };\r\n\r\n// Get points of shape and holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Shape.Utils = {\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\t\t\t// inOtherPt needs to be colinear to the inSegment\r\n\t\t\tif ( inSegPt1.x != inSegPt2.x ) {\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs(limit) > EPSILON ) {\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 == 0 ) {\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 == 0 ) || ( perpSeg1 == limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn  [ inSeg1Pt1 ];\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 == limit ) {\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 == 0 ) || ( perpSeg1 == limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn  [ inSeg1Pt2 ];\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 == 0 )\t\treturn  [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 == limit )\treturn  [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\t\t// parallel or colinear\r\n\t\t\t\tif ( ( perpSeg1 != 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx != seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( (seg1dx == 0) && (seg1dy == 0) );\t// segment1 ist just a point?\r\n\t\t\t\tvar seg2Pt = ( (seg2dx == 0) && (seg2dy == 0) );\t// segment2 ist just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\t\t\t\t\tif ( (inSeg1Pt1.x != inSeg2Pt1.x) ||\r\n\t\t\t\t\t\t (inSeg1Pt1.y != inSeg2Pt1.y) )\t\treturn [];   \t// they are distinct  points\r\n\t\t\t\t\treturn  [ inSeg1Pt1 ];                 \t\t\t\t\t// they are the same point\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\t\t\t\t\tif (! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn  [ inSeg1Pt1 ];\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\t\t\t\t\tif (! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn  [ inSeg2Pt1 ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif (seg1dx != 0) {\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal == seg2minVal )\t{\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal == seg2maxVal )\t{\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs(from2toAngle) > EPSILON ) {\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\t\t\t\t} else {\t\t\t\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\t\t\t\t}\r\n\t\t\t} else {\t\t\t\t\t\t\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[inShapeIdx], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[inHoleIdx] );\r\n\t\t\t\tif (! insideAngle ) {\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[inHoleIdx], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[inShapeIdx] );\r\n\t\t\t\tif (! insideAngle ) {\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\t\t\t\t\tnextIdx = sIdx+1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[sIdx], shape[nextIdx], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\t\t\t\t\tchkHole = holes[indepHoles[ihIdx]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\t\t\t\t\t\tnextIdx = hIdx+1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[hIdx], chkHole[nextIdx], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\t\t\t\t\t\tholeIdx = indepHoles[h];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[cutKey] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[holeIdx];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif (! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice(h,1);\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex+1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex+1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[cutKey] = true;\t\t\t// remember failure\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[h] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.log( \"Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t},\r\n\r\n\tb2p1: function ( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t},\r\n\r\n\tb2p2: function ( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t},\r\n\r\n\tb2: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\r\n\t},\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t},\r\n\r\n\tb3p1: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t},\r\n\r\n\tb3p2: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3p3: function ( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub(this.v1);\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub(this.v1);\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\t// returns unit vector\r\n\r\n\treturn vector.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\tvar tangent = new THREE.Vector2( tx, ty );\r\n\ttangent.normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ]\r\n\tvar point1 = points[ intPoint ]\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length -1 : intPoint + 1 ]\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length -1 : intPoint + 2 ]\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvector.y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/animation/AnimationHandler.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.AnimationHandler = {\r\n\r\n\tLINEAR: 0,\r\n\tCATMULLROM: 1,\r\n\tCATMULLROM_FORWARD: 2,\r\n\r\n\t//\r\n\r\n\tadd: function () { console.warn( 'THREE.AnimationHandler.add() has been deprecated.' ); },\r\n\tget: function () { console.warn( 'THREE.AnimationHandler.get() has been deprecated.' ); },\r\n\tremove: function () { console.warn( 'THREE.AnimationHandler.remove() has been deprecated.' ); },\r\n\r\n\t//\r\n\r\n\tanimations: [],\r\n\r\n\tinit: function ( data ) {\r\n\r\n\t\tif ( data.initialized === true ) return data;\r\n\r\n\t\t// loop through all keys\r\n\r\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t// remove minus times\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\r\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create quaternions\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\r\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// prepare morph target keys\r\n\r\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\r\n\t\t\t\t// get all used\r\n\r\n\t\t\t\tvar usedMorphTargets = {};\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\r\n\r\n\t\t\t\t// set all used on all frames\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tvar influences = {};\r\n\r\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\r\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// remove all keys that are on the same time\r\n\r\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\tk --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// set index\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdata.initialized = true;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tparse: function ( root ) {\r\n\r\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\r\n\t\t\thierarchy.push( root );\r\n\r\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\r\n\t\t};\r\n\r\n\t\t// setup hierarchy\r\n\r\n\t\tvar hierarchy = [];\r\n\r\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\r\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\r\n\t\t}\r\n\r\n\t\treturn hierarchy;\r\n\r\n\t},\r\n\r\n\tplay: function ( animation ) {\r\n\r\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\r\n\t\t\tthis.animations.push( animation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tstop: function ( animation ) {\r\n\r\n\t\tvar index = this.animations.indexOf( animation );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tthis.animations.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( deltaTimeMS ) {\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].resetBlendWeights( );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/Animation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Animation = function ( root, data ) {\r\n\r\n\tthis.root = root;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 1;\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.loop = true;\r\n\tthis.weight = 0;\r\n\r\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\r\n};\r\n\r\n\r\nTHREE.Animation.prototype.keyTypes = [ \"pos\", \"rot\", \"scl\" ];\r\n\r\n\r\nTHREE.Animation.prototype.play = function ( startTime, weight ) {\r\n\r\n\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\tthis.weight = weight !== undefined ? weight: 1;\r\n\r\n\tthis.isPlaying = true;\r\n\r\n\tthis.reset();\r\n\r\n\tTHREE.AnimationHandler.play( this );\r\n\r\n};\r\n\r\n\r\nTHREE.Animation.prototype.stop = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\r\n\tTHREE.AnimationHandler.stop( this );\r\n\r\n};\r\n\r\nTHREE.Animation.prototype.reset = function () {\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar object = this.hierarchy[ h ];\r\n\r\n\t\tif ( object.animationCache === undefined ) {\r\n\r\n\t\t\tobject.animationCache = {\r\n\t\t\t\tanimations: {},\r\n\t\t\t\tblending: {\r\n\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif ( object.animationCache.animations[this.data.name] === undefined ) {\r\n\r\n\t\t\tobject.animationCache.animations[this.data.name] = {};\r\n\t\t\tobject.animationCache.animations[this.data.name].prevKey = { pos: 0, rot: 0, scl: 0 };\r\n\t\t\tobject.animationCache.animations[this.data.name].nextKey = { pos: 0, rot: 0, scl: 0 };\r\n\t\t\tobject.animationCache.animations[this.data.name].originalMatrix = object.matrix;\r\n\r\n\t\t}\r\n\r\n\t\tvar animationCache = object.animationCache.animations[this.data.name];\r\n\r\n\t\t// Get keys to match our current time\r\n\r\n\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\tvar type = this.keyTypes[ t ];\r\n\r\n\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\tprevKey = nextKey;\r\n\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Animation.prototype.resetBlendWeights = function () {\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar object = this.hierarchy[ h ];\r\n\r\n\t\tif ( object.animationCache !== undefined ) {\r\n\r\n\t\t\tobject.animationCache.blending.positionWeight = 0.0;\r\n\t\t\tobject.animationCache.blending.quaternionWeight = 0.0;\r\n\t\t\tobject.animationCache.blending.scaleWeight = 0.0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Animation.prototype.update = (function(){\r\n\r\n\tvar points = [];\r\n\tvar target = new THREE.Vector3();\r\n\tvar newVector = new THREE.Vector3();\r\n\tvar newQuat = new THREE.Quaternion();\r\n\r\n\t// Catmull-Rom spline\r\n\r\n\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\r\n\t\tvar c = [], v3 = [],\r\n\t\tpoint, intPoint, weight, w2, w3,\r\n\t\tpa, pb, pc, pd;\r\n\r\n\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\r\n\t\tpa = points[ c[ 0 ] ];\r\n\t\tpb = points[ c[ 1 ] ];\r\n\t\tpc = points[ c[ 2 ] ];\r\n\t\tpd = points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t};\r\n\r\n\treturn function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\tif ( this.weight === 0 )\r\n\t\t\treturn;\r\n\r\n\t\t//\r\n\r\n\t\tvar duration = this.data.length;\r\n\r\n\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\r\n\t\t\tif ( this.loop ) {\r\n\r\n\t\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\tthis.currentTime += duration;\r\n\r\n\t\t\t\tthis.reset();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.stop();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar animationCache = object.animationCache.animations[this.data.name];\r\n\t\t\tvar blending = object.animationCache.blending;\r\n\r\n\t\t\t// loop through pos/rot/scl\r\n\r\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\t// get keys\r\n\r\n\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\r\n\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\r\n\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\r\n\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\r\n\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\r\n\t\t\t\t// interpolate\r\n\r\n\t\t\t\tif ( type === \"pos\" ) {\r\n\r\n\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\r\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\r\n\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\r\n\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t// blend\r\n\r\n\t\t\t\t\t\tvar vector = object.position;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\r\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\r\n\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\ttarget.normalize();\r\n\r\n\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( type === \"rot\" ) {\r\n\r\n\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\r\n\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\r\n\t\t\t\t\t\tobject.quaternion.copy(newQuat);\r\n\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( type === \"scl\" ) {\r\n\r\n\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n// Get next key with\r\n\r\nTHREE.Animation.prototype.getNextKeyWith = function ( type, h, key ) {\r\n\r\n\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\r\n\t} else {\r\n\r\n\t\tkey = key % keys.length;\r\n\r\n\t}\r\n\r\n\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\treturn keys[ key ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n};\r\n\r\n// Get previous key with\r\n\r\nTHREE.Animation.prototype.getPrevKeyWith = function ( type, h, key ) {\r\n\r\n\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\tkey = key > 0 ? key : 0;\r\n\r\n\t} else {\r\n\r\n\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t}\r\n\r\n\r\n\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\treturn keys[ key ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\r\n};\r\n\r\n// File:src/extras/animation/KeyFrameAnimation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\r\n\r\nTHREE.KeyFrameAnimation = function ( data ) {\r\n\r\n\tthis.root = data.node;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 0.001;\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused = true;\r\n\tthis.loop = true;\r\n\r\n\t// initialize to first keyframes\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[h].keys,\r\n\t\t\tsids = this.data.hierarchy[h].sids,\r\n\t\t\tobj = this.hierarchy[h];\r\n\r\n\t\tif ( keys.length && sids ) {\r\n\r\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\r\n\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\r\n\t\t\t\tif ( next ) {\r\n\r\n\t\t\t\t\tnext.apply( sid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\tthis.data.hierarchy[h].node.updateMatrix();\r\n\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.KeyFrameAnimation.prototype.play = function ( startTime ) {\r\n\r\n\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\r\n\tif ( this.isPlaying === false ) {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\t// reset key cache\r\n\r\n\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\tobject,\r\n\t\t\tnode;\r\n\r\n\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\r\n\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\tnode = this.data.hierarchy[ h ];\r\n\r\n\t\t\tif ( node.animationCache === undefined ) {\r\n\r\n\t\t\t\tnode.animationCache = {};\r\n\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar keys = this.data.hierarchy[h].keys;\r\n\r\n\t\t\tif (keys.length) {\r\n\r\n\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\r\n\t\t\t\tthis.startTime = Math.min( keys[0].time, this.startTime );\r\n\t\t\t\tthis.endTime = Math.max( keys[keys.length - 1].time, this.endTime );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.update( 0 );\r\n\r\n\t}\r\n\r\n\tthis.isPaused = false;\r\n\r\n\tTHREE.AnimationHandler.play( this );\r\n\r\n};\r\n\r\n\r\nTHREE.KeyFrameAnimation.prototype.stop = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused  = false;\r\n\r\n\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t// reset JIT matrix and remove cache\r\n\r\n\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\t\t\r\n\t\tvar obj = this.hierarchy[ h ];\r\n\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\tif ( node.animationCache !== undefined ) {\r\n\r\n\t\t\tvar original = node.animationCache.originalMatrix;\r\n\r\n\t\t\toriginal.copy( obj.matrix );\r\n\t\t\tobj.matrix = original;\r\n\r\n\t\t\tdelete node.animationCache;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Update\r\n\r\nTHREE.KeyFrameAnimation.prototype.update = function ( delta ) {\r\n\r\n\tif ( this.isPlaying === false ) return;\r\n\r\n\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t//\r\n\r\n\tvar duration = this.data.length;\r\n\r\n\tif ( this.loop === true && this.currentTime > duration ) {\r\n\r\n\t\tthis.currentTime %= duration;\r\n\r\n\t}\r\n\r\n\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar object = this.hierarchy[ h ];\r\n\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\tvar keys = node.keys,\r\n\t\t\tanimationCache = node.animationCache;\r\n\r\n\r\n\t\tif ( keys.length ) {\r\n\r\n\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\tvar nextKey = animationCache.nextKey;\r\n\r\n\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\r\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\tanimationCache.nextKey = nextKey;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\r\n\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// Get next key with\r\n\r\nTHREE.KeyFrameAnimation.prototype.getNextKeyWith = function( sid, h, key ) {\r\n\r\n\tvar keys = this.data.hierarchy[ h ].keys;\r\n\tkey = key % keys.length;\r\n\r\n\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\treturn keys[ key ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn keys[ 0 ];\r\n\r\n};\r\n\r\n// Get previous key with\r\n\r\nTHREE.KeyFrameAnimation.prototype.getPrevKeyWith = function( sid, h, key ) {\r\n\r\n\tvar keys = this.data.hierarchy[ h ].keys;\r\n\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\treturn keys[ key ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn keys[ keys.length - 1 ];\r\n\r\n};\r\n\r\n// File:src/extras/animation/MorphAnimation.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com\r\n * @author willy-vvu / http://willy-vvu.github.io\r\n */\r\n\r\nTHREE.MorphAnimation = function ( mesh ) {\r\n\r\n\tthis.mesh = mesh;\r\n\tthis.frames = mesh.morphTargetInfluences.length;\r\n\tthis.currentTime = 0;\r\n\tthis.duration = 1000;\r\n\tthis.loop = true;\r\n\tthis.lastFrame = 0;\r\n\tthis.currentFrame = 0;\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimation.prototype = {\r\n\r\n\tconstructor: THREE.MorphAnimation,\r\n\r\n\tplay: function () {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\r\n\t\t\tthis.currentTime %= this.duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\r\n\t\tvar interpolation = this.duration / this.frames;\r\n\t\tvar frame = Math.floor( this.currentTime / interpolation );\r\n\r\n\t\tif ( frame != this.currentFrame ) {\r\n\r\n\t\t\tthis.mesh.morphTargetInfluences[ this.lastFrame ] = 0;\r\n\t\t\tthis.mesh.morphTargetInfluences[ this.currentFrame ] = 1;\r\n\t\t\tthis.mesh.morphTargetInfluences[ frame ] = 0;\r\n\r\n\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\tthis.currentFrame = frame;\r\n\r\n\t\t}\r\n\r\n\t\tthis.mesh.morphTargetInfluences[ frame ] = ( this.currentTime % interpolation ) / interpolation;\r\n\t\tthis.mesh.morphTargetInfluences[ this.lastFrame ] = 1 - this.mesh.morphTargetInfluences[ frame ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\tthis.depthSegments = depthSegments || 1;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\tvar depth_half = depth / 2;\r\n\r\n\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\r\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n\t\tvar w, ix, iy,\r\n\t\tgridX = scope.widthSegments,\r\n\t\tgridY = scope.heightSegments,\r\n\t\twidth_half = width / 2,\r\n\t\theight_half = height / 2,\r\n\t\toffset = scope.vertices.length;\r\n\r\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'z';\r\n\r\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'y';\r\n\t\t\tgridY = scope.depthSegments;\r\n\r\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n\t\t\tw = 'x';\r\n\t\t\tgridX = scope.depthSegments;\r\n\r\n\t\t}\r\n\r\n\t\tvar gridX1 = gridX + 1,\r\n\t\tgridY1 = gridY + 1,\r\n\t\tsegment_width = width / gridX,\r\n\t\tsegment_height = height / gridY,\r\n\t\tnormal = new THREE.Vector3();\r\n\r\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\tvector[ w ] = depth;\r\n\r\n\t\t\t\tscope.vertices.push( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar i, uvs = [],\r\n\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\r\n\tthis.vertices.push(center);\r\n\tuvs.push( centerUV );\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\r\n\t\tvertex.x = radius * Math.cos( segment );\r\n\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\tthis.vertices.push( vertex );\r\n\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\n// File:src/extras/geometries/CubeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\n\r\nTHREE.CubeGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tconsole.warn( 'THREE.CubeGeometry has been renamed to THREE.BoxGeometry.' );\r\n\treturn new THREE.BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments );\r\n\r\n };\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = radialSegments || 8;\r\n\theightSegments = heightSegments || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\r\n\tvar heightHalf = height / 2;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\tvar na, nb;\r\n\r\n\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\tif ( radiusTop !== 0 ) {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = na.clone();\r\n\t\t\tvar n2 = na.clone();\r\n\t\t\tvar n3 = nb.clone();\r\n\t\t\tvar n4 = nb.clone();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// top cap\r\n\r\n\tif ( openEnded === false && radiusTop > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// bottom cap\r\n\r\n\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segements of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  material: <int> // material index for front and back faces\r\n *  extrudeMaterial: <int> // material index for extrusion and beveled faces\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = shapes instanceof Array ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\t}\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\tvar material = options.material;\r\n\tvar extrudeMaterial = options.extrudeMaterial;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false);\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initalization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\tvar bevelPoints = [];\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices ) ;\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length;  h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) console.log( \"die\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length,\r\n\t\tcont, clen = contour.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\tvar RAD_TO_DEGREES = 180 / Math.PI;\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\t\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shiftet by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\t\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\t\t\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\t\t\r\n\t\t// check for colinear edges\r\n\t\tvar colinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\t\r\n\t\tif ( Math.abs( colinear0 ) > EPSILON ) {\t\t// not colinear\r\n\t\t\t\r\n\t\t\t// length of vectors for normalizing\r\n\t\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\t\t\t\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\t\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\t\t\t\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\t\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\t\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\t// vector from inPt to intersection point\r\n\t\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\t\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y )\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\t\t\t} else {\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\t\t// handle special case of colinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > EPSILON ) {\r\n\t\t\t\tif ( v_next_x > EPSILON ) { direction_eq = true; }\r\n\t\t\t} else {\r\n\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\t\t\t\t\tif ( v_next_x < - EPSILON ) { direction_eq = true; }\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( Math.sign(v_prev_y) == Math.sign(v_next_y) ) { direction_eq = true; }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\t\t\t} else {\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tvar pt_i = contour[ i ];\r\n\t\tvar pt_j = contour[ j ];\r\n\t\tvar pt_k = contour[ k ];\r\n\r\n\t\tcontourMovements[ i ]= getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ]= getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI/2 ) ) ; // curved\r\n\t\t//bs = bevelSize * t ; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[0] ).multiplyScalar(vert.x);\r\n\t\t\tbinormal.copy( splineTube.binormals[0] ).multiplyScalar(vert.y);\r\n\r\n\t\t\tposition2.copy( extrudePts[0] ).add(normal).add(binormal);\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[s] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[s] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[s] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI/2 ) ;\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0 ; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ]+ offset, face[ 1 ]+ offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length;  h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( --i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\t// normal, color, material\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n \t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n \t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, extrudeMaterial ) );\r\n \t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, extrudeMaterial ) );\r\n\r\n \t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n \t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n \t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( shapes instanceof Array === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole, s;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tvar contour = vertices;\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\tvar cont, clen = contour.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points \r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = segments || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || 2 * Math.PI;\r\n\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\r\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar c = Math.cos( phi ),\r\n\t\t\ts = Math.sin( phi );\r\n\r\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar pt = points[ j ];\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\tvertex.z = pt.z;\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar np = points.length;\r\n\r\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\tvar base = j + np * i;\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + np;\r\n\t\t\tvar c = base + 1 + np;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\tvar v1 = v0 + inversePointLength;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tconsole.info( 'THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint.' );\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = widthSegments || 1;\r\n\tvar gridY = heightSegments || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset     ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2     ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset     ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'index', new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 0;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\r\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) { // concentric circles inside ring\r\n\r\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) { // number of segments per circle\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\t\t}\r\n\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\r\n\r\n\t\tvar thetaSegment = i * (thetaSegments + 1);\r\n\r\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) { // number of segments per circle\r\n\r\n\t\t\tvar segment = o + thetaSegment;\r\n\r\n\t\t\tvar v1 = segment;\r\n\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\r\n\r\n\t\t\tv1 = segment;\r\n\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\tv3 = segment + 1;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength \r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tfor ( x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\t\t\tvar v = y / heightSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = this.vertices[ v1 ].clone().normalize();\r\n\t\t\tvar n2 = this.vertices[ v2 ].clone().normalize();\r\n\t\t\tvar n3 = this.vertices[ v3 ].clone().normalize();\r\n\t\t\tvar n4 = this.vertices[ v4 ].clone().normalize();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv4 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\r\n\t\t\tif ( Math.abs( this.vertices[ v1 ].y ) === radius ) {\r\n\r\n\t\t\t\tuv1.x = ( uv1.x + uv2.x ) / 2;\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v3, v4, [ n1, n3, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv3, uv4 ] );\r\n\r\n\t\t\t} else if ( Math.abs( this.vertices[ v3 ].y ) === radius ) {\r\n\r\n\t\t\t\tuv3.x = ( uv3.x + uv4.x ) / 2;\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\r\n\r\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\r\n\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 8;\r\n\ttubularSegments = tubularSegments || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tp: p,\r\n\t\tq: q,\r\n\t\theightScale: heightScale\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 64;\r\n\ttubularSegments = tubularSegments || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\theightScale = heightScale || 1;\r\n\t\r\n\tvar grid = new Array( radialSegments );\r\n\tvar tang = new THREE.Vector3();\r\n\tvar n = new THREE.Vector3();\r\n\tvar bitan = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\ttang.subVectors( p2, p1 );\r\n\t\tn.addVectors( p2, p1 );\r\n\r\n\t\tbitan.crossVectors( tang, n );\r\n\t\tn.crossVectors( bitan, tang );\r\n\t\tbitan.normalize();\r\n\t\tn.normalize();\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\r\n\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\tvar d = grid[ i ][ jp ];\r\n\r\n\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = in_q / in_p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tx, y, z,\r\n\t\ttx, ty, tz,\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// consruct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? (i + 1) % segments : i + 1;\r\n\t\t\tjp = (j + 1) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\ttangent = new THREE.Vector3(),\r\n\t\tnormal = new THREE.Vector3(),\r\n\t\tbinormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tepsilon = 0.0001,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u, v;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\t\t// select an initial normal vector perpenicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i-1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i-1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i-1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > epsilon ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i-1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints-1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints-1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar midpoints = [], p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i     ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) { // 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3 ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow(2, detail);\r\n\t\tvar cells = Math.pow(4, detail);\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++) {\r\n\r\n\t\t\t\tif ( j == 0 && i == cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * (cols - i) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 == 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1][ k + 1],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t-1, -1, -1,    -1, -1,  1,\r\n\t\t-1,  1, -1,    -1,  1,  1,\r\n\t\t 1, -1, -1,     1, -1,  1,\r\n\t\t 1,  1, -1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, -r, -t,     0, -r,  t,\r\n\t\t 0,  r, -t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t-r, -t,  0,    -r,  t,  0,\r\n\t\t r, -t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t-t,  0, -r,     t,  0, -r,\r\n\t\t-t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0,- 1, 0,    0, 0, 1,    0, 0,- 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, il, j, p;\r\n\tvar u, v;\r\n\r\n\tvar stackCount = stacks + 1;\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = (i + 1) * sliceCount + j + 1;\r\n\t\t\td = (i + 1) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, - 0.5, 0 ) );\r\n\r\n\treturn function ( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\r\n\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\tthis.line.matrixAutoUpdate = false;\r\n\t\tthis.add( this.line );\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function ( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\tthis.line.updateMatrix();\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tthis.line.material.color.set( color );\r\n\tthis.cone.material.color.set( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( 72 ), 3 ) );\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ), THREE.LinePieces );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = function ( object ) {\r\n\r\n\tvar geometry = object.geometry;\r\n\r\n\tif ( geometry.boundingBox === null ) {\r\n\r\n\t\tgeometry.computeBoundingBox();\r\n\r\n\t}\r\n\r\n\tvar min = geometry.boundingBox.min;\r\n\tvar max = geometry.boundingBox.max;\r\n\r\n\t/*\r\n\t  5____4\r\n\t1/___0/|\r\n\t| 6__|_7\r\n\t2/___3/\r\n\r\n\t0: max.x, max.y, max.z\r\n\t1: min.x, max.y, max.z\r\n\t2: min.x, min.y, max.z\r\n\t3: max.x, min.y, max.z\r\n\t4: max.x, max.y, min.z\r\n\t5: min.x, max.y, min.z\r\n\t6: min.x, min.y, min.z\r\n\t7: max.x, min.y, min.z\r\n\t*/\r\n\r\n\tvar vertices = this.geometry.attributes.position.array;\r\n\r\n\tvertices[  0 ] = max.x; vertices[  1 ] = max.y; vertices[  2 ] = max.z;\r\n\tvertices[  3 ] = min.x; vertices[  4 ] = max.y; vertices[  5 ] = max.z;\r\n\r\n\tvertices[  6 ] = min.x; vertices[  7 ] = max.y; vertices[  8 ] = max.z;\r\n\tvertices[  9 ] = min.x; vertices[ 10 ] = min.y; vertices[ 11 ] = max.z;\r\n\r\n\tvertices[ 12 ] = min.x; vertices[ 13 ] = min.y; vertices[ 14 ] = max.z;\r\n\tvertices[ 15 ] = max.x; vertices[ 16 ] = min.y; vertices[ 17 ] = max.z;\r\n\r\n\tvertices[ 18 ] = max.x; vertices[ 19 ] = min.y; vertices[ 20 ] = max.z;\r\n\tvertices[ 21 ] = max.x; vertices[ 22 ] = max.y; vertices[ 23 ] = max.z;\r\n\r\n\t//\r\n\r\n\tvertices[ 24 ] = max.x; vertices[ 25 ] = max.y; vertices[ 26 ] = min.z;\r\n\tvertices[ 27 ] = min.x; vertices[ 28 ] = max.y; vertices[ 29 ] = min.z;\r\n\r\n\tvertices[ 30 ] = min.x; vertices[ 31 ] = max.y; vertices[ 32 ] = min.z;\r\n\tvertices[ 33 ] = min.x; vertices[ 34 ] = min.y; vertices[ 35 ] = min.z;\r\n\r\n\tvertices[ 36 ] = min.x; vertices[ 37 ] = min.y; vertices[ 38 ] = min.z;\r\n\tvertices[ 39 ] = max.x; vertices[ 40 ] = min.y; vertices[ 41 ] = min.z;\r\n\r\n\tvertices[ 42 ] = max.x; vertices[ 43 ] = min.y; vertices[ 44 ] = min.z;\r\n\tvertices[ 45 ] = max.x; vertices[ 46 ] = max.y; vertices[ 47 ] = min.z;\r\n\r\n\t//\r\n\r\n\tvertices[ 48 ] = max.x; vertices[ 49 ] = max.y; vertices[ 50 ] = max.z;\r\n\tvertices[ 51 ] = max.x; vertices[ 52 ] = max.y; vertices[ 53 ] = min.z;\r\n\r\n\tvertices[ 54 ] = min.x; vertices[ 55 ] = max.y; vertices[ 56 ] = max.z;\r\n\tvertices[ 57 ] = min.x; vertices[ 58 ] = max.y; vertices[ 59 ] = min.z;\r\n\r\n\tvertices[ 60 ] = min.x; vertices[ 61 ] = min.y; vertices[ 62 ] = max.z;\r\n\tvertices[ 63 ] = min.x; vertices[ 64 ] = min.y; vertices[ 65 ] = min.z;\r\n\r\n\tvertices[ 66 ] = max.x; vertices[ 67 ] = min.y; vertices[ 68 ] = max.z;\r\n\tvertices[ 69 ] = max.x; vertices[ 70 ] = min.y; vertices[ 71 ] = min.z;\r\n\r\n\tthis.geometry.attributes.position.needsUpdate = true;\r\n\r\n\tthis.geometry.computeBoundingSphere();\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n\tthis.camera = camera;\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\t\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tvar setPoint = function ( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(),\r\n\t\tnew THREE.Vector3()\r\n\t);\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) { return a - b };\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar geometry2 = object.geometry.clone();\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\tvar numEdges = 0;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\tvar index = 0;\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) < 0.9999 ) { // hardwired const OK\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords[ index ++ ] = vertex.x;\r\n\t\t\tcoords[ index ++ ] = vertex.y;\r\n\t\t\tcoords[ index ++ ] = vertex.z;\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords[ index ++ ] = vertex.x;\r\n\t\t\tcoords[ index ++ ] = vertex.y;\r\n\t\t\tcoords[ index ++ ] = vertex.z;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ), THREE.LinePieces );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tvar faces = this.object.geometry.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3(), new THREE.Vector3() );\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.normalMatrix = new THREE.Matrix3();\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = function () {\r\n\r\n\tvar vertices = this.geometry.vertices;\r\n\r\n\tvar object = this.object;\r\n\tvar objectVertices = object.geometry.vertices;\r\n\tvar objectFaces = object.geometry.faces;\r\n\tvar objectWorldMatrix = object.matrixWorld;\r\n\r\n\tobject.updateMatrixWorld( true );\r\n\r\n\tthis.normalMatrix.getNormalMatrix( objectWorldMatrix );\r\n\r\n\tfor ( var i = 0, i2 = 0, l = objectFaces.length; i < l; i ++, i2 += 2 ) {\r\n\r\n\t\tvar face = objectFaces[ i ];\r\n\r\n\t\tvertices[ i2 ].copy( objectVertices[ face.a ] )\r\n\t\t\t.add( objectVertices[ face.b ] )\r\n\t\t\t.add( objectVertices[ face.c ] )\r\n\t\t\t.divideScalar( 3 )\r\n\t\t\t.applyMatrix4( objectWorldMatrix );\r\n\r\n\t\tvertices[ i2 + 1 ].copy( face.normal )\r\n\t\t\t.applyMatrix3( this.normalMatrix )\r\n\t\t\t.normalize()\r\n\t\t\t.multiplyScalar( this.size )\r\n\t\t\t.add( vertices[ i2 ] );\r\n\r\n\t}\r\n\r\n\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n}\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize, arrowLength, domeSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, - 0.5, 0 ) );\r\n\tgeometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tvar vertices = object.geometry.vertices;\r\n\r\n\tvar faces = object.geometry.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3(), new THREE.Vector3() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.normalMatrix = new THREE.Matrix3();\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function ( object ) {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function( object ) {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c', 'd' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tthis.normalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar vertices = this.geometry.vertices;\r\n\r\n\t\tvar verts = this.object.geometry.vertices;\r\n\r\n\t\tvar faces = this.object.geometry.faces;\r\n\r\n\t\tvar worldMatrix = this.object.matrixWorld;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar vertexId = face[ keys[ j ] ];\r\n\t\t\t\tvar vertex = verts[ vertexId ];\r\n\r\n\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\tvertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\r\n\r\n\t\t\t\tv1.copy( normal ).applyMatrix3( this.normalMatrix ).normalize().multiplyScalar( this.size );\r\n\r\n\t\t\t\tv1.add( vertices[ idx ] );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tvertices[ idx ].copy( v1 );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}());\r\n\r\n// File:src/extras/helpers/VertexTangentsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexTangentsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x0000ff;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tvar vertices = object.geometry.vertices;\r\n\r\n\tvar faces = object.geometry.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexTangentsHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.VertexTangentsHelper.prototype.constructor = THREE.VertexTangentsHelper;\r\n\r\nTHREE.VertexTangentsHelper.prototype.update = ( function ( object ) {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function( object ) {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c', 'd' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tvar vertices = this.geometry.vertices;\r\n\r\n\t\tvar verts = this.object.geometry.vertices;\r\n\r\n\t\tvar faces = this.object.geometry.faces;\r\n\r\n\t\tvar worldMatrix = this.object.matrixWorld;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar vertexId = face[ keys[ j ] ];\r\n\t\t\t\tvar vertex = verts[ vertexId ];\r\n\r\n\t\t\t\tvar tangent = face.vertexTangents[ j ];\r\n\r\n\t\t\t\tvertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\r\n\r\n\t\t\t\tv1.copy( tangent ).transformDirection( worldMatrix ).multiplyScalar( this.size );\r\n\r\n\t\t\t\tv1.add( vertices[ idx ] );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tvertices[ idx ].copy( v1 );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}());\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) { return a - b };\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = object.geometry.vertices;\r\n\t\tvar faces = object.geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( object.geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( object.geometry.attributes.index !== undefined ) { // Indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = object.geometry.attributes.position.array;\r\n\t\t\tvar indices = object.geometry.attributes.index.array;\r\n\t\t\tvar drawcalls = object.geometry.drawcalls;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( drawcalls.length === 0 ) {\r\n\r\n\t\t\t\tdrawcalls = [ { count : indices.length, index : 0, start : 0 } ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar start = drawcalls[ o ].start;\r\n\t\t\t\tvar count = drawcalls[ o ].count;\r\n\t\t\t\tvar index = drawcalls[ o ].index;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = index + indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = index + indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = 3 * edges[ 2 * i + j];\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else { // non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = object.geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ), THREE.LinePieces );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstartFrame: start,\r\n\t\tendFrame: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\t\t\tvar num = chunks[ 2 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"animation[\" + name + \"] undefined\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.startFrame + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n"],
  "mappings": "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;AAAG,eAAW,CAAE,IAAI,IAAI;AACrE,eAAW,CAAE,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAErE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AACrE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAErE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AACrE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAIrE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AACrE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAErE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AACrE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAErE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AACrE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAErE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AACrE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAIrE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AACrE,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAAG,eAAU,EAAG,IAAI,IAAI;AAErE,eAAU,EAAG,IAAI,IAAI;AAAG,eAA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",
  "names": ["p", "q", "point", "intPoint", "THREE", "scale", "i", "index", "lights", "attributes", "object", "parameters", "program", "il", "subPaths", "shapes", "tmpPath", "tmpShape", "contour", "holes", "h", "hl", "h2", "root", "hierarchy", "points", "width", "height", "depth", "width_half", "height_half", "j", "k", "s", "b", "z", "u", "radius", "heightScale", "x", "y", "v1", "v2", "v3", "detail", "azimuth"]
}
